{"version":3,"sources":["../../node_modules/csv-stream/lib/parser.js","../../node_modules/csv-stream/index.js","../../node_modules/post-entity/lib/post-entity.js","../../node_modules/post-entity/index.js","../../node_modules/better-sqlite3/lib/util.js","../../node_modules/better-sqlite3/lib/sqlite-error.js","../../node_modules/file-uri-to-path/index.js","../../node_modules/bindings/bindings.js","../../node_modules/better-sqlite3/lib/methods/wrappers.js","../../node_modules/better-sqlite3/lib/methods/transaction.js","../../node_modules/better-sqlite3/lib/methods/pragma.js","../../node_modules/better-sqlite3/lib/methods/backup.js","../../node_modules/better-sqlite3/lib/methods/serialize.js","../../node_modules/better-sqlite3/lib/methods/function.js","../../node_modules/better-sqlite3/lib/methods/aggregate.js","../../node_modules/better-sqlite3/lib/methods/table.js","../../node_modules/better-sqlite3/lib/methods/inspect.js","../../node_modules/better-sqlite3/lib/database.js","../../node_modules/better-sqlite3/lib/index.js","../../node_modules/universalify/index.js","../../node_modules/graceful-fs/polyfills.js","../../node_modules/graceful-fs/legacy-streams.js","../../node_modules/graceful-fs/clone.js","../../node_modules/graceful-fs/graceful-fs.js","../../node_modules/fs-extra/lib/fs/index.js","../../node_modules/fs-extra/lib/mkdirs/utils.js","../../node_modules/fs-extra/lib/mkdirs/make-dir.js","../../node_modules/fs-extra/lib/mkdirs/index.js","../../node_modules/fs-extra/lib/path-exists/index.js","../../node_modules/fs-extra/lib/util/utimes.js","../../node_modules/fs-extra/lib/util/stat.js","../../node_modules/fs-extra/lib/copy/copy.js","../../node_modules/fs-extra/lib/copy/copy-sync.js","../../node_modules/fs-extra/lib/copy/index.js","../../node_modules/fs-extra/lib/remove/index.js","../../node_modules/fs-extra/lib/empty/index.js","../../node_modules/fs-extra/lib/ensure/file.js","../../node_modules/fs-extra/lib/ensure/link.js","../../node_modules/fs-extra/lib/ensure/symlink-paths.js","../../node_modules/fs-extra/lib/ensure/symlink-type.js","../../node_modules/fs-extra/lib/ensure/symlink.js","../../node_modules/fs-extra/lib/ensure/index.js","../../node_modules/jsonfile/utils.js","../../node_modules/jsonfile/index.js","../../node_modules/fs-extra/lib/json/jsonfile.js","../../node_modules/fs-extra/lib/output-file/index.js","../../node_modules/fs-extra/lib/json/output-json.js","../../node_modules/fs-extra/lib/json/output-json-sync.js","../../node_modules/fs-extra/lib/json/index.js","../../node_modules/fs-extra/lib/move/move.js","../../node_modules/fs-extra/lib/move/move-sync.js","../../node_modules/fs-extra/lib/move/index.js","../../node_modules/fs-extra/lib/index.js","../../node_modules/wink-nlp/src/constants.js","../../node_modules/wink-nlp/src/dd-wrapper.js","../../node_modules/wink-nlp/src/locate.js","../../node_modules/wink-nlp/src/contained-entities.js","../../node_modules/wink-nlp/src/search.js","../../node_modules/wink-nlp/src/api/get-parent-item.js","../../node_modules/wink-nlp/src/api/col-get-item.js","../../node_modules/wink-nlp/src/api/sel-get-item.js","../../node_modules/wink-nlp/src/api/col-each.js","../../node_modules/wink-nlp/src/api/sel-each.js","../../node_modules/wink-nlp/src/api/col-filter.js","../../node_modules/wink-nlp/src/api/sel-filter.js","../../node_modules/wink-nlp/src/sort4FT.js","../../node_modules/wink-nlp/src/its.js","../../node_modules/wink-nlp/src/contained-markings.js","../../node_modules/wink-nlp/src/as.js","../../node_modules/wink-nlp/src/allowed.js","../../node_modules/wink-nlp/src/api/itm-token-out.js","../../node_modules/wink-nlp/src/api/col-tokens-out.js","../../node_modules/wink-nlp/src/api/sel-tokens-out.js","../../node_modules/wink-nlp/src/api/itm-entity-out.js","../../node_modules/wink-nlp/src/api/col-entities-out.js","../../node_modules/wink-nlp/src/api/sel-entities-out.js","../../node_modules/wink-nlp/src/api/itm-sentence-out.js","../../node_modules/wink-nlp/src/api/col-sentences-out.js","../../node_modules/wink-nlp/src/api/itm-document-out.js","../../node_modules/wink-nlp/src/api/print-tokens.js","../../node_modules/wink-nlp/src/doc-v2.js","../../node_modules/wink-nlp/src/cache.js","../../node_modules/wink-nlp/src/recursive-tokenizer.js","../../node_modules/wink-nlp/src/tokenizer.js","../../node_modules/wink-nlp/src/compile-trex.js","../../node_modules/wink-nlp/src/tokens-mappers.js","../../node_modules/wink-nlp/src/compose-patterns.js","../../node_modules/wink-nlp/src/identify-marked-area.js","../../node_modules/wink-nlp/src/automaton.js","../../node_modules/wink-nlp/src/examples-compiler.js","../../node_modules/wink-nlp/src/helper.js","../../node_modules/wink-nlp/src/wink-nlp.js","../../node_modules/wink-eng-lite-web-model/dist/read-core-model.js","../../node_modules/wink-eng-lite-web-model/dist/load-core-model.js","../../node_modules/wink-eng-lite-web-model/dist/ner-transformers.js","../../node_modules/wink-eng-lite-web-model/dist/load-ner-model.js","../../node_modules/wink-eng-lite-web-model/dist/sbd-transformers.js","../../node_modules/wink-eng-lite-web-model/dist/sbd-setter.js","../../node_modules/wink-eng-lite-web-model/dist/load-sbd-model.js","../../node_modules/wink-eng-lite-web-model/dist/pos-transformers.js","../../node_modules/wink-eng-lite-web-model/dist/pos-setter.js","../../node_modules/wink-eng-lite-web-model/dist/pos-updater.js","../../node_modules/wink-eng-lite-web-model/dist/load-pos-model.js","../../node_modules/wink-eng-lite-web-model/dist/negation-setter.js","../../node_modules/wink-eng-lite-web-model/dist/load-negation-model.js","../../node_modules/wink-eng-lite-web-model/dist/sa-setter.js","../../node_modules/wink-eng-lite-web-model/dist/load-sa-model.js","../../node_modules/wink-eng-lite-web-model/dist/constants.js","../../node_modules/wink-eng-lite-web-model/dist/cer-transformers.js","../../node_modules/wink-eng-lite-web-model/dist/load-cer-meta-model.js","../../node_modules/wink-eng-lite-web-model/dist/token-categories.js","../../node_modules/wink-eng-lite-web-model/dist/feature.js","../../node_modules/wink-eng-lite-web-model/dist/porter-stemmer.js","../../node_modules/wink-eng-lite-web-model/dist/wn-adjective-exceptions.js","../../node_modules/wink-eng-lite-web-model/dist/wn-noun-exceptions.js","../../node_modules/wink-eng-lite-web-model/dist/wn-verb-exceptions.js","../../node_modules/wink-eng-lite-web-model/dist/lemmatize.js","../../node_modules/wink-eng-lite-web-model/dist/syllables.js","../../node_modules/wink-eng-lite-web-model/dist/readability-stats.js","../../node_modules/wink-eng-lite-web-model/dist/model.js","../../src/csv.ts","../../src/sqlite.ts","../../src/wordCache.ts"],"sourcesContent":["/*!\n * csv-stream\n * Copyright(c) 2012 HipSnip Limited\n * Author RÃ©my Loubradou <remyloubradou@gmail.com>\n * MIT Licensed\n */\n\n/**\n * Modules dependencies\n */\n\nvar EventEmitter = require('events').EventEmitter,\n\tutil = require('util');\n\nmodule.exports = Parser;\n\nfunction Parser(options){\n\tEventEmitter.call(this);\n\tthis.delimiter = options ? options.delimiter || ',' : ',';\n\tthis.endLine = options ? options.endLine || '\\n' : '\\n';\n\tthis.enclosedChar = options ? options.enclosedChar || '' : '';\n\tthis.escapeChar = options ? options.escapeChar || '' : '';\n\tthis.columnOffset = options ? options.columnOffset || 0 : 0;\n\n\tthis._defaultColumns =  options ? !!options.columns : false;\n\tthis.columns = options ? options.columns || [] : [];\n\tthis._currentColumn = 0;\n\tthis._index = 0;\n\tthis._line = {};\n\tthis._text = '';\n\tthis._enclosing = null;\n}\n\n\n// Inherits from EventEmitter\nutil.inherits(Parser,EventEmitter);\n\nParser.prototype.end = function(s){\n\tif(s) this.parse(s);\n\tif(this._text || Object.getOwnPropertyNames(this._line).length){\n\t\tif(this._text[this._text.length -1] === '\\r') this._text = this._text.slice(0,this._text.length - 1);\n\t\tthis.emit('column',this.columns[this._currentColumn],this._text);\n\t\tthis._line[this.columns[this._currentColumn]] = this._text;\n\t\tthis.emit('data',this._line);\n\t}\n\tthis.emit('end');\n}\n\nParser.prototype.parse = function(s){\n\tfor(var i = 0; i < s.length; i++){\n\t\tvar c = s[i];\n\t\tif(this.escapeChar === c && this._enclosing && s[i+1] === this.enclosedChar){\n\t\t\ti++;\n\t\t\tthis._text = this._text + s[i];\n\t\t}else{\n\t\t\tif(this.enclosedChar === c){\n\t\t\t\tthis._enclosing = !this._enclosing;\n\t\t\t}else if(this.delimiter === c){\n\t\t\t\tif(this._enclosing){\n\t\t\t\t\tthis._text = this._text + c;\n\t\t\t\t}else{\n\t\t\t\t\tif(this._index < this.columnOffset){\n\t\t\t\t\t\t//skip line\n\t\t\t\t\t}else if(this._index === this.columnOffset && !this._defaultColumns){\n\t\t\t\t\t\tthis.columns[this._currentColumn] = this._text;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tthis.emit('column',this.columns[this._currentColumn],this._text);\n\t\t\t\t\t\tthis._line[this.columns[this._currentColumn]] = this._text;\n\t\t\t\t\t}\n\t\t\t\t\tthis._text = '';\n\t\t\t\t\tthis._currentColumn++;\n\t\t\t\t}\n\t\t\t}else if(this.endLine === c){ //LF\n\t\t\t\tif(this._enclosing){\n\t\t\t\t\tthis._text = this._text + c;\n\t\t\t\t}else{\n\t\t\t\t\tif(this._text[this._text.length -1] === '\\r') this._text = this._text.slice(0,this._text.length - 1);\n\t\t\t\t\tif(this._index < this.columnOffset){\n\t\t\t\t\t\t//skip line\n\t\t\t\t\t}else if(this._index === this.columnOffset && !this._defaultColumns){\n\t\t\t\t\t\tthis.columns[this._currentColumn] = this._text;\n\t\t\t\t\t\tthis.emit('header',this.columns);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tthis.emit('column',this.columns[this._currentColumn],this._text);\n\t\t\t\t\t\tthis._line[this.columns[this._currentColumn]] = this._text;\n\t\t\t\t\t\tthis.emit('data',this._line);\n\t\t\t\t\t}\n\t\t\t\t\tthis._index++;\n\t\t\t\t\tthis._currentColumn = 0;\n\t\t\t\t\tthis._line = {};\n\t\t\t\t\tthis._text = '';\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tthis._text = this._text + c;\n\t\t\t}\n\t\t}\n\n\t}\n}\n","/*!\n * csv-stream\n * Copyright(c) 2012 HipSnip Limited\n * Author RÃ©my Loubradou <remyloubradou@gmail.com>\n * MIT Licensed\n */\n\n/**\n * Modules dependencies\n */\n\nvar Stream = require('stream'),\n\tutil = require('util'),\n\tParser = require('./lib/parser');\n\nexports.createStream = function(options){\n\treturn new CSVStream(options || {});\n}\n\nfunction CSVStream(options){\n\tvar self = this;\n\tStream.call(this);\n\n\t// States\n\tthis.writable = true;\n\tthis.readable = true;\n\tthis._paused = false;\n\tthis._ended = false;\n\tthis._destroyed = false;\n\tthis._endCallWhenPause = false;\n\n\t// Buffer\n\tthis._buffer = new Buffer(0);\n\tthis._encoding = undefined; // Encoding needs to be undefined for Buffer.toString method\n\n\t// CSV parser\n\tthis._parser = new Parser(options);\n\tthis._parser.on('data',function(data){\n\t\tif(self._ended) throw new Error('Must not emit data event after emittion of end event.')\n\t\tself.emit('data',data);\n\t});\n\tthis._parser.on('column',function(key,value){\n\t\tself.emit('column',key,value);\n\t});\n\tthis._parser.on('header',function(header){\n\t\tself.emit('header',header);\n\t});\n\tthis._parser.on('end',function(){\n\t\tself._ended = true;\n\t\tself.readable = false;\n\t\tself.emit('end');\n\t});\n}\n\nutil.inherits(CSVStream,Stream);\n\nCSVStream.prototype.write = function(buffer,encoding){\n\tthis._encoding = encoding || this._encoding;\n\tif(this._ended) throw new Error('Cannot write after end has been called.');\n\tif(buffer) this._buffer = Buffer.concat([this._buffer, buffer], this._buffer.length + buffer.length);\n\tif(this._paused) return false;\n\tthis._parser.parse(this._buffer.toString(this._encoding));\n\tthis._buffer = new Buffer(0);\n\treturn !this._paused;\n}\n\nCSVStream.prototype.end = function(buffer,encoding){\n\tif(this._buffer || buffer){\n\t\tif(this.write(buffer,encoding)){\n\t\t\tthis.writable = false;\n\t\t\tthis._parser.end();\n\t\t\tif(!this._destroyed) this.destroy();\n\t\t}else{\n\t\t\tthis._endCallWhenPause = true;\n\t\t}\n\t}\n}\n\nCSVStream.prototype.destroy = function(){\n\tthis._buffer = null;\n\tthis._destroyed = true;\n\tthis.emit('close');\n}\n\nCSVStream.prototype.pause = function(){\n\tthis._paused = true;\n}\n\nCSVStream.prototype.resume = function(){\n\tthis._paused = false;\n\tif(this._buffer && this._buffer.length > 0 && !this._endCallWhenPause) this.write();\n\tif(this._endCallWhenPause) this.end();\n\tthis.emit('drain');\n}\n","var pe = {\n\n  /**\n   * Types are name & regular expression objected used to extract entities.\n   * All types must be a global regex for the entity extraction to work\n   */\n  types: [\n    { name: 'hashtag',\n      regexp: /#\\w+/g },\n    { name: 'cashtag',\n      regexp: /\\$[A-Z]+/g },\n    { name: 'mention',\n      regexp: /@\\w+/g },\n    { name: 'link',\n      regexp: /(\\b(https?|ftp|file):\\/\\/[-A-Z0-9+&@#\\/%?=~_|!:,.;]*[-A-Z0-9+&@#\\/%=~_|])/ig }\n  ],\n\n  /**\n   * Extracts entities as specified in the types object from a string.\n   * Optionally pass in your own array of types in the same form as pe.types\n   * to have it extract anything.\n   *\n   * Return an array of entities, ordered by index.\n   */\n  entities: function (str, types) {\n    if (!str && str !== '') throw new Error(\"Entities requires a non-empty string.\");\n    types = types || pe.types;\n    if (!types) throw new Error(\"No types found.\");\n    var entities = [];\n    types.forEach(function (type) {\n      var match;\n      while ((match = type.regexp.exec(str)) !== null) {\n        entities.push({\n          type: type.name,\n          index: match.index,\n          raw: match[0]\n        });\n      }\n    });\n    return entities.sort(function (a, b) {\n      return a.index > b.index;\n    });\n  },\n\n  /**\n   * Turns a string into a parsed array of enties: those defined in types and\n   * text blocks.\n   *\n   * Returns an array of entities.\n   */\n  process: function (str, types) {\n    var entities = pe.entities(str, types),\n        segments = [],\n        remaining = str,\n        removed = 0;\n    entities.forEach(function (entity) {\n      // Figure out where the entity begins and ends\n      var entityStart = entity.index - removed,\n          entityEnd = entityStart + entity.raw.length,\n          pre = remaining.slice(0, entityStart);\n      // There's some text before this â add it\n      if (pre) {\n        segments.push({\n          type: 'text',\n          raw: pre,\n          index: removed\n        });\n      }\n      // Push the current entity\n      segments.push(entity);\n      // Update what was remove and what's left over for the next entity\n      remaining = remaining.slice(entityEnd);\n      removed += entityEnd;\n    });\n    segments.push({\n      type: 'text',\n      raw: remaining,\n      index: removed\n    });\n    return segments;\n  }\n};\n\nmodule.exports = pe;","module.exports = require('./lib/post-entity.js');","'use strict';\n\nexports.getBooleanOption = (options, key) => {\n\tlet value = false;\n\tif (key in options && typeof (value = options[key]) !== 'boolean') {\n\t\tthrow new TypeError(`Expected the \"${key}\" option to be a boolean`);\n\t}\n\treturn value;\n};\n\nexports.cppdb = Symbol();\nexports.inspect = Symbol.for('nodejs.util.inspect.custom');\n","'use strict';\nconst descriptor = { value: 'SqliteError', writable: true, enumerable: false, configurable: true };\n\nfunction SqliteError(message, code) {\n\tif (new.target !== SqliteError) {\n\t\treturn new SqliteError(message, code);\n\t}\n\tif (typeof code !== 'string') {\n\t\tthrow new TypeError('Expected second argument to be a string');\n\t}\n\tError.call(this, message);\n\tdescriptor.value = '' + message;\n\tObject.defineProperty(this, 'message', descriptor);\n\tError.captureStackTrace(this, SqliteError);\n\tthis.code = code;\n}\nObject.setPrototypeOf(SqliteError, Error);\nObject.setPrototypeOf(SqliteError.prototype, Error.prototype);\nObject.defineProperty(SqliteError.prototype, 'name', descriptor);\nmodule.exports = SqliteError;\n","\n/**\n * Module dependencies.\n */\n\nvar sep = require('path').sep || '/';\n\n/**\n * Module exports.\n */\n\nmodule.exports = fileUriToPath;\n\n/**\n * File URI to Path function.\n *\n * @param {String} uri\n * @return {String} path\n * @api public\n */\n\nfunction fileUriToPath (uri) {\n  if ('string' != typeof uri ||\n      uri.length <= 7 ||\n      'file://' != uri.substring(0, 7)) {\n    throw new TypeError('must pass in a file:// URI to convert to a file path');\n  }\n\n  var rest = decodeURI(uri.substring(7));\n  var firstSlash = rest.indexOf('/');\n  var host = rest.substring(0, firstSlash);\n  var path = rest.substring(firstSlash + 1);\n\n  // 2.  Scheme Definition\n  // As a special case, <host> can be the string \"localhost\" or the empty\n  // string; this is interpreted as \"the machine from which the URL is\n  // being interpreted\".\n  if ('localhost' == host) host = '';\n\n  if (host) {\n    host = sep + sep + host;\n  }\n\n  // 3.2  Drives, drive letters, mount points, file system root\n  // Drive letters are mapped into the top of a file URI in various ways,\n  // depending on the implementation; some applications substitute\n  // vertical bar (\"|\") for the colon after the drive letter, yielding\n  // \"file:///c|/tmp/test.txt\".  In some cases, the colon is left\n  // unchanged, as in \"file:///c:/tmp/test.txt\".  In other cases, the\n  // colon is simply omitted, as in \"file:///c/tmp/test.txt\".\n  path = path.replace(/^(.+)\\|/, '$1:');\n\n  // for Windows, we need to invert the path separators from what a URI uses\n  if (sep == '\\\\') {\n    path = path.replace(/\\//g, '\\\\');\n  }\n\n  if (/^.+\\:/.test(path)) {\n    // has Windows drive at beginning of path\n  } else {\n    // unix pathâ¦\n    path = sep + path;\n  }\n\n  return host + path;\n}\n","/**\n * Module dependencies.\n */\n\nvar fs = require('fs'),\n  path = require('path'),\n  fileURLToPath = require('file-uri-to-path'),\n  join = path.join,\n  dirname = path.dirname,\n  exists =\n    (fs.accessSync &&\n      function(path) {\n        try {\n          fs.accessSync(path);\n        } catch (e) {\n          return false;\n        }\n        return true;\n      }) ||\n    fs.existsSync ||\n    path.existsSync,\n  defaults = {\n    arrow: process.env.NODE_BINDINGS_ARROW || ' â ',\n    compiled: process.env.NODE_BINDINGS_COMPILED_DIR || 'compiled',\n    platform: process.platform,\n    arch: process.arch,\n    nodePreGyp:\n      'node-v' +\n      process.versions.modules +\n      '-' +\n      process.platform +\n      '-' +\n      process.arch,\n    version: process.versions.node,\n    bindings: 'bindings.node',\n    try: [\n      // node-gyp's linked version in the \"build\" dir\n      ['module_root', 'build', 'bindings'],\n      // node-waf and gyp_addon (a.k.a node-gyp)\n      ['module_root', 'build', 'Debug', 'bindings'],\n      ['module_root', 'build', 'Release', 'bindings'],\n      // Debug files, for development (legacy behavior, remove for node v0.9)\n      ['module_root', 'out', 'Debug', 'bindings'],\n      ['module_root', 'Debug', 'bindings'],\n      // Release files, but manually compiled (legacy behavior, remove for node v0.9)\n      ['module_root', 'out', 'Release', 'bindings'],\n      ['module_root', 'Release', 'bindings'],\n      // Legacy from node-waf, node <= 0.4.x\n      ['module_root', 'build', 'default', 'bindings'],\n      // Production \"Release\" buildtype binary (meh...)\n      ['module_root', 'compiled', 'version', 'platform', 'arch', 'bindings'],\n      // node-qbs builds\n      ['module_root', 'addon-build', 'release', 'install-root', 'bindings'],\n      ['module_root', 'addon-build', 'debug', 'install-root', 'bindings'],\n      ['module_root', 'addon-build', 'default', 'install-root', 'bindings'],\n      // node-pre-gyp path ./lib/binding/{node_abi}-{platform}-{arch}\n      ['module_root', 'lib', 'binding', 'nodePreGyp', 'bindings']\n    ]\n  };\n\n/**\n * The main `bindings()` function loads the compiled bindings for a given module.\n * It uses V8's Error API to determine the parent filename that this function is\n * being invoked from, which is then used to find the root directory.\n */\n\nfunction bindings(opts) {\n  // Argument surgery\n  if (typeof opts == 'string') {\n    opts = { bindings: opts };\n  } else if (!opts) {\n    opts = {};\n  }\n\n  // maps `defaults` onto `opts` object\n  Object.keys(defaults).map(function(i) {\n    if (!(i in opts)) opts[i] = defaults[i];\n  });\n\n  // Get the module root\n  if (!opts.module_root) {\n    opts.module_root = exports.getRoot(exports.getFileName());\n  }\n\n  // Ensure the given bindings name ends with .node\n  if (path.extname(opts.bindings) != '.node') {\n    opts.bindings += '.node';\n  }\n\n  // https://github.com/webpack/webpack/issues/4175#issuecomment-342931035\n  var requireFunc =\n    typeof __webpack_require__ === 'function'\n      ? __non_webpack_require__\n      : require;\n\n  var tries = [],\n    i = 0,\n    l = opts.try.length,\n    n,\n    b,\n    err;\n\n  for (; i < l; i++) {\n    n = join.apply(\n      null,\n      opts.try[i].map(function(p) {\n        return opts[p] || p;\n      })\n    );\n    tries.push(n);\n    try {\n      b = opts.path ? requireFunc.resolve(n) : requireFunc(n);\n      if (!opts.path) {\n        b.path = n;\n      }\n      return b;\n    } catch (e) {\n      if (e.code !== 'MODULE_NOT_FOUND' &&\n          e.code !== 'QUALIFIED_PATH_RESOLUTION_FAILED' &&\n          !/not find/i.test(e.message)) {\n        throw e;\n      }\n    }\n  }\n\n  err = new Error(\n    'Could not locate the bindings file. Tried:\\n' +\n      tries\n        .map(function(a) {\n          return opts.arrow + a;\n        })\n        .join('\\n')\n  );\n  err.tries = tries;\n  throw err;\n}\nmodule.exports = exports = bindings;\n\n/**\n * Gets the filename of the JavaScript file that invokes this function.\n * Used to help find the root directory of a module.\n * Optionally accepts an filename argument to skip when searching for the invoking filename\n */\n\nexports.getFileName = function getFileName(calling_file) {\n  var origPST = Error.prepareStackTrace,\n    origSTL = Error.stackTraceLimit,\n    dummy = {},\n    fileName;\n\n  Error.stackTraceLimit = 10;\n\n  Error.prepareStackTrace = function(e, st) {\n    for (var i = 0, l = st.length; i < l; i++) {\n      fileName = st[i].getFileName();\n      if (fileName !== __filename) {\n        if (calling_file) {\n          if (fileName !== calling_file) {\n            return;\n          }\n        } else {\n          return;\n        }\n      }\n    }\n  };\n\n  // run the 'prepareStackTrace' function above\n  Error.captureStackTrace(dummy);\n  dummy.stack;\n\n  // cleanup\n  Error.prepareStackTrace = origPST;\n  Error.stackTraceLimit = origSTL;\n\n  // handle filename that starts with \"file://\"\n  var fileSchema = 'file://';\n  if (fileName.indexOf(fileSchema) === 0) {\n    fileName = fileURLToPath(fileName);\n  }\n\n  return fileName;\n};\n\n/**\n * Gets the root directory of a module, given an arbitrary filename\n * somewhere in the module tree. The \"root directory\" is the directory\n * containing the `package.json` file.\n *\n *   In:  /home/nate/node-native-module/lib/index.js\n *   Out: /home/nate/node-native-module\n */\n\nexports.getRoot = function getRoot(file) {\n  var dir = dirname(file),\n    prev;\n  while (true) {\n    if (dir === '.') {\n      // Avoids an infinite loop in rare cases, like the REPL\n      dir = process.cwd();\n    }\n    if (\n      exists(join(dir, 'package.json')) ||\n      exists(join(dir, 'node_modules'))\n    ) {\n      // Found the 'package.json' file or 'node_modules' dir; we're done\n      return dir;\n    }\n    if (prev === dir) {\n      // Got to the top\n      throw new Error(\n        'Could not find module root given file: \"' +\n          file +\n          '\". Do you have a `package.json` file? '\n      );\n    }\n    // Try the parent dir next\n    prev = dir;\n    dir = join(dir, '..');\n  }\n};\n","'use strict';\nconst { cppdb } = require('../util');\n\nexports.prepare = function prepare(sql) {\n\treturn this[cppdb].prepare(sql, this, false);\n};\n\nexports.exec = function exec(sql) {\n\tthis[cppdb].exec(sql);\n\treturn this;\n};\n\nexports.close = function close() {\n\tthis[cppdb].close();\n\treturn this;\n};\n\nexports.loadExtension = function loadExtension(...args) {\n\tthis[cppdb].loadExtension(...args);\n\treturn this;\n};\n\nexports.defaultSafeIntegers = function defaultSafeIntegers(...args) {\n\tthis[cppdb].defaultSafeIntegers(...args);\n\treturn this;\n};\n\nexports.unsafeMode = function unsafeMode(...args) {\n\tthis[cppdb].unsafeMode(...args);\n\treturn this;\n};\n\nexports.getters = {\n\tname: {\n\t\tget: function name() { return this[cppdb].name; },\n\t\tenumerable: true,\n\t},\n\topen: {\n\t\tget: function open() { return this[cppdb].open; },\n\t\tenumerable: true,\n\t},\n\tinTransaction: {\n\t\tget: function inTransaction() { return this[cppdb].inTransaction; },\n\t\tenumerable: true,\n\t},\n\treadonly: {\n\t\tget: function readonly() { return this[cppdb].readonly; },\n\t\tenumerable: true,\n\t},\n\tmemory: {\n\t\tget: function memory() { return this[cppdb].memory; },\n\t\tenumerable: true,\n\t},\n};\n","'use strict';\nconst { cppdb } = require('../util');\nconst controllers = new WeakMap();\n\nmodule.exports = function transaction(fn) {\n\tif (typeof fn !== 'function') throw new TypeError('Expected first argument to be a function');\n\n\tconst db = this[cppdb];\n\tconst controller = getController(db, this);\n\tconst { apply } = Function.prototype;\n\n\t// Each version of the transaction function has these same properties\n\tconst properties = {\n\t\tdefault: { value: wrapTransaction(apply, fn, db, controller.default) },\n\t\tdeferred: { value: wrapTransaction(apply, fn, db, controller.deferred) },\n\t\timmediate: { value: wrapTransaction(apply, fn, db, controller.immediate) },\n\t\texclusive: { value: wrapTransaction(apply, fn, db, controller.exclusive) },\n\t\tdatabase: { value: this, enumerable: true },\n\t};\n\n\tObject.defineProperties(properties.default.value, properties);\n\tObject.defineProperties(properties.deferred.value, properties);\n\tObject.defineProperties(properties.immediate.value, properties);\n\tObject.defineProperties(properties.exclusive.value, properties);\n\n\t// Return the default version of the transaction function\n\treturn properties.default.value;\n};\n\n// Return the database's cached transaction controller, or create a new one\nconst getController = (db, self) => {\n\tlet controller = controllers.get(db);\n\tif (!controller) {\n\t\tconst shared = {\n\t\t\tcommit: db.prepare('COMMIT', self, false),\n\t\t\trollback: db.prepare('ROLLBACK', self, false),\n\t\t\tsavepoint: db.prepare('SAVEPOINT `\\t_bs3.\\t`', self, false),\n\t\t\trelease: db.prepare('RELEASE `\\t_bs3.\\t`', self, false),\n\t\t\trollbackTo: db.prepare('ROLLBACK TO `\\t_bs3.\\t`', self, false),\n\t\t};\n\t\tcontrollers.set(db, controller = {\n\t\t\tdefault: Object.assign({ begin: db.prepare('BEGIN', self, false) }, shared),\n\t\t\tdeferred: Object.assign({ begin: db.prepare('BEGIN DEFERRED', self, false) }, shared),\n\t\t\timmediate: Object.assign({ begin: db.prepare('BEGIN IMMEDIATE', self, false) }, shared),\n\t\t\texclusive: Object.assign({ begin: db.prepare('BEGIN EXCLUSIVE', self, false) }, shared),\n\t\t});\n\t}\n\treturn controller;\n};\n\n// Return a new transaction function by wrapping the given function\nconst wrapTransaction = (apply, fn, db, { begin, commit, rollback, savepoint, release, rollbackTo }) => function sqliteTransaction() {\n\tlet before, after, undo;\n\tif (db.inTransaction) {\n\t\tbefore = savepoint;\n\t\tafter = release;\n\t\tundo = rollbackTo;\n\t} else {\n\t\tbefore = begin;\n\t\tafter = commit;\n\t\tundo = rollback;\n\t}\n\tbefore.run();\n\ttry {\n\t\tconst result = apply.call(fn, this, arguments);\n\t\tafter.run();\n\t\treturn result;\n\t} catch (ex) {\n\t\tif (db.inTransaction) {\n\t\t\tundo.run();\n\t\t\tif (undo !== rollback) after.run();\n\t\t}\n\t\tthrow ex;\n\t}\n};\n","'use strict';\nconst { getBooleanOption, cppdb } = require('../util');\n\nmodule.exports = function pragma(source, options) {\n\tif (options == null) options = {};\n\tif (typeof source !== 'string') throw new TypeError('Expected first argument to be a string');\n\tif (typeof options !== 'object') throw new TypeError('Expected second argument to be an options object');\n\tconst simple = getBooleanOption(options, 'simple');\n\n\tconst stmt = this[cppdb].prepare(`PRAGMA ${source}`, this, true);\n\treturn simple ? stmt.pluck().get() : stmt.all();\n};\n","'use strict';\nconst fs = require('fs');\nconst path = require('path');\nconst { promisify } = require('util');\nconst { cppdb } = require('../util');\nconst fsAccess = promisify(fs.access);\n\nmodule.exports = async function backup(filename, options) {\n\tif (options == null) options = {};\n\n\t// Validate arguments\n\tif (typeof filename !== 'string') throw new TypeError('Expected first argument to be a string');\n\tif (typeof options !== 'object') throw new TypeError('Expected second argument to be an options object');\n\n\t// Interpret options\n\tfilename = filename.trim();\n\tconst attachedName = 'attached' in options ? options.attached : 'main';\n\tconst handler = 'progress' in options ? options.progress : null;\n\n\t// Validate interpreted options\n\tif (!filename) throw new TypeError('Backup filename cannot be an empty string');\n\tif (filename === ':memory:') throw new TypeError('Invalid backup filename \":memory:\"');\n\tif (typeof attachedName !== 'string') throw new TypeError('Expected the \"attached\" option to be a string');\n\tif (!attachedName) throw new TypeError('The \"attached\" option cannot be an empty string');\n\tif (handler != null && typeof handler !== 'function') throw new TypeError('Expected the \"progress\" option to be a function');\n\n\t// Make sure the specified directory exists\n\tawait fsAccess(path.dirname(filename)).catch(() => {\n\t\tthrow new TypeError('Cannot save backup because the directory does not exist');\n\t});\n\n\tconst isNewFile = await fsAccess(filename).then(() => false, () => true);\n\treturn runBackup(this[cppdb].backup(this, attachedName, filename, isNewFile), handler || null);\n};\n\nconst runBackup = (backup, handler) => {\n\tlet rate = 0;\n\tlet useDefault = true;\n\n\treturn new Promise((resolve, reject) => {\n\t\tsetImmediate(function step() {\n\t\t\ttry {\n\t\t\t\tconst progress = backup.transfer(rate);\n\t\t\t\tif (!progress.remainingPages) {\n\t\t\t\t\tbackup.close();\n\t\t\t\t\tresolve(progress);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (useDefault) {\n\t\t\t\t\tuseDefault = false;\n\t\t\t\t\trate = 100;\n\t\t\t\t}\n\t\t\t\tif (handler) {\n\t\t\t\t\tconst ret = handler(progress);\n\t\t\t\t\tif (ret !== undefined) {\n\t\t\t\t\t\tif (typeof ret === 'number' && ret === ret) rate = Math.max(0, Math.min(0x7fffffff, Math.round(ret)));\n\t\t\t\t\t\telse throw new TypeError('Expected progress callback to return a number or undefined');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tsetImmediate(step);\n\t\t\t} catch (err) {\n\t\t\t\tbackup.close();\n\t\t\t\treject(err);\n\t\t\t}\n\t\t});\n\t});\n};\n","'use strict';\nconst { cppdb } = require('../util');\n\nmodule.exports = function serialize(options) {\n\tif (options == null) options = {};\n\n\t// Validate arguments\n\tif (typeof options !== 'object') throw new TypeError('Expected first argument to be an options object');\n\n\t// Interpret and validate options\n\tconst attachedName = 'attached' in options ? options.attached : 'main';\n\tif (typeof attachedName !== 'string') throw new TypeError('Expected the \"attached\" option to be a string');\n\tif (!attachedName) throw new TypeError('The \"attached\" option cannot be an empty string');\n\n\treturn this[cppdb].serialize(attachedName);\n};\n","'use strict';\nconst { getBooleanOption, cppdb } = require('../util');\n\nmodule.exports = function defineFunction(name, options, fn) {\n\t// Apply defaults\n\tif (options == null) options = {};\n\tif (typeof options === 'function') { fn = options; options = {}; }\n\n\t// Validate arguments\n\tif (typeof name !== 'string') throw new TypeError('Expected first argument to be a string');\n\tif (typeof fn !== 'function') throw new TypeError('Expected last argument to be a function');\n\tif (typeof options !== 'object') throw new TypeError('Expected second argument to be an options object');\n\tif (!name) throw new TypeError('User-defined function name cannot be an empty string');\n\n\t// Interpret options\n\tconst safeIntegers = 'safeIntegers' in options ? +getBooleanOption(options, 'safeIntegers') : 2;\n\tconst deterministic = getBooleanOption(options, 'deterministic');\n\tconst directOnly = getBooleanOption(options, 'directOnly');\n\tconst varargs = getBooleanOption(options, 'varargs');\n\tlet argCount = -1;\n\n\t// Determine argument count\n\tif (!varargs) {\n\t\targCount = fn.length;\n\t\tif (!Number.isInteger(argCount) || argCount < 0) throw new TypeError('Expected function.length to be a positive integer');\n\t\tif (argCount > 100) throw new RangeError('User-defined functions cannot have more than 100 arguments');\n\t}\n\n\tthis[cppdb].function(fn, name, argCount, safeIntegers, deterministic, directOnly);\n\treturn this;\n};\n","'use strict';\nconst { getBooleanOption, cppdb } = require('../util');\n\nmodule.exports = function defineAggregate(name, options) {\n\t// Validate arguments\n\tif (typeof name !== 'string') throw new TypeError('Expected first argument to be a string');\n\tif (typeof options !== 'object' || options === null) throw new TypeError('Expected second argument to be an options object');\n\tif (!name) throw new TypeError('User-defined function name cannot be an empty string');\n\n\t// Interpret options\n\tconst start = 'start' in options ? options.start : null;\n\tconst step = getFunctionOption(options, 'step', true);\n\tconst inverse = getFunctionOption(options, 'inverse', false);\n\tconst result = getFunctionOption(options, 'result', false);\n\tconst safeIntegers = 'safeIntegers' in options ? +getBooleanOption(options, 'safeIntegers') : 2;\n\tconst deterministic = getBooleanOption(options, 'deterministic');\n\tconst directOnly = getBooleanOption(options, 'directOnly');\n\tconst varargs = getBooleanOption(options, 'varargs');\n\tlet argCount = -1;\n\n\t// Determine argument count\n\tif (!varargs) {\n\t\targCount = Math.max(getLength(step), inverse ? getLength(inverse) : 0);\n\t\tif (argCount > 0) argCount -= 1;\n\t\tif (argCount > 100) throw new RangeError('User-defined functions cannot have more than 100 arguments');\n\t}\n\n\tthis[cppdb].aggregate(start, step, inverse, result, name, argCount, safeIntegers, deterministic, directOnly);\n\treturn this;\n};\n\nconst getFunctionOption = (options, key, required) => {\n\tconst value = key in options ? options[key] : null;\n\tif (typeof value === 'function') return value;\n\tif (value != null) throw new TypeError(`Expected the \"${key}\" option to be a function`);\n\tif (required) throw new TypeError(`Missing required option \"${key}\"`);\n\treturn null;\n};\n\nconst getLength = ({ length }) => {\n\tif (Number.isInteger(length) && length >= 0) return length;\n\tthrow new TypeError('Expected function.length to be a positive integer');\n};\n","'use strict';\nconst { cppdb } = require('../util');\n\nmodule.exports = function defineTable(name, factory) {\n\t// Validate arguments\n\tif (typeof name !== 'string') throw new TypeError('Expected first argument to be a string');\n\tif (!name) throw new TypeError('Virtual table module name cannot be an empty string');\n\n\t// Determine whether the module is eponymous-only or not\n\tlet eponymous = false;\n\tif (typeof factory === 'object' && factory !== null) {\n\t\teponymous = true;\n\t\tfactory = defer(parseTableDefinition(factory, 'used', name));\n\t} else {\n\t\tif (typeof factory !== 'function') throw new TypeError('Expected second argument to be a function or a table definition object');\n\t\tfactory = wrapFactory(factory);\n\t}\n\n\tthis[cppdb].table(factory, name, eponymous);\n\treturn this;\n};\n\nfunction wrapFactory(factory) {\n\treturn function virtualTableFactory(moduleName, databaseName, tableName, ...args) {\n\t\tconst thisObject = {\n\t\t\tmodule: moduleName,\n\t\t\tdatabase: databaseName,\n\t\t\ttable: tableName,\n\t\t};\n\n\t\t// Generate a new table definition by invoking the factory\n\t\tconst def = apply.call(factory, thisObject, args);\n\t\tif (typeof def !== 'object' || def === null) {\n\t\t\tthrow new TypeError(`Virtual table module \"${moduleName}\" did not return a table definition object`);\n\t\t}\n\n\t\treturn parseTableDefinition(def, 'returned', moduleName);\n\t};\n}\n\nfunction parseTableDefinition(def, verb, moduleName) {\n\t// Validate required properties\n\tif (!hasOwnProperty.call(def, 'rows')) {\n\t\tthrow new TypeError(`Virtual table module \"${moduleName}\" ${verb} a table definition without a \"rows\" property`);\n\t}\n\tif (!hasOwnProperty.call(def, 'columns')) {\n\t\tthrow new TypeError(`Virtual table module \"${moduleName}\" ${verb} a table definition without a \"columns\" property`);\n\t}\n\n\t// Validate \"rows\" property\n\tconst rows = def.rows;\n\tif (typeof rows !== 'function' || Object.getPrototypeOf(rows) !== GeneratorFunctionPrototype) {\n\t\tthrow new TypeError(`Virtual table module \"${moduleName}\" ${verb} a table definition with an invalid \"rows\" property (should be a generator function)`);\n\t}\n\n\t// Validate \"columns\" property\n\tlet columns = def.columns;\n\tif (!Array.isArray(columns) || !(columns = [...columns]).every(x => typeof x === 'string')) {\n\t\tthrow new TypeError(`Virtual table module \"${moduleName}\" ${verb} a table definition with an invalid \"columns\" property (should be an array of strings)`);\n\t}\n\tif (columns.length !== new Set(columns).size) {\n\t\tthrow new TypeError(`Virtual table module \"${moduleName}\" ${verb} a table definition with duplicate column names`);\n\t}\n\tif (!columns.length) {\n\t\tthrow new RangeError(`Virtual table module \"${moduleName}\" ${verb} a table definition with zero columns`);\n\t}\n\n\t// Validate \"parameters\" property\n\tlet parameters;\n\tif (hasOwnProperty.call(def, 'parameters')) {\n\t\tparameters = def.parameters;\n\t\tif (!Array.isArray(parameters) || !(parameters = [...parameters]).every(x => typeof x === 'string')) {\n\t\t\tthrow new TypeError(`Virtual table module \"${moduleName}\" ${verb} a table definition with an invalid \"parameters\" property (should be an array of strings)`);\n\t\t}\n\t} else {\n\t\tparameters = inferParameters(rows);\n\t}\n\tif (parameters.length !== new Set(parameters).size) {\n\t\tthrow new TypeError(`Virtual table module \"${moduleName}\" ${verb} a table definition with duplicate parameter names`);\n\t}\n\tif (parameters.length > 32) {\n\t\tthrow new RangeError(`Virtual table module \"${moduleName}\" ${verb} a table definition with more than the maximum number of 32 parameters`);\n\t}\n\tfor (const parameter of parameters) {\n\t\tif (columns.includes(parameter)) {\n\t\t\tthrow new TypeError(`Virtual table module \"${moduleName}\" ${verb} a table definition with column \"${parameter}\" which was ambiguously defined as both a column and parameter`);\n\t\t}\n\t}\n\n\t// Validate \"safeIntegers\" option\n\tlet safeIntegers = 2;\n\tif (hasOwnProperty.call(def, 'safeIntegers')) {\n\t\tconst bool = def.safeIntegers;\n\t\tif (typeof bool !== 'boolean') {\n\t\t\tthrow new TypeError(`Virtual table module \"${moduleName}\" ${verb} a table definition with an invalid \"safeIntegers\" property (should be a boolean)`);\n\t\t}\n\t\tsafeIntegers = +bool;\n\t}\n\n\t// Validate \"directOnly\" option\n\tlet directOnly = false;\n\tif (hasOwnProperty.call(def, 'directOnly')) {\n\t\tdirectOnly = def.directOnly;\n\t\tif (typeof directOnly !== 'boolean') {\n\t\t\tthrow new TypeError(`Virtual table module \"${moduleName}\" ${verb} a table definition with an invalid \"directOnly\" property (should be a boolean)`);\n\t\t}\n\t}\n\n\t// Generate SQL for the virtual table definition\n\tconst columnDefinitions = [\n\t\t...parameters.map(identifier).map(str => `${str} HIDDEN`),\n\t\t...columns.map(identifier),\n\t];\n\treturn [\n\t\t`CREATE TABLE x(${columnDefinitions.join(', ')});`,\n\t\twrapGenerator(rows, new Map(columns.map((x, i) => [x, parameters.length + i])), moduleName),\n\t\tparameters,\n\t\tsafeIntegers,\n\t\tdirectOnly,\n\t];\n}\n\nfunction wrapGenerator(generator, columnMap, moduleName) {\n\treturn function* virtualTable(...args) {\n\t\t/*\n\t\t\tWe must defensively clone any buffers in the arguments, because\n\t\t\totherwise the generator could mutate one of them, which would cause\n\t\t\tus to return incorrect values for hidden columns, potentially\n\t\t\tcorrupting the database.\n\t\t */\n\t\tconst output = args.map(x => Buffer.isBuffer(x) ? Buffer.from(x) : x);\n\t\tfor (let i = 0; i < columnMap.size; ++i) {\n\t\t\toutput.push(null); // Fill with nulls to prevent gaps in array (v8 optimization)\n\t\t}\n\t\tfor (const row of generator(...args)) {\n\t\t\tif (Array.isArray(row)) {\n\t\t\t\textractRowArray(row, output, columnMap.size, moduleName);\n\t\t\t\tyield output;\n\t\t\t} else if (typeof row === 'object' && row !== null) {\n\t\t\t\textractRowObject(row, output, columnMap, moduleName);\n\t\t\t\tyield output;\n\t\t\t} else {\n\t\t\t\tthrow new TypeError(`Virtual table module \"${moduleName}\" yielded something that isn't a valid row object`);\n\t\t\t}\n\t\t}\n\t};\n}\n\nfunction extractRowArray(row, output, columnCount, moduleName) {\n\tif (row.length !== columnCount) {\n\t\tthrow new TypeError(`Virtual table module \"${moduleName}\" yielded a row with an incorrect number of columns`);\n\t}\n\tconst offset = output.length - columnCount;\n\tfor (let i = 0; i < columnCount; ++i) {\n\t\toutput[i + offset] = row[i];\n\t}\n}\n\nfunction extractRowObject(row, output, columnMap, moduleName) {\n\tlet count = 0;\n\tfor (const key of Object.keys(row)) {\n\t\tconst index = columnMap.get(key);\n\t\tif (index === undefined) {\n\t\t\tthrow new TypeError(`Virtual table module \"${moduleName}\" yielded a row with an undeclared column \"${key}\"`);\n\t\t}\n\t\toutput[index] = row[key];\n\t\tcount += 1;\n\t}\n\tif (count !== columnMap.size) {\n\t\tthrow new TypeError(`Virtual table module \"${moduleName}\" yielded a row with missing columns`);\n\t}\n}\n\nfunction inferParameters({ length }) {\n\tif (!Number.isInteger(length) || length < 0) {\n\t\tthrow new TypeError('Expected function.length to be a positive integer');\n\t}\n\tconst params = [];\n\tfor (let i = 0; i < length; ++i) {\n\t\tparams.push(`$${i + 1}`);\n\t}\n\treturn params;\n}\n\nconst { hasOwnProperty } = Object.prototype;\nconst { apply } = Function.prototype;\nconst GeneratorFunctionPrototype = Object.getPrototypeOf(function*(){});\nconst identifier = str => `\"${str.replace(/\"/g, '\"\"')}\"`;\nconst defer = x => () => x;\n","'use strict';\nconst DatabaseInspection = function Database() {};\n\nmodule.exports = function inspect(depth, opts) {\n\treturn Object.assign(new DatabaseInspection(), this);\n};\n\n","'use strict';\nconst fs = require('fs');\nconst path = require('path');\nconst util = require('./util');\nconst SqliteError = require('./sqlite-error');\n\nlet DEFAULT_ADDON;\n\nfunction Database(filenameGiven, options) {\n\tif (new.target == null) {\n\t\treturn new Database(filenameGiven, options);\n\t}\n\n\t// Apply defaults\n\tlet buffer;\n\tif (Buffer.isBuffer(filenameGiven)) {\n\t\tbuffer = filenameGiven;\n\t\tfilenameGiven = ':memory:';\n\t}\n\tif (filenameGiven == null) filenameGiven = '';\n\tif (options == null) options = {};\n\n\t// Validate arguments\n\tif (typeof filenameGiven !== 'string') throw new TypeError('Expected first argument to be a string');\n\tif (typeof options !== 'object') throw new TypeError('Expected second argument to be an options object');\n\tif ('readOnly' in options) throw new TypeError('Misspelled option \"readOnly\" should be \"readonly\"');\n\tif ('memory' in options) throw new TypeError('Option \"memory\" was removed in v7.0.0 (use \":memory:\" filename instead)');\n\n\t// Interpret options\n\tconst filename = filenameGiven.trim();\n\tconst anonymous = filename === '' || filename === ':memory:';\n\tconst readonly = util.getBooleanOption(options, 'readonly');\n\tconst fileMustExist = util.getBooleanOption(options, 'fileMustExist');\n\tconst timeout = 'timeout' in options ? options.timeout : 5000;\n\tconst verbose = 'verbose' in options ? options.verbose : null;\n\tconst nativeBindingPath = 'nativeBinding' in options ? options.nativeBinding : null;\n\n\t// Validate interpreted options\n\tif (readonly && anonymous && !buffer) throw new TypeError('In-memory/temporary databases cannot be readonly');\n\tif (!Number.isInteger(timeout) || timeout < 0) throw new TypeError('Expected the \"timeout\" option to be a positive integer');\n\tif (timeout > 0x7fffffff) throw new RangeError('Option \"timeout\" cannot be greater than 2147483647');\n\tif (verbose != null && typeof verbose !== 'function') throw new TypeError('Expected the \"verbose\" option to be a function');\n\tif (nativeBindingPath != null && typeof nativeBindingPath !== 'string') throw new TypeError('Expected the \"nativeBinding\" option to be a string');\n\n\t// Load the native addon\n\tlet addon;\n\tif (nativeBindingPath == null) {\n\t\taddon = DEFAULT_ADDON || (DEFAULT_ADDON = require('bindings')('better_sqlite3.node'));\n\t} else {\n\t\taddon = require(path.resolve(nativeBindingPath).replace(/(\\.node)?$/, '.node'));\n\t}\n\tif (!addon.isInitialized) {\n\t\taddon.setErrorConstructor(SqliteError);\n\t\taddon.isInitialized = true;\n\t}\n\n\t// Make sure the specified directory exists\n\tif (!anonymous && !fs.existsSync(path.dirname(filename))) {\n\t\tthrow new TypeError('Cannot open database because the directory does not exist');\n\t}\n\n\tObject.defineProperties(this, {\n\t\t[util.cppdb]: { value: new addon.Database(filename, filenameGiven, anonymous, readonly, fileMustExist, timeout, verbose || null, buffer || null) },\n\t\t...wrappers.getters,\n\t});\n}\n\nconst wrappers = require('./methods/wrappers');\nDatabase.prototype.prepare = wrappers.prepare;\nDatabase.prototype.transaction = require('./methods/transaction');\nDatabase.prototype.pragma = require('./methods/pragma');\nDatabase.prototype.backup = require('./methods/backup');\nDatabase.prototype.serialize = require('./methods/serialize');\nDatabase.prototype.function = require('./methods/function');\nDatabase.prototype.aggregate = require('./methods/aggregate');\nDatabase.prototype.table = require('./methods/table');\nDatabase.prototype.loadExtension = wrappers.loadExtension;\nDatabase.prototype.exec = wrappers.exec;\nDatabase.prototype.close = wrappers.close;\nDatabase.prototype.defaultSafeIntegers = wrappers.defaultSafeIntegers;\nDatabase.prototype.unsafeMode = wrappers.unsafeMode;\nDatabase.prototype[util.inspect] = require('./methods/inspect');\n\nmodule.exports = Database;\n","'use strict';\nmodule.exports = require('./database');\nmodule.exports.SqliteError = require('./sqlite-error');\n","'use strict'\n\nexports.fromCallback = function (fn) {\n  return Object.defineProperty(function (...args) {\n    if (typeof args[args.length - 1] === 'function') fn.apply(this, args)\n    else {\n      return new Promise((resolve, reject) => {\n        fn.call(\n          this,\n          ...args,\n          (err, res) => (err != null) ? reject(err) : resolve(res)\n        )\n      })\n    }\n  }, 'name', { value: fn.name })\n}\n\nexports.fromPromise = function (fn) {\n  return Object.defineProperty(function (...args) {\n    const cb = args[args.length - 1]\n    if (typeof cb !== 'function') return fn.apply(this, args)\n    else fn.apply(this, args.slice(0, -1)).then(r => cb(null, r), cb)\n  }, 'name', { value: fn.name })\n}\n","var constants = require('constants')\n\nvar origCwd = process.cwd\nvar cwd = null\n\nvar platform = process.env.GRACEFUL_FS_PLATFORM || process.platform\n\nprocess.cwd = function() {\n  if (!cwd)\n    cwd = origCwd.call(process)\n  return cwd\n}\ntry {\n  process.cwd()\n} catch (er) {}\n\n// This check is needed until node.js 12 is required\nif (typeof process.chdir === 'function') {\n  var chdir = process.chdir\n  process.chdir = function (d) {\n    cwd = null\n    chdir.call(process, d)\n  }\n  if (Object.setPrototypeOf) Object.setPrototypeOf(process.chdir, chdir)\n}\n\nmodule.exports = patch\n\nfunction patch (fs) {\n  // (re-)implement some things that are known busted or missing.\n\n  // lchmod, broken prior to 0.6.2\n  // back-port the fix here.\n  if (constants.hasOwnProperty('O_SYMLINK') &&\n      process.version.match(/^v0\\.6\\.[0-2]|^v0\\.5\\./)) {\n    patchLchmod(fs)\n  }\n\n  // lutimes implementation, or no-op\n  if (!fs.lutimes) {\n    patchLutimes(fs)\n  }\n\n  // https://github.com/isaacs/node-graceful-fs/issues/4\n  // Chown should not fail on einval or eperm if non-root.\n  // It should not fail on enosys ever, as this just indicates\n  // that a fs doesn't support the intended operation.\n\n  fs.chown = chownFix(fs.chown)\n  fs.fchown = chownFix(fs.fchown)\n  fs.lchown = chownFix(fs.lchown)\n\n  fs.chmod = chmodFix(fs.chmod)\n  fs.fchmod = chmodFix(fs.fchmod)\n  fs.lchmod = chmodFix(fs.lchmod)\n\n  fs.chownSync = chownFixSync(fs.chownSync)\n  fs.fchownSync = chownFixSync(fs.fchownSync)\n  fs.lchownSync = chownFixSync(fs.lchownSync)\n\n  fs.chmodSync = chmodFixSync(fs.chmodSync)\n  fs.fchmodSync = chmodFixSync(fs.fchmodSync)\n  fs.lchmodSync = chmodFixSync(fs.lchmodSync)\n\n  fs.stat = statFix(fs.stat)\n  fs.fstat = statFix(fs.fstat)\n  fs.lstat = statFix(fs.lstat)\n\n  fs.statSync = statFixSync(fs.statSync)\n  fs.fstatSync = statFixSync(fs.fstatSync)\n  fs.lstatSync = statFixSync(fs.lstatSync)\n\n  // if lchmod/lchown do not exist, then make them no-ops\n  if (fs.chmod && !fs.lchmod) {\n    fs.lchmod = function (path, mode, cb) {\n      if (cb) process.nextTick(cb)\n    }\n    fs.lchmodSync = function () {}\n  }\n  if (fs.chown && !fs.lchown) {\n    fs.lchown = function (path, uid, gid, cb) {\n      if (cb) process.nextTick(cb)\n    }\n    fs.lchownSync = function () {}\n  }\n\n  // on Windows, A/V software can lock the directory, causing this\n  // to fail with an EACCES or EPERM if the directory contains newly\n  // created files.  Try again on failure, for up to 60 seconds.\n\n  // Set the timeout this long because some Windows Anti-Virus, such as Parity\n  // bit9, may lock files for up to a minute, causing npm package install\n  // failures. Also, take care to yield the scheduler. Windows scheduling gives\n  // CPU to a busy looping process, which can cause the program causing the lock\n  // contention to be starved of CPU by node, so the contention doesn't resolve.\n  if (platform === \"win32\") {\n    fs.rename = typeof fs.rename !== 'function' ? fs.rename\n    : (function (fs$rename) {\n      function rename (from, to, cb) {\n        var start = Date.now()\n        var backoff = 0;\n        fs$rename(from, to, function CB (er) {\n          if (er\n              && (er.code === \"EACCES\" || er.code === \"EPERM\" || er.code === \"EBUSY\")\n              && Date.now() - start < 60000) {\n            setTimeout(function() {\n              fs.stat(to, function (stater, st) {\n                if (stater && stater.code === \"ENOENT\")\n                  fs$rename(from, to, CB);\n                else\n                  cb(er)\n              })\n            }, backoff)\n            if (backoff < 100)\n              backoff += 10;\n            return;\n          }\n          if (cb) cb(er)\n        })\n      }\n      if (Object.setPrototypeOf) Object.setPrototypeOf(rename, fs$rename)\n      return rename\n    })(fs.rename)\n  }\n\n  // if read() returns EAGAIN, then just try it again.\n  fs.read = typeof fs.read !== 'function' ? fs.read\n  : (function (fs$read) {\n    function read (fd, buffer, offset, length, position, callback_) {\n      var callback\n      if (callback_ && typeof callback_ === 'function') {\n        var eagCounter = 0\n        callback = function (er, _, __) {\n          if (er && er.code === 'EAGAIN' && eagCounter < 10) {\n            eagCounter ++\n            return fs$read.call(fs, fd, buffer, offset, length, position, callback)\n          }\n          callback_.apply(this, arguments)\n        }\n      }\n      return fs$read.call(fs, fd, buffer, offset, length, position, callback)\n    }\n\n    // This ensures `util.promisify` works as it does for native `fs.read`.\n    if (Object.setPrototypeOf) Object.setPrototypeOf(read, fs$read)\n    return read\n  })(fs.read)\n\n  fs.readSync = typeof fs.readSync !== 'function' ? fs.readSync\n  : (function (fs$readSync) { return function (fd, buffer, offset, length, position) {\n    var eagCounter = 0\n    while (true) {\n      try {\n        return fs$readSync.call(fs, fd, buffer, offset, length, position)\n      } catch (er) {\n        if (er.code === 'EAGAIN' && eagCounter < 10) {\n          eagCounter ++\n          continue\n        }\n        throw er\n      }\n    }\n  }})(fs.readSync)\n\n  function patchLchmod (fs) {\n    fs.lchmod = function (path, mode, callback) {\n      fs.open( path\n             , constants.O_WRONLY | constants.O_SYMLINK\n             , mode\n             , function (err, fd) {\n        if (err) {\n          if (callback) callback(err)\n          return\n        }\n        // prefer to return the chmod error, if one occurs,\n        // but still try to close, and report closing errors if they occur.\n        fs.fchmod(fd, mode, function (err) {\n          fs.close(fd, function(err2) {\n            if (callback) callback(err || err2)\n          })\n        })\n      })\n    }\n\n    fs.lchmodSync = function (path, mode) {\n      var fd = fs.openSync(path, constants.O_WRONLY | constants.O_SYMLINK, mode)\n\n      // prefer to return the chmod error, if one occurs,\n      // but still try to close, and report closing errors if they occur.\n      var threw = true\n      var ret\n      try {\n        ret = fs.fchmodSync(fd, mode)\n        threw = false\n      } finally {\n        if (threw) {\n          try {\n            fs.closeSync(fd)\n          } catch (er) {}\n        } else {\n          fs.closeSync(fd)\n        }\n      }\n      return ret\n    }\n  }\n\n  function patchLutimes (fs) {\n    if (constants.hasOwnProperty(\"O_SYMLINK\") && fs.futimes) {\n      fs.lutimes = function (path, at, mt, cb) {\n        fs.open(path, constants.O_SYMLINK, function (er, fd) {\n          if (er) {\n            if (cb) cb(er)\n            return\n          }\n          fs.futimes(fd, at, mt, function (er) {\n            fs.close(fd, function (er2) {\n              if (cb) cb(er || er2)\n            })\n          })\n        })\n      }\n\n      fs.lutimesSync = function (path, at, mt) {\n        var fd = fs.openSync(path, constants.O_SYMLINK)\n        var ret\n        var threw = true\n        try {\n          ret = fs.futimesSync(fd, at, mt)\n          threw = false\n        } finally {\n          if (threw) {\n            try {\n              fs.closeSync(fd)\n            } catch (er) {}\n          } else {\n            fs.closeSync(fd)\n          }\n        }\n        return ret\n      }\n\n    } else if (fs.futimes) {\n      fs.lutimes = function (_a, _b, _c, cb) { if (cb) process.nextTick(cb) }\n      fs.lutimesSync = function () {}\n    }\n  }\n\n  function chmodFix (orig) {\n    if (!orig) return orig\n    return function (target, mode, cb) {\n      return orig.call(fs, target, mode, function (er) {\n        if (chownErOk(er)) er = null\n        if (cb) cb.apply(this, arguments)\n      })\n    }\n  }\n\n  function chmodFixSync (orig) {\n    if (!orig) return orig\n    return function (target, mode) {\n      try {\n        return orig.call(fs, target, mode)\n      } catch (er) {\n        if (!chownErOk(er)) throw er\n      }\n    }\n  }\n\n\n  function chownFix (orig) {\n    if (!orig) return orig\n    return function (target, uid, gid, cb) {\n      return orig.call(fs, target, uid, gid, function (er) {\n        if (chownErOk(er)) er = null\n        if (cb) cb.apply(this, arguments)\n      })\n    }\n  }\n\n  function chownFixSync (orig) {\n    if (!orig) return orig\n    return function (target, uid, gid) {\n      try {\n        return orig.call(fs, target, uid, gid)\n      } catch (er) {\n        if (!chownErOk(er)) throw er\n      }\n    }\n  }\n\n  function statFix (orig) {\n    if (!orig) return orig\n    // Older versions of Node erroneously returned signed integers for\n    // uid + gid.\n    return function (target, options, cb) {\n      if (typeof options === 'function') {\n        cb = options\n        options = null\n      }\n      function callback (er, stats) {\n        if (stats) {\n          if (stats.uid < 0) stats.uid += 0x100000000\n          if (stats.gid < 0) stats.gid += 0x100000000\n        }\n        if (cb) cb.apply(this, arguments)\n      }\n      return options ? orig.call(fs, target, options, callback)\n        : orig.call(fs, target, callback)\n    }\n  }\n\n  function statFixSync (orig) {\n    if (!orig) return orig\n    // Older versions of Node erroneously returned signed integers for\n    // uid + gid.\n    return function (target, options) {\n      var stats = options ? orig.call(fs, target, options)\n        : orig.call(fs, target)\n      if (stats) {\n        if (stats.uid < 0) stats.uid += 0x100000000\n        if (stats.gid < 0) stats.gid += 0x100000000\n      }\n      return stats;\n    }\n  }\n\n  // ENOSYS means that the fs doesn't support the op. Just ignore\n  // that, because it doesn't matter.\n  //\n  // if there's no getuid, or if getuid() is something other\n  // than 0, and the error is EINVAL or EPERM, then just ignore\n  // it.\n  //\n  // This specific case is a silent failure in cp, install, tar,\n  // and most other unix tools that manage permissions.\n  //\n  // When running as root, or if other types of errors are\n  // encountered, then it's strict.\n  function chownErOk (er) {\n    if (!er)\n      return true\n\n    if (er.code === \"ENOSYS\")\n      return true\n\n    var nonroot = !process.getuid || process.getuid() !== 0\n    if (nonroot) {\n      if (er.code === \"EINVAL\" || er.code === \"EPERM\")\n        return true\n    }\n\n    return false\n  }\n}\n","var Stream = require('stream').Stream\n\nmodule.exports = legacy\n\nfunction legacy (fs) {\n  return {\n    ReadStream: ReadStream,\n    WriteStream: WriteStream\n  }\n\n  function ReadStream (path, options) {\n    if (!(this instanceof ReadStream)) return new ReadStream(path, options);\n\n    Stream.call(this);\n\n    var self = this;\n\n    this.path = path;\n    this.fd = null;\n    this.readable = true;\n    this.paused = false;\n\n    this.flags = 'r';\n    this.mode = 438; /*=0666*/\n    this.bufferSize = 64 * 1024;\n\n    options = options || {};\n\n    // Mixin options into this\n    var keys = Object.keys(options);\n    for (var index = 0, length = keys.length; index < length; index++) {\n      var key = keys[index];\n      this[key] = options[key];\n    }\n\n    if (this.encoding) this.setEncoding(this.encoding);\n\n    if (this.start !== undefined) {\n      if ('number' !== typeof this.start) {\n        throw TypeError('start must be a Number');\n      }\n      if (this.end === undefined) {\n        this.end = Infinity;\n      } else if ('number' !== typeof this.end) {\n        throw TypeError('end must be a Number');\n      }\n\n      if (this.start > this.end) {\n        throw new Error('start must be <= end');\n      }\n\n      this.pos = this.start;\n    }\n\n    if (this.fd !== null) {\n      process.nextTick(function() {\n        self._read();\n      });\n      return;\n    }\n\n    fs.open(this.path, this.flags, this.mode, function (err, fd) {\n      if (err) {\n        self.emit('error', err);\n        self.readable = false;\n        return;\n      }\n\n      self.fd = fd;\n      self.emit('open', fd);\n      self._read();\n    })\n  }\n\n  function WriteStream (path, options) {\n    if (!(this instanceof WriteStream)) return new WriteStream(path, options);\n\n    Stream.call(this);\n\n    this.path = path;\n    this.fd = null;\n    this.writable = true;\n\n    this.flags = 'w';\n    this.encoding = 'binary';\n    this.mode = 438; /*=0666*/\n    this.bytesWritten = 0;\n\n    options = options || {};\n\n    // Mixin options into this\n    var keys = Object.keys(options);\n    for (var index = 0, length = keys.length; index < length; index++) {\n      var key = keys[index];\n      this[key] = options[key];\n    }\n\n    if (this.start !== undefined) {\n      if ('number' !== typeof this.start) {\n        throw TypeError('start must be a Number');\n      }\n      if (this.start < 0) {\n        throw new Error('start must be >= zero');\n      }\n\n      this.pos = this.start;\n    }\n\n    this.busy = false;\n    this._queue = [];\n\n    if (this.fd === null) {\n      this._open = fs.open;\n      this._queue.push([this._open, this.path, this.flags, this.mode, undefined]);\n      this.flush();\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = clone\n\nvar getPrototypeOf = Object.getPrototypeOf || function (obj) {\n  return obj.__proto__\n}\n\nfunction clone (obj) {\n  if (obj === null || typeof obj !== 'object')\n    return obj\n\n  if (obj instanceof Object)\n    var copy = { __proto__: getPrototypeOf(obj) }\n  else\n    var copy = Object.create(null)\n\n  Object.getOwnPropertyNames(obj).forEach(function (key) {\n    Object.defineProperty(copy, key, Object.getOwnPropertyDescriptor(obj, key))\n  })\n\n  return copy\n}\n","var fs = require('fs')\nvar polyfills = require('./polyfills.js')\nvar legacy = require('./legacy-streams.js')\nvar clone = require('./clone.js')\n\nvar util = require('util')\n\n/* istanbul ignore next - node 0.x polyfill */\nvar gracefulQueue\nvar previousSymbol\n\n/* istanbul ignore else - node 0.x polyfill */\nif (typeof Symbol === 'function' && typeof Symbol.for === 'function') {\n  gracefulQueue = Symbol.for('graceful-fs.queue')\n  // This is used in testing by future versions\n  previousSymbol = Symbol.for('graceful-fs.previous')\n} else {\n  gracefulQueue = '___graceful-fs.queue'\n  previousSymbol = '___graceful-fs.previous'\n}\n\nfunction noop () {}\n\nfunction publishQueue(context, queue) {\n  Object.defineProperty(context, gracefulQueue, {\n    get: function() {\n      return queue\n    }\n  })\n}\n\nvar debug = noop\nif (util.debuglog)\n  debug = util.debuglog('gfs4')\nelse if (/\\bgfs4\\b/i.test(process.env.NODE_DEBUG || ''))\n  debug = function() {\n    var m = util.format.apply(util, arguments)\n    m = 'GFS4: ' + m.split(/\\n/).join('\\nGFS4: ')\n    console.error(m)\n  }\n\n// Once time initialization\nif (!fs[gracefulQueue]) {\n  // This queue can be shared by multiple loaded instances\n  var queue = global[gracefulQueue] || []\n  publishQueue(fs, queue)\n\n  // Patch fs.close/closeSync to shared queue version, because we need\n  // to retry() whenever a close happens *anywhere* in the program.\n  // This is essential when multiple graceful-fs instances are\n  // in play at the same time.\n  fs.close = (function (fs$close) {\n    function close (fd, cb) {\n      return fs$close.call(fs, fd, function (err) {\n        // This function uses the graceful-fs shared queue\n        if (!err) {\n          resetQueue()\n        }\n\n        if (typeof cb === 'function')\n          cb.apply(this, arguments)\n      })\n    }\n\n    Object.defineProperty(close, previousSymbol, {\n      value: fs$close\n    })\n    return close\n  })(fs.close)\n\n  fs.closeSync = (function (fs$closeSync) {\n    function closeSync (fd) {\n      // This function uses the graceful-fs shared queue\n      fs$closeSync.apply(fs, arguments)\n      resetQueue()\n    }\n\n    Object.defineProperty(closeSync, previousSymbol, {\n      value: fs$closeSync\n    })\n    return closeSync\n  })(fs.closeSync)\n\n  if (/\\bgfs4\\b/i.test(process.env.NODE_DEBUG || '')) {\n    process.on('exit', function() {\n      debug(fs[gracefulQueue])\n      require('assert').equal(fs[gracefulQueue].length, 0)\n    })\n  }\n}\n\nif (!global[gracefulQueue]) {\n  publishQueue(global, fs[gracefulQueue]);\n}\n\nmodule.exports = patch(clone(fs))\nif (process.env.TEST_GRACEFUL_FS_GLOBAL_PATCH && !fs.__patched) {\n    module.exports = patch(fs)\n    fs.__patched = true;\n}\n\nfunction patch (fs) {\n  // Everything that references the open() function needs to be in here\n  polyfills(fs)\n  fs.gracefulify = patch\n\n  fs.createReadStream = createReadStream\n  fs.createWriteStream = createWriteStream\n  var fs$readFile = fs.readFile\n  fs.readFile = readFile\n  function readFile (path, options, cb) {\n    if (typeof options === 'function')\n      cb = options, options = null\n\n    return go$readFile(path, options, cb)\n\n    function go$readFile (path, options, cb, startTime) {\n      return fs$readFile(path, options, function (err) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n          enqueue([go$readFile, [path, options, cb], err, startTime || Date.now(), Date.now()])\n        else {\n          if (typeof cb === 'function')\n            cb.apply(this, arguments)\n        }\n      })\n    }\n  }\n\n  var fs$writeFile = fs.writeFile\n  fs.writeFile = writeFile\n  function writeFile (path, data, options, cb) {\n    if (typeof options === 'function')\n      cb = options, options = null\n\n    return go$writeFile(path, data, options, cb)\n\n    function go$writeFile (path, data, options, cb, startTime) {\n      return fs$writeFile(path, data, options, function (err) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n          enqueue([go$writeFile, [path, data, options, cb], err, startTime || Date.now(), Date.now()])\n        else {\n          if (typeof cb === 'function')\n            cb.apply(this, arguments)\n        }\n      })\n    }\n  }\n\n  var fs$appendFile = fs.appendFile\n  if (fs$appendFile)\n    fs.appendFile = appendFile\n  function appendFile (path, data, options, cb) {\n    if (typeof options === 'function')\n      cb = options, options = null\n\n    return go$appendFile(path, data, options, cb)\n\n    function go$appendFile (path, data, options, cb, startTime) {\n      return fs$appendFile(path, data, options, function (err) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n          enqueue([go$appendFile, [path, data, options, cb], err, startTime || Date.now(), Date.now()])\n        else {\n          if (typeof cb === 'function')\n            cb.apply(this, arguments)\n        }\n      })\n    }\n  }\n\n  var fs$copyFile = fs.copyFile\n  if (fs$copyFile)\n    fs.copyFile = copyFile\n  function copyFile (src, dest, flags, cb) {\n    if (typeof flags === 'function') {\n      cb = flags\n      flags = 0\n    }\n    return go$copyFile(src, dest, flags, cb)\n\n    function go$copyFile (src, dest, flags, cb, startTime) {\n      return fs$copyFile(src, dest, flags, function (err) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n          enqueue([go$copyFile, [src, dest, flags, cb], err, startTime || Date.now(), Date.now()])\n        else {\n          if (typeof cb === 'function')\n            cb.apply(this, arguments)\n        }\n      })\n    }\n  }\n\n  var fs$readdir = fs.readdir\n  fs.readdir = readdir\n  var noReaddirOptionVersions = /^v[0-5]\\./\n  function readdir (path, options, cb) {\n    if (typeof options === 'function')\n      cb = options, options = null\n\n    var go$readdir = noReaddirOptionVersions.test(process.version)\n      ? function go$readdir (path, options, cb, startTime) {\n        return fs$readdir(path, fs$readdirCallback(\n          path, options, cb, startTime\n        ))\n      }\n      : function go$readdir (path, options, cb, startTime) {\n        return fs$readdir(path, options, fs$readdirCallback(\n          path, options, cb, startTime\n        ))\n      }\n\n    return go$readdir(path, options, cb)\n\n    function fs$readdirCallback (path, options, cb, startTime) {\n      return function (err, files) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n          enqueue([\n            go$readdir,\n            [path, options, cb],\n            err,\n            startTime || Date.now(),\n            Date.now()\n          ])\n        else {\n          if (files && files.sort)\n            files.sort()\n\n          if (typeof cb === 'function')\n            cb.call(this, err, files)\n        }\n      }\n    }\n  }\n\n  if (process.version.substr(0, 4) === 'v0.8') {\n    var legStreams = legacy(fs)\n    ReadStream = legStreams.ReadStream\n    WriteStream = legStreams.WriteStream\n  }\n\n  var fs$ReadStream = fs.ReadStream\n  if (fs$ReadStream) {\n    ReadStream.prototype = Object.create(fs$ReadStream.prototype)\n    ReadStream.prototype.open = ReadStream$open\n  }\n\n  var fs$WriteStream = fs.WriteStream\n  if (fs$WriteStream) {\n    WriteStream.prototype = Object.create(fs$WriteStream.prototype)\n    WriteStream.prototype.open = WriteStream$open\n  }\n\n  Object.defineProperty(fs, 'ReadStream', {\n    get: function () {\n      return ReadStream\n    },\n    set: function (val) {\n      ReadStream = val\n    },\n    enumerable: true,\n    configurable: true\n  })\n  Object.defineProperty(fs, 'WriteStream', {\n    get: function () {\n      return WriteStream\n    },\n    set: function (val) {\n      WriteStream = val\n    },\n    enumerable: true,\n    configurable: true\n  })\n\n  // legacy names\n  var FileReadStream = ReadStream\n  Object.defineProperty(fs, 'FileReadStream', {\n    get: function () {\n      return FileReadStream\n    },\n    set: function (val) {\n      FileReadStream = val\n    },\n    enumerable: true,\n    configurable: true\n  })\n  var FileWriteStream = WriteStream\n  Object.defineProperty(fs, 'FileWriteStream', {\n    get: function () {\n      return FileWriteStream\n    },\n    set: function (val) {\n      FileWriteStream = val\n    },\n    enumerable: true,\n    configurable: true\n  })\n\n  function ReadStream (path, options) {\n    if (this instanceof ReadStream)\n      return fs$ReadStream.apply(this, arguments), this\n    else\n      return ReadStream.apply(Object.create(ReadStream.prototype), arguments)\n  }\n\n  function ReadStream$open () {\n    var that = this\n    open(that.path, that.flags, that.mode, function (err, fd) {\n      if (err) {\n        if (that.autoClose)\n          that.destroy()\n\n        that.emit('error', err)\n      } else {\n        that.fd = fd\n        that.emit('open', fd)\n        that.read()\n      }\n    })\n  }\n\n  function WriteStream (path, options) {\n    if (this instanceof WriteStream)\n      return fs$WriteStream.apply(this, arguments), this\n    else\n      return WriteStream.apply(Object.create(WriteStream.prototype), arguments)\n  }\n\n  function WriteStream$open () {\n    var that = this\n    open(that.path, that.flags, that.mode, function (err, fd) {\n      if (err) {\n        that.destroy()\n        that.emit('error', err)\n      } else {\n        that.fd = fd\n        that.emit('open', fd)\n      }\n    })\n  }\n\n  function createReadStream (path, options) {\n    return new fs.ReadStream(path, options)\n  }\n\n  function createWriteStream (path, options) {\n    return new fs.WriteStream(path, options)\n  }\n\n  var fs$open = fs.open\n  fs.open = open\n  function open (path, flags, mode, cb) {\n    if (typeof mode === 'function')\n      cb = mode, mode = null\n\n    return go$open(path, flags, mode, cb)\n\n    function go$open (path, flags, mode, cb, startTime) {\n      return fs$open(path, flags, mode, function (err, fd) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n          enqueue([go$open, [path, flags, mode, cb], err, startTime || Date.now(), Date.now()])\n        else {\n          if (typeof cb === 'function')\n            cb.apply(this, arguments)\n        }\n      })\n    }\n  }\n\n  return fs\n}\n\nfunction enqueue (elem) {\n  debug('ENQUEUE', elem[0].name, elem[1])\n  fs[gracefulQueue].push(elem)\n  retry()\n}\n\n// keep track of the timeout between retry() calls\nvar retryTimer\n\n// reset the startTime and lastTime to now\n// this resets the start of the 60 second overall timeout as well as the\n// delay between attempts so that we'll retry these jobs sooner\nfunction resetQueue () {\n  var now = Date.now()\n  for (var i = 0; i < fs[gracefulQueue].length; ++i) {\n    // entries that are only a length of 2 are from an older version, don't\n    // bother modifying those since they'll be retried anyway.\n    if (fs[gracefulQueue][i].length > 2) {\n      fs[gracefulQueue][i][3] = now // startTime\n      fs[gracefulQueue][i][4] = now // lastTime\n    }\n  }\n  // call retry to make sure we're actively processing the queue\n  retry()\n}\n\nfunction retry () {\n  // clear the timer and remove it to help prevent unintended concurrency\n  clearTimeout(retryTimer)\n  retryTimer = undefined\n\n  if (fs[gracefulQueue].length === 0)\n    return\n\n  var elem = fs[gracefulQueue].shift()\n  var fn = elem[0]\n  var args = elem[1]\n  // these items may be unset if they were added by an older graceful-fs\n  var err = elem[2]\n  var startTime = elem[3]\n  var lastTime = elem[4]\n\n  // if we don't have a startTime we have no way of knowing if we've waited\n  // long enough, so go ahead and retry this item now\n  if (startTime === undefined) {\n    debug('RETRY', fn.name, args)\n    fn.apply(null, args)\n  } else if (Date.now() - startTime >= 60000) {\n    // it's been more than 60 seconds total, bail now\n    debug('TIMEOUT', fn.name, args)\n    var cb = args.pop()\n    if (typeof cb === 'function')\n      cb.call(null, err)\n  } else {\n    // the amount of time between the last attempt and right now\n    var sinceAttempt = Date.now() - lastTime\n    // the amount of time between when we first tried, and when we last tried\n    // rounded up to at least 1\n    var sinceStart = Math.max(lastTime - startTime, 1)\n    // backoff. wait longer than the total time we've been retrying, but only\n    // up to a maximum of 100ms\n    var desiredDelay = Math.min(sinceStart * 1.2, 100)\n    // it's been long enough since the last retry, do it again\n    if (sinceAttempt >= desiredDelay) {\n      debug('RETRY', fn.name, args)\n      fn.apply(null, args.concat([startTime]))\n    } else {\n      // if we can't do this job yet, push it to the end of the queue\n      // and let the next iteration check again\n      fs[gracefulQueue].push(elem)\n    }\n  }\n\n  // schedule our next run if one isn't already scheduled\n  if (retryTimer === undefined) {\n    retryTimer = setTimeout(retry, 0)\n  }\n}\n","'use strict'\n// This is adapted from https://github.com/normalize/mz\n// Copyright (c) 2014-2016 Jonathan Ong me@jongleberry.com and Contributors\nconst u = require('universalify').fromCallback\nconst fs = require('graceful-fs')\n\nconst api = [\n  'access',\n  'appendFile',\n  'chmod',\n  'chown',\n  'close',\n  'copyFile',\n  'fchmod',\n  'fchown',\n  'fdatasync',\n  'fstat',\n  'fsync',\n  'ftruncate',\n  'futimes',\n  'lchmod',\n  'lchown',\n  'link',\n  'lstat',\n  'mkdir',\n  'mkdtemp',\n  'open',\n  'opendir',\n  'readdir',\n  'readFile',\n  'readlink',\n  'realpath',\n  'rename',\n  'rm',\n  'rmdir',\n  'stat',\n  'symlink',\n  'truncate',\n  'unlink',\n  'utimes',\n  'writeFile'\n].filter(key => {\n  // Some commands are not available on some systems. Ex:\n  // fs.cp was added in Node.js v16.7.0\n  // fs.lchown is not available on at least some Linux\n  return typeof fs[key] === 'function'\n})\n\n// Export cloned fs:\nObject.assign(exports, fs)\n\n// Universalify async methods:\napi.forEach(method => {\n  exports[method] = u(fs[method])\n})\n\n// We differ from mz/fs in that we still ship the old, broken, fs.exists()\n// since we are a drop-in replacement for the native module\nexports.exists = function (filename, callback) {\n  if (typeof callback === 'function') {\n    return fs.exists(filename, callback)\n  }\n  return new Promise(resolve => {\n    return fs.exists(filename, resolve)\n  })\n}\n\n// fs.read(), fs.write(), fs.readv(), & fs.writev() need special treatment due to multiple callback args\n\nexports.read = function (fd, buffer, offset, length, position, callback) {\n  if (typeof callback === 'function') {\n    return fs.read(fd, buffer, offset, length, position, callback)\n  }\n  return new Promise((resolve, reject) => {\n    fs.read(fd, buffer, offset, length, position, (err, bytesRead, buffer) => {\n      if (err) return reject(err)\n      resolve({ bytesRead, buffer })\n    })\n  })\n}\n\n// Function signature can be\n// fs.write(fd, buffer[, offset[, length[, position]]], callback)\n// OR\n// fs.write(fd, string[, position[, encoding]], callback)\n// We need to handle both cases, so we use ...args\nexports.write = function (fd, buffer, ...args) {\n  if (typeof args[args.length - 1] === 'function') {\n    return fs.write(fd, buffer, ...args)\n  }\n\n  return new Promise((resolve, reject) => {\n    fs.write(fd, buffer, ...args, (err, bytesWritten, buffer) => {\n      if (err) return reject(err)\n      resolve({ bytesWritten, buffer })\n    })\n  })\n}\n\n// Function signature is\n// s.readv(fd, buffers[, position], callback)\n// We need to handle the optional arg, so we use ...args\nexports.readv = function (fd, buffers, ...args) {\n  if (typeof args[args.length - 1] === 'function') {\n    return fs.readv(fd, buffers, ...args)\n  }\n\n  return new Promise((resolve, reject) => {\n    fs.readv(fd, buffers, ...args, (err, bytesRead, buffers) => {\n      if (err) return reject(err)\n      resolve({ bytesRead, buffers })\n    })\n  })\n}\n\n// Function signature is\n// s.writev(fd, buffers[, position], callback)\n// We need to handle the optional arg, so we use ...args\nexports.writev = function (fd, buffers, ...args) {\n  if (typeof args[args.length - 1] === 'function') {\n    return fs.writev(fd, buffers, ...args)\n  }\n\n  return new Promise((resolve, reject) => {\n    fs.writev(fd, buffers, ...args, (err, bytesWritten, buffers) => {\n      if (err) return reject(err)\n      resolve({ bytesWritten, buffers })\n    })\n  })\n}\n\n// fs.realpath.native sometimes not available if fs is monkey-patched\nif (typeof fs.realpath.native === 'function') {\n  exports.realpath.native = u(fs.realpath.native)\n} else {\n  process.emitWarning(\n    'fs.realpath.native is not a function. Is fs being monkey-patched?',\n    'Warning', 'fs-extra-WARN0003'\n  )\n}\n","// Adapted from https://github.com/sindresorhus/make-dir\n// Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)\n// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n// The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n'use strict'\nconst path = require('path')\n\n// https://github.com/nodejs/node/issues/8987\n// https://github.com/libuv/libuv/pull/1088\nmodule.exports.checkPath = function checkPath (pth) {\n  if (process.platform === 'win32') {\n    const pathHasInvalidWinCharacters = /[<>:\"|?*]/.test(pth.replace(path.parse(pth).root, ''))\n\n    if (pathHasInvalidWinCharacters) {\n      const error = new Error(`Path contains invalid characters: ${pth}`)\n      error.code = 'EINVAL'\n      throw error\n    }\n  }\n}\n","'use strict'\nconst fs = require('../fs')\nconst { checkPath } = require('./utils')\n\nconst getMode = options => {\n  const defaults = { mode: 0o777 }\n  if (typeof options === 'number') return options\n  return ({ ...defaults, ...options }).mode\n}\n\nmodule.exports.makeDir = async (dir, options) => {\n  checkPath(dir)\n\n  return fs.mkdir(dir, {\n    mode: getMode(options),\n    recursive: true\n  })\n}\n\nmodule.exports.makeDirSync = (dir, options) => {\n  checkPath(dir)\n\n  return fs.mkdirSync(dir, {\n    mode: getMode(options),\n    recursive: true\n  })\n}\n","'use strict'\nconst u = require('universalify').fromPromise\nconst { makeDir: _makeDir, makeDirSync } = require('./make-dir')\nconst makeDir = u(_makeDir)\n\nmodule.exports = {\n  mkdirs: makeDir,\n  mkdirsSync: makeDirSync,\n  // alias\n  mkdirp: makeDir,\n  mkdirpSync: makeDirSync,\n  ensureDir: makeDir,\n  ensureDirSync: makeDirSync\n}\n","'use strict'\nconst u = require('universalify').fromPromise\nconst fs = require('../fs')\n\nfunction pathExists (path) {\n  return fs.access(path).then(() => true).catch(() => false)\n}\n\nmodule.exports = {\n  pathExists: u(pathExists),\n  pathExistsSync: fs.existsSync\n}\n","'use strict'\n\nconst fs = require('graceful-fs')\n\nfunction utimesMillis (path, atime, mtime, callback) {\n  // if (!HAS_MILLIS_RES) return fs.utimes(path, atime, mtime, callback)\n  fs.open(path, 'r+', (err, fd) => {\n    if (err) return callback(err)\n    fs.futimes(fd, atime, mtime, futimesErr => {\n      fs.close(fd, closeErr => {\n        if (callback) callback(futimesErr || closeErr)\n      })\n    })\n  })\n}\n\nfunction utimesMillisSync (path, atime, mtime) {\n  const fd = fs.openSync(path, 'r+')\n  fs.futimesSync(fd, atime, mtime)\n  return fs.closeSync(fd)\n}\n\nmodule.exports = {\n  utimesMillis,\n  utimesMillisSync\n}\n","'use strict'\n\nconst fs = require('../fs')\nconst path = require('path')\nconst util = require('util')\n\nfunction getStats (src, dest, opts) {\n  const statFunc = opts.dereference\n    ? (file) => fs.stat(file, { bigint: true })\n    : (file) => fs.lstat(file, { bigint: true })\n  return Promise.all([\n    statFunc(src),\n    statFunc(dest).catch(err => {\n      if (err.code === 'ENOENT') return null\n      throw err\n    })\n  ]).then(([srcStat, destStat]) => ({ srcStat, destStat }))\n}\n\nfunction getStatsSync (src, dest, opts) {\n  let destStat\n  const statFunc = opts.dereference\n    ? (file) => fs.statSync(file, { bigint: true })\n    : (file) => fs.lstatSync(file, { bigint: true })\n  const srcStat = statFunc(src)\n  try {\n    destStat = statFunc(dest)\n  } catch (err) {\n    if (err.code === 'ENOENT') return { srcStat, destStat: null }\n    throw err\n  }\n  return { srcStat, destStat }\n}\n\nfunction checkPaths (src, dest, funcName, opts, cb) {\n  util.callbackify(getStats)(src, dest, opts, (err, stats) => {\n    if (err) return cb(err)\n    const { srcStat, destStat } = stats\n\n    if (destStat) {\n      if (areIdentical(srcStat, destStat)) {\n        const srcBaseName = path.basename(src)\n        const destBaseName = path.basename(dest)\n        if (funcName === 'move' &&\n          srcBaseName !== destBaseName &&\n          srcBaseName.toLowerCase() === destBaseName.toLowerCase()) {\n          return cb(null, { srcStat, destStat, isChangingCase: true })\n        }\n        return cb(new Error('Source and destination must not be the same.'))\n      }\n      if (srcStat.isDirectory() && !destStat.isDirectory()) {\n        return cb(new Error(`Cannot overwrite non-directory '${dest}' with directory '${src}'.`))\n      }\n      if (!srcStat.isDirectory() && destStat.isDirectory()) {\n        return cb(new Error(`Cannot overwrite directory '${dest}' with non-directory '${src}'.`))\n      }\n    }\n\n    if (srcStat.isDirectory() && isSrcSubdir(src, dest)) {\n      return cb(new Error(errMsg(src, dest, funcName)))\n    }\n    return cb(null, { srcStat, destStat })\n  })\n}\n\nfunction checkPathsSync (src, dest, funcName, opts) {\n  const { srcStat, destStat } = getStatsSync(src, dest, opts)\n\n  if (destStat) {\n    if (areIdentical(srcStat, destStat)) {\n      const srcBaseName = path.basename(src)\n      const destBaseName = path.basename(dest)\n      if (funcName === 'move' &&\n        srcBaseName !== destBaseName &&\n        srcBaseName.toLowerCase() === destBaseName.toLowerCase()) {\n        return { srcStat, destStat, isChangingCase: true }\n      }\n      throw new Error('Source and destination must not be the same.')\n    }\n    if (srcStat.isDirectory() && !destStat.isDirectory()) {\n      throw new Error(`Cannot overwrite non-directory '${dest}' with directory '${src}'.`)\n    }\n    if (!srcStat.isDirectory() && destStat.isDirectory()) {\n      throw new Error(`Cannot overwrite directory '${dest}' with non-directory '${src}'.`)\n    }\n  }\n\n  if (srcStat.isDirectory() && isSrcSubdir(src, dest)) {\n    throw new Error(errMsg(src, dest, funcName))\n  }\n  return { srcStat, destStat }\n}\n\n// recursively check if dest parent is a subdirectory of src.\n// It works for all file types including symlinks since it\n// checks the src and dest inodes. It starts from the deepest\n// parent and stops once it reaches the src parent or the root path.\nfunction checkParentPaths (src, srcStat, dest, funcName, cb) {\n  const srcParent = path.resolve(path.dirname(src))\n  const destParent = path.resolve(path.dirname(dest))\n  if (destParent === srcParent || destParent === path.parse(destParent).root) return cb()\n  fs.stat(destParent, { bigint: true }, (err, destStat) => {\n    if (err) {\n      if (err.code === 'ENOENT') return cb()\n      return cb(err)\n    }\n    if (areIdentical(srcStat, destStat)) {\n      return cb(new Error(errMsg(src, dest, funcName)))\n    }\n    return checkParentPaths(src, srcStat, destParent, funcName, cb)\n  })\n}\n\nfunction checkParentPathsSync (src, srcStat, dest, funcName) {\n  const srcParent = path.resolve(path.dirname(src))\n  const destParent = path.resolve(path.dirname(dest))\n  if (destParent === srcParent || destParent === path.parse(destParent).root) return\n  let destStat\n  try {\n    destStat = fs.statSync(destParent, { bigint: true })\n  } catch (err) {\n    if (err.code === 'ENOENT') return\n    throw err\n  }\n  if (areIdentical(srcStat, destStat)) {\n    throw new Error(errMsg(src, dest, funcName))\n  }\n  return checkParentPathsSync(src, srcStat, destParent, funcName)\n}\n\nfunction areIdentical (srcStat, destStat) {\n  return destStat.ino && destStat.dev && destStat.ino === srcStat.ino && destStat.dev === srcStat.dev\n}\n\n// return true if dest is a subdir of src, otherwise false.\n// It only checks the path strings.\nfunction isSrcSubdir (src, dest) {\n  const srcArr = path.resolve(src).split(path.sep).filter(i => i)\n  const destArr = path.resolve(dest).split(path.sep).filter(i => i)\n  return srcArr.reduce((acc, cur, i) => acc && destArr[i] === cur, true)\n}\n\nfunction errMsg (src, dest, funcName) {\n  return `Cannot ${funcName} '${src}' to a subdirectory of itself, '${dest}'.`\n}\n\nmodule.exports = {\n  checkPaths,\n  checkPathsSync,\n  checkParentPaths,\n  checkParentPathsSync,\n  isSrcSubdir,\n  areIdentical\n}\n","'use strict'\n\nconst fs = require('graceful-fs')\nconst path = require('path')\nconst mkdirs = require('../mkdirs').mkdirs\nconst pathExists = require('../path-exists').pathExists\nconst utimesMillis = require('../util/utimes').utimesMillis\nconst stat = require('../util/stat')\n\nfunction copy (src, dest, opts, cb) {\n  if (typeof opts === 'function' && !cb) {\n    cb = opts\n    opts = {}\n  } else if (typeof opts === 'function') {\n    opts = { filter: opts }\n  }\n\n  cb = cb || function () {}\n  opts = opts || {}\n\n  opts.clobber = 'clobber' in opts ? !!opts.clobber : true // default to true for now\n  opts.overwrite = 'overwrite' in opts ? !!opts.overwrite : opts.clobber // overwrite falls back to clobber\n\n  // Warn about using preserveTimestamps on 32-bit node\n  if (opts.preserveTimestamps && process.arch === 'ia32') {\n    process.emitWarning(\n      'Using the preserveTimestamps option in 32-bit node is not recommended;\\n\\n' +\n      '\\tsee https://github.com/jprichardson/node-fs-extra/issues/269',\n      'Warning', 'fs-extra-WARN0001'\n    )\n  }\n\n  stat.checkPaths(src, dest, 'copy', opts, (err, stats) => {\n    if (err) return cb(err)\n    const { srcStat, destStat } = stats\n    stat.checkParentPaths(src, srcStat, dest, 'copy', err => {\n      if (err) return cb(err)\n      runFilter(src, dest, opts, (err, include) => {\n        if (err) return cb(err)\n        if (!include) return cb()\n\n        checkParentDir(destStat, src, dest, opts, cb)\n      })\n    })\n  })\n}\n\nfunction checkParentDir (destStat, src, dest, opts, cb) {\n  const destParent = path.dirname(dest)\n  pathExists(destParent, (err, dirExists) => {\n    if (err) return cb(err)\n    if (dirExists) return getStats(destStat, src, dest, opts, cb)\n    mkdirs(destParent, err => {\n      if (err) return cb(err)\n      return getStats(destStat, src, dest, opts, cb)\n    })\n  })\n}\n\nfunction runFilter (src, dest, opts, cb) {\n  if (!opts.filter) return cb(null, true)\n  Promise.resolve(opts.filter(src, dest))\n    .then(include => cb(null, include), error => cb(error))\n}\n\nfunction getStats (destStat, src, dest, opts, cb) {\n  const stat = opts.dereference ? fs.stat : fs.lstat\n  stat(src, (err, srcStat) => {\n    if (err) return cb(err)\n\n    if (srcStat.isDirectory()) return onDir(srcStat, destStat, src, dest, opts, cb)\n    else if (srcStat.isFile() ||\n             srcStat.isCharacterDevice() ||\n             srcStat.isBlockDevice()) return onFile(srcStat, destStat, src, dest, opts, cb)\n    else if (srcStat.isSymbolicLink()) return onLink(destStat, src, dest, opts, cb)\n    else if (srcStat.isSocket()) return cb(new Error(`Cannot copy a socket file: ${src}`))\n    else if (srcStat.isFIFO()) return cb(new Error(`Cannot copy a FIFO pipe: ${src}`))\n    return cb(new Error(`Unknown file: ${src}`))\n  })\n}\n\nfunction onFile (srcStat, destStat, src, dest, opts, cb) {\n  if (!destStat) return copyFile(srcStat, src, dest, opts, cb)\n  return mayCopyFile(srcStat, src, dest, opts, cb)\n}\n\nfunction mayCopyFile (srcStat, src, dest, opts, cb) {\n  if (opts.overwrite) {\n    fs.unlink(dest, err => {\n      if (err) return cb(err)\n      return copyFile(srcStat, src, dest, opts, cb)\n    })\n  } else if (opts.errorOnExist) {\n    return cb(new Error(`'${dest}' already exists`))\n  } else return cb()\n}\n\nfunction copyFile (srcStat, src, dest, opts, cb) {\n  fs.copyFile(src, dest, err => {\n    if (err) return cb(err)\n    if (opts.preserveTimestamps) return handleTimestampsAndMode(srcStat.mode, src, dest, cb)\n    return setDestMode(dest, srcStat.mode, cb)\n  })\n}\n\nfunction handleTimestampsAndMode (srcMode, src, dest, cb) {\n  // Make sure the file is writable before setting the timestamp\n  // otherwise open fails with EPERM when invoked with 'r+'\n  // (through utimes call)\n  if (fileIsNotWritable(srcMode)) {\n    return makeFileWritable(dest, srcMode, err => {\n      if (err) return cb(err)\n      return setDestTimestampsAndMode(srcMode, src, dest, cb)\n    })\n  }\n  return setDestTimestampsAndMode(srcMode, src, dest, cb)\n}\n\nfunction fileIsNotWritable (srcMode) {\n  return (srcMode & 0o200) === 0\n}\n\nfunction makeFileWritable (dest, srcMode, cb) {\n  return setDestMode(dest, srcMode | 0o200, cb)\n}\n\nfunction setDestTimestampsAndMode (srcMode, src, dest, cb) {\n  setDestTimestamps(src, dest, err => {\n    if (err) return cb(err)\n    return setDestMode(dest, srcMode, cb)\n  })\n}\n\nfunction setDestMode (dest, srcMode, cb) {\n  return fs.chmod(dest, srcMode, cb)\n}\n\nfunction setDestTimestamps (src, dest, cb) {\n  // The initial srcStat.atime cannot be trusted\n  // because it is modified by the read(2) system call\n  // (See https://nodejs.org/api/fs.html#fs_stat_time_values)\n  fs.stat(src, (err, updatedSrcStat) => {\n    if (err) return cb(err)\n    return utimesMillis(dest, updatedSrcStat.atime, updatedSrcStat.mtime, cb)\n  })\n}\n\nfunction onDir (srcStat, destStat, src, dest, opts, cb) {\n  if (!destStat) return mkDirAndCopy(srcStat.mode, src, dest, opts, cb)\n  return copyDir(src, dest, opts, cb)\n}\n\nfunction mkDirAndCopy (srcMode, src, dest, opts, cb) {\n  fs.mkdir(dest, err => {\n    if (err) return cb(err)\n    copyDir(src, dest, opts, err => {\n      if (err) return cb(err)\n      return setDestMode(dest, srcMode, cb)\n    })\n  })\n}\n\nfunction copyDir (src, dest, opts, cb) {\n  fs.readdir(src, (err, items) => {\n    if (err) return cb(err)\n    return copyDirItems(items, src, dest, opts, cb)\n  })\n}\n\nfunction copyDirItems (items, src, dest, opts, cb) {\n  const item = items.pop()\n  if (!item) return cb()\n  return copyDirItem(items, item, src, dest, opts, cb)\n}\n\nfunction copyDirItem (items, item, src, dest, opts, cb) {\n  const srcItem = path.join(src, item)\n  const destItem = path.join(dest, item)\n  runFilter(srcItem, destItem, opts, (err, include) => {\n    if (err) return cb(err)\n    if (!include) return copyDirItems(items, src, dest, opts, cb)\n\n    stat.checkPaths(srcItem, destItem, 'copy', opts, (err, stats) => {\n      if (err) return cb(err)\n      const { destStat } = stats\n      getStats(destStat, srcItem, destItem, opts, err => {\n        if (err) return cb(err)\n        return copyDirItems(items, src, dest, opts, cb)\n      })\n    })\n  })\n}\n\nfunction onLink (destStat, src, dest, opts, cb) {\n  fs.readlink(src, (err, resolvedSrc) => {\n    if (err) return cb(err)\n    if (opts.dereference) {\n      resolvedSrc = path.resolve(process.cwd(), resolvedSrc)\n    }\n\n    if (!destStat) {\n      return fs.symlink(resolvedSrc, dest, cb)\n    } else {\n      fs.readlink(dest, (err, resolvedDest) => {\n        if (err) {\n          // dest exists and is a regular file or directory,\n          // Windows may throw UNKNOWN error. If dest already exists,\n          // fs throws error anyway, so no need to guard against it here.\n          if (err.code === 'EINVAL' || err.code === 'UNKNOWN') return fs.symlink(resolvedSrc, dest, cb)\n          return cb(err)\n        }\n        if (opts.dereference) {\n          resolvedDest = path.resolve(process.cwd(), resolvedDest)\n        }\n        if (stat.isSrcSubdir(resolvedSrc, resolvedDest)) {\n          return cb(new Error(`Cannot copy '${resolvedSrc}' to a subdirectory of itself, '${resolvedDest}'.`))\n        }\n\n        // do not copy if src is a subdir of dest since unlinking\n        // dest in this case would result in removing src contents\n        // and therefore a broken symlink would be created.\n        if (stat.isSrcSubdir(resolvedDest, resolvedSrc)) {\n          return cb(new Error(`Cannot overwrite '${resolvedDest}' with '${resolvedSrc}'.`))\n        }\n        return copyLink(resolvedSrc, dest, cb)\n      })\n    }\n  })\n}\n\nfunction copyLink (resolvedSrc, dest, cb) {\n  fs.unlink(dest, err => {\n    if (err) return cb(err)\n    return fs.symlink(resolvedSrc, dest, cb)\n  })\n}\n\nmodule.exports = copy\n","'use strict'\n\nconst fs = require('graceful-fs')\nconst path = require('path')\nconst mkdirsSync = require('../mkdirs').mkdirsSync\nconst utimesMillisSync = require('../util/utimes').utimesMillisSync\nconst stat = require('../util/stat')\n\nfunction copySync (src, dest, opts) {\n  if (typeof opts === 'function') {\n    opts = { filter: opts }\n  }\n\n  opts = opts || {}\n  opts.clobber = 'clobber' in opts ? !!opts.clobber : true // default to true for now\n  opts.overwrite = 'overwrite' in opts ? !!opts.overwrite : opts.clobber // overwrite falls back to clobber\n\n  // Warn about using preserveTimestamps on 32-bit node\n  if (opts.preserveTimestamps && process.arch === 'ia32') {\n    process.emitWarning(\n      'Using the preserveTimestamps option in 32-bit node is not recommended;\\n\\n' +\n      '\\tsee https://github.com/jprichardson/node-fs-extra/issues/269',\n      'Warning', 'fs-extra-WARN0002'\n    )\n  }\n\n  const { srcStat, destStat } = stat.checkPathsSync(src, dest, 'copy', opts)\n  stat.checkParentPathsSync(src, srcStat, dest, 'copy')\n  if (opts.filter && !opts.filter(src, dest)) return\n  const destParent = path.dirname(dest)\n  if (!fs.existsSync(destParent)) mkdirsSync(destParent)\n  return getStats(destStat, src, dest, opts)\n}\n\nfunction getStats (destStat, src, dest, opts) {\n  const statSync = opts.dereference ? fs.statSync : fs.lstatSync\n  const srcStat = statSync(src)\n\n  if (srcStat.isDirectory()) return onDir(srcStat, destStat, src, dest, opts)\n  else if (srcStat.isFile() ||\n           srcStat.isCharacterDevice() ||\n           srcStat.isBlockDevice()) return onFile(srcStat, destStat, src, dest, opts)\n  else if (srcStat.isSymbolicLink()) return onLink(destStat, src, dest, opts)\n  else if (srcStat.isSocket()) throw new Error(`Cannot copy a socket file: ${src}`)\n  else if (srcStat.isFIFO()) throw new Error(`Cannot copy a FIFO pipe: ${src}`)\n  throw new Error(`Unknown file: ${src}`)\n}\n\nfunction onFile (srcStat, destStat, src, dest, opts) {\n  if (!destStat) return copyFile(srcStat, src, dest, opts)\n  return mayCopyFile(srcStat, src, dest, opts)\n}\n\nfunction mayCopyFile (srcStat, src, dest, opts) {\n  if (opts.overwrite) {\n    fs.unlinkSync(dest)\n    return copyFile(srcStat, src, dest, opts)\n  } else if (opts.errorOnExist) {\n    throw new Error(`'${dest}' already exists`)\n  }\n}\n\nfunction copyFile (srcStat, src, dest, opts) {\n  fs.copyFileSync(src, dest)\n  if (opts.preserveTimestamps) handleTimestamps(srcStat.mode, src, dest)\n  return setDestMode(dest, srcStat.mode)\n}\n\nfunction handleTimestamps (srcMode, src, dest) {\n  // Make sure the file is writable before setting the timestamp\n  // otherwise open fails with EPERM when invoked with 'r+'\n  // (through utimes call)\n  if (fileIsNotWritable(srcMode)) makeFileWritable(dest, srcMode)\n  return setDestTimestamps(src, dest)\n}\n\nfunction fileIsNotWritable (srcMode) {\n  return (srcMode & 0o200) === 0\n}\n\nfunction makeFileWritable (dest, srcMode) {\n  return setDestMode(dest, srcMode | 0o200)\n}\n\nfunction setDestMode (dest, srcMode) {\n  return fs.chmodSync(dest, srcMode)\n}\n\nfunction setDestTimestamps (src, dest) {\n  // The initial srcStat.atime cannot be trusted\n  // because it is modified by the read(2) system call\n  // (See https://nodejs.org/api/fs.html#fs_stat_time_values)\n  const updatedSrcStat = fs.statSync(src)\n  return utimesMillisSync(dest, updatedSrcStat.atime, updatedSrcStat.mtime)\n}\n\nfunction onDir (srcStat, destStat, src, dest, opts) {\n  if (!destStat) return mkDirAndCopy(srcStat.mode, src, dest, opts)\n  return copyDir(src, dest, opts)\n}\n\nfunction mkDirAndCopy (srcMode, src, dest, opts) {\n  fs.mkdirSync(dest)\n  copyDir(src, dest, opts)\n  return setDestMode(dest, srcMode)\n}\n\nfunction copyDir (src, dest, opts) {\n  fs.readdirSync(src).forEach(item => copyDirItem(item, src, dest, opts))\n}\n\nfunction copyDirItem (item, src, dest, opts) {\n  const srcItem = path.join(src, item)\n  const destItem = path.join(dest, item)\n  if (opts.filter && !opts.filter(srcItem, destItem)) return\n  const { destStat } = stat.checkPathsSync(srcItem, destItem, 'copy', opts)\n  return getStats(destStat, srcItem, destItem, opts)\n}\n\nfunction onLink (destStat, src, dest, opts) {\n  let resolvedSrc = fs.readlinkSync(src)\n  if (opts.dereference) {\n    resolvedSrc = path.resolve(process.cwd(), resolvedSrc)\n  }\n\n  if (!destStat) {\n    return fs.symlinkSync(resolvedSrc, dest)\n  } else {\n    let resolvedDest\n    try {\n      resolvedDest = fs.readlinkSync(dest)\n    } catch (err) {\n      // dest exists and is a regular file or directory,\n      // Windows may throw UNKNOWN error. If dest already exists,\n      // fs throws error anyway, so no need to guard against it here.\n      if (err.code === 'EINVAL' || err.code === 'UNKNOWN') return fs.symlinkSync(resolvedSrc, dest)\n      throw err\n    }\n    if (opts.dereference) {\n      resolvedDest = path.resolve(process.cwd(), resolvedDest)\n    }\n    if (stat.isSrcSubdir(resolvedSrc, resolvedDest)) {\n      throw new Error(`Cannot copy '${resolvedSrc}' to a subdirectory of itself, '${resolvedDest}'.`)\n    }\n\n    // prevent copy if src is a subdir of dest since unlinking\n    // dest in this case would result in removing src contents\n    // and therefore a broken symlink would be created.\n    if (stat.isSrcSubdir(resolvedDest, resolvedSrc)) {\n      throw new Error(`Cannot overwrite '${resolvedDest}' with '${resolvedSrc}'.`)\n    }\n    return copyLink(resolvedSrc, dest)\n  }\n}\n\nfunction copyLink (resolvedSrc, dest) {\n  fs.unlinkSync(dest)\n  return fs.symlinkSync(resolvedSrc, dest)\n}\n\nmodule.exports = copySync\n","'use strict'\n\nconst u = require('universalify').fromCallback\nmodule.exports = {\n  copy: u(require('./copy')),\n  copySync: require('./copy-sync')\n}\n","'use strict'\n\nconst fs = require('graceful-fs')\nconst u = require('universalify').fromCallback\n\nfunction remove (path, callback) {\n  fs.rm(path, { recursive: true, force: true }, callback)\n}\n\nfunction removeSync (path) {\n  fs.rmSync(path, { recursive: true, force: true })\n}\n\nmodule.exports = {\n  remove: u(remove),\n  removeSync\n}\n","'use strict'\n\nconst u = require('universalify').fromPromise\nconst fs = require('../fs')\nconst path = require('path')\nconst mkdir = require('../mkdirs')\nconst remove = require('../remove')\n\nconst emptyDir = u(async function emptyDir (dir) {\n  let items\n  try {\n    items = await fs.readdir(dir)\n  } catch {\n    return mkdir.mkdirs(dir)\n  }\n\n  return Promise.all(items.map(item => remove.remove(path.join(dir, item))))\n})\n\nfunction emptyDirSync (dir) {\n  let items\n  try {\n    items = fs.readdirSync(dir)\n  } catch {\n    return mkdir.mkdirsSync(dir)\n  }\n\n  items.forEach(item => {\n    item = path.join(dir, item)\n    remove.removeSync(item)\n  })\n}\n\nmodule.exports = {\n  emptyDirSync,\n  emptydirSync: emptyDirSync,\n  emptyDir,\n  emptydir: emptyDir\n}\n","'use strict'\n\nconst u = require('universalify').fromCallback\nconst path = require('path')\nconst fs = require('graceful-fs')\nconst mkdir = require('../mkdirs')\n\nfunction createFile (file, callback) {\n  function makeFile () {\n    fs.writeFile(file, '', err => {\n      if (err) return callback(err)\n      callback()\n    })\n  }\n\n  fs.stat(file, (err, stats) => { // eslint-disable-line handle-callback-err\n    if (!err && stats.isFile()) return callback()\n    const dir = path.dirname(file)\n    fs.stat(dir, (err, stats) => {\n      if (err) {\n        // if the directory doesn't exist, make it\n        if (err.code === 'ENOENT') {\n          return mkdir.mkdirs(dir, err => {\n            if (err) return callback(err)\n            makeFile()\n          })\n        }\n        return callback(err)\n      }\n\n      if (stats.isDirectory()) makeFile()\n      else {\n        // parent is not a directory\n        // This is just to cause an internal ENOTDIR error to be thrown\n        fs.readdir(dir, err => {\n          if (err) return callback(err)\n        })\n      }\n    })\n  })\n}\n\nfunction createFileSync (file) {\n  let stats\n  try {\n    stats = fs.statSync(file)\n  } catch {}\n  if (stats && stats.isFile()) return\n\n  const dir = path.dirname(file)\n  try {\n    if (!fs.statSync(dir).isDirectory()) {\n      // parent is not a directory\n      // This is just to cause an internal ENOTDIR error to be thrown\n      fs.readdirSync(dir)\n    }\n  } catch (err) {\n    // If the stat call above failed because the directory doesn't exist, create it\n    if (err && err.code === 'ENOENT') mkdir.mkdirsSync(dir)\n    else throw err\n  }\n\n  fs.writeFileSync(file, '')\n}\n\nmodule.exports = {\n  createFile: u(createFile),\n  createFileSync\n}\n","'use strict'\n\nconst u = require('universalify').fromCallback\nconst path = require('path')\nconst fs = require('graceful-fs')\nconst mkdir = require('../mkdirs')\nconst pathExists = require('../path-exists').pathExists\nconst { areIdentical } = require('../util/stat')\n\nfunction createLink (srcpath, dstpath, callback) {\n  function makeLink (srcpath, dstpath) {\n    fs.link(srcpath, dstpath, err => {\n      if (err) return callback(err)\n      callback(null)\n    })\n  }\n\n  fs.lstat(dstpath, (_, dstStat) => {\n    fs.lstat(srcpath, (err, srcStat) => {\n      if (err) {\n        err.message = err.message.replace('lstat', 'ensureLink')\n        return callback(err)\n      }\n      if (dstStat && areIdentical(srcStat, dstStat)) return callback(null)\n\n      const dir = path.dirname(dstpath)\n      pathExists(dir, (err, dirExists) => {\n        if (err) return callback(err)\n        if (dirExists) return makeLink(srcpath, dstpath)\n        mkdir.mkdirs(dir, err => {\n          if (err) return callback(err)\n          makeLink(srcpath, dstpath)\n        })\n      })\n    })\n  })\n}\n\nfunction createLinkSync (srcpath, dstpath) {\n  let dstStat\n  try {\n    dstStat = fs.lstatSync(dstpath)\n  } catch {}\n\n  try {\n    const srcStat = fs.lstatSync(srcpath)\n    if (dstStat && areIdentical(srcStat, dstStat)) return\n  } catch (err) {\n    err.message = err.message.replace('lstat', 'ensureLink')\n    throw err\n  }\n\n  const dir = path.dirname(dstpath)\n  const dirExists = fs.existsSync(dir)\n  if (dirExists) return fs.linkSync(srcpath, dstpath)\n  mkdir.mkdirsSync(dir)\n\n  return fs.linkSync(srcpath, dstpath)\n}\n\nmodule.exports = {\n  createLink: u(createLink),\n  createLinkSync\n}\n","'use strict'\n\nconst path = require('path')\nconst fs = require('graceful-fs')\nconst pathExists = require('../path-exists').pathExists\n\n/**\n * Function that returns two types of paths, one relative to symlink, and one\n * relative to the current working directory. Checks if path is absolute or\n * relative. If the path is relative, this function checks if the path is\n * relative to symlink or relative to current working directory. This is an\n * initiative to find a smarter `srcpath` to supply when building symlinks.\n * This allows you to determine which path to use out of one of three possible\n * types of source paths. The first is an absolute path. This is detected by\n * `path.isAbsolute()`. When an absolute path is provided, it is checked to\n * see if it exists. If it does it's used, if not an error is returned\n * (callback)/ thrown (sync). The other two options for `srcpath` are a\n * relative url. By default Node's `fs.symlink` works by creating a symlink\n * using `dstpath` and expects the `srcpath` to be relative to the newly\n * created symlink. If you provide a `srcpath` that does not exist on the file\n * system it results in a broken symlink. To minimize this, the function\n * checks to see if the 'relative to symlink' source file exists, and if it\n * does it will use it. If it does not, it checks if there's a file that\n * exists that is relative to the current working directory, if does its used.\n * This preserves the expectations of the original fs.symlink spec and adds\n * the ability to pass in `relative to current working direcotry` paths.\n */\n\nfunction symlinkPaths (srcpath, dstpath, callback) {\n  if (path.isAbsolute(srcpath)) {\n    return fs.lstat(srcpath, (err) => {\n      if (err) {\n        err.message = err.message.replace('lstat', 'ensureSymlink')\n        return callback(err)\n      }\n      return callback(null, {\n        toCwd: srcpath,\n        toDst: srcpath\n      })\n    })\n  } else {\n    const dstdir = path.dirname(dstpath)\n    const relativeToDst = path.join(dstdir, srcpath)\n    return pathExists(relativeToDst, (err, exists) => {\n      if (err) return callback(err)\n      if (exists) {\n        return callback(null, {\n          toCwd: relativeToDst,\n          toDst: srcpath\n        })\n      } else {\n        return fs.lstat(srcpath, (err) => {\n          if (err) {\n            err.message = err.message.replace('lstat', 'ensureSymlink')\n            return callback(err)\n          }\n          return callback(null, {\n            toCwd: srcpath,\n            toDst: path.relative(dstdir, srcpath)\n          })\n        })\n      }\n    })\n  }\n}\n\nfunction symlinkPathsSync (srcpath, dstpath) {\n  let exists\n  if (path.isAbsolute(srcpath)) {\n    exists = fs.existsSync(srcpath)\n    if (!exists) throw new Error('absolute srcpath does not exist')\n    return {\n      toCwd: srcpath,\n      toDst: srcpath\n    }\n  } else {\n    const dstdir = path.dirname(dstpath)\n    const relativeToDst = path.join(dstdir, srcpath)\n    exists = fs.existsSync(relativeToDst)\n    if (exists) {\n      return {\n        toCwd: relativeToDst,\n        toDst: srcpath\n      }\n    } else {\n      exists = fs.existsSync(srcpath)\n      if (!exists) throw new Error('relative srcpath does not exist')\n      return {\n        toCwd: srcpath,\n        toDst: path.relative(dstdir, srcpath)\n      }\n    }\n  }\n}\n\nmodule.exports = {\n  symlinkPaths,\n  symlinkPathsSync\n}\n","'use strict'\n\nconst fs = require('graceful-fs')\n\nfunction symlinkType (srcpath, type, callback) {\n  callback = (typeof type === 'function') ? type : callback\n  type = (typeof type === 'function') ? false : type\n  if (type) return callback(null, type)\n  fs.lstat(srcpath, (err, stats) => {\n    if (err) return callback(null, 'file')\n    type = (stats && stats.isDirectory()) ? 'dir' : 'file'\n    callback(null, type)\n  })\n}\n\nfunction symlinkTypeSync (srcpath, type) {\n  let stats\n\n  if (type) return type\n  try {\n    stats = fs.lstatSync(srcpath)\n  } catch {\n    return 'file'\n  }\n  return (stats && stats.isDirectory()) ? 'dir' : 'file'\n}\n\nmodule.exports = {\n  symlinkType,\n  symlinkTypeSync\n}\n","'use strict'\n\nconst u = require('universalify').fromCallback\nconst path = require('path')\nconst fs = require('../fs')\nconst _mkdirs = require('../mkdirs')\nconst mkdirs = _mkdirs.mkdirs\nconst mkdirsSync = _mkdirs.mkdirsSync\n\nconst _symlinkPaths = require('./symlink-paths')\nconst symlinkPaths = _symlinkPaths.symlinkPaths\nconst symlinkPathsSync = _symlinkPaths.symlinkPathsSync\n\nconst _symlinkType = require('./symlink-type')\nconst symlinkType = _symlinkType.symlinkType\nconst symlinkTypeSync = _symlinkType.symlinkTypeSync\n\nconst pathExists = require('../path-exists').pathExists\n\nconst { areIdentical } = require('../util/stat')\n\nfunction createSymlink (srcpath, dstpath, type, callback) {\n  callback = (typeof type === 'function') ? type : callback\n  type = (typeof type === 'function') ? false : type\n\n  fs.lstat(dstpath, (err, stats) => {\n    if (!err && stats.isSymbolicLink()) {\n      Promise.all([\n        fs.stat(srcpath),\n        fs.stat(dstpath)\n      ]).then(([srcStat, dstStat]) => {\n        if (areIdentical(srcStat, dstStat)) return callback(null)\n        _createSymlink(srcpath, dstpath, type, callback)\n      })\n    } else _createSymlink(srcpath, dstpath, type, callback)\n  })\n}\n\nfunction _createSymlink (srcpath, dstpath, type, callback) {\n  symlinkPaths(srcpath, dstpath, (err, relative) => {\n    if (err) return callback(err)\n    srcpath = relative.toDst\n    symlinkType(relative.toCwd, type, (err, type) => {\n      if (err) return callback(err)\n      const dir = path.dirname(dstpath)\n      pathExists(dir, (err, dirExists) => {\n        if (err) return callback(err)\n        if (dirExists) return fs.symlink(srcpath, dstpath, type, callback)\n        mkdirs(dir, err => {\n          if (err) return callback(err)\n          fs.symlink(srcpath, dstpath, type, callback)\n        })\n      })\n    })\n  })\n}\n\nfunction createSymlinkSync (srcpath, dstpath, type) {\n  let stats\n  try {\n    stats = fs.lstatSync(dstpath)\n  } catch {}\n  if (stats && stats.isSymbolicLink()) {\n    const srcStat = fs.statSync(srcpath)\n    const dstStat = fs.statSync(dstpath)\n    if (areIdentical(srcStat, dstStat)) return\n  }\n\n  const relative = symlinkPathsSync(srcpath, dstpath)\n  srcpath = relative.toDst\n  type = symlinkTypeSync(relative.toCwd, type)\n  const dir = path.dirname(dstpath)\n  const exists = fs.existsSync(dir)\n  if (exists) return fs.symlinkSync(srcpath, dstpath, type)\n  mkdirsSync(dir)\n  return fs.symlinkSync(srcpath, dstpath, type)\n}\n\nmodule.exports = {\n  createSymlink: u(createSymlink),\n  createSymlinkSync\n}\n","'use strict'\n\nconst { createFile, createFileSync } = require('./file')\nconst { createLink, createLinkSync } = require('./link')\nconst { createSymlink, createSymlinkSync } = require('./symlink')\n\nmodule.exports = {\n  // file\n  createFile,\n  createFileSync,\n  ensureFile: createFile,\n  ensureFileSync: createFileSync,\n  // link\n  createLink,\n  createLinkSync,\n  ensureLink: createLink,\n  ensureLinkSync: createLinkSync,\n  // symlink\n  createSymlink,\n  createSymlinkSync,\n  ensureSymlink: createSymlink,\n  ensureSymlinkSync: createSymlinkSync\n}\n","function stringify (obj, { EOL = '\\n', finalEOL = true, replacer = null, spaces } = {}) {\n  const EOF = finalEOL ? EOL : ''\n  const str = JSON.stringify(obj, replacer, spaces)\n\n  return str.replace(/\\n/g, EOL) + EOF\n}\n\nfunction stripBom (content) {\n  // we do this because JSON.parse would convert it to a utf8 string if encoding wasn't specified\n  if (Buffer.isBuffer(content)) content = content.toString('utf8')\n  return content.replace(/^\\uFEFF/, '')\n}\n\nmodule.exports = { stringify, stripBom }\n","let _fs\ntry {\n  _fs = require('graceful-fs')\n} catch (_) {\n  _fs = require('fs')\n}\nconst universalify = require('universalify')\nconst { stringify, stripBom } = require('./utils')\n\nasync function _readFile (file, options = {}) {\n  if (typeof options === 'string') {\n    options = { encoding: options }\n  }\n\n  const fs = options.fs || _fs\n\n  const shouldThrow = 'throws' in options ? options.throws : true\n\n  let data = await universalify.fromCallback(fs.readFile)(file, options)\n\n  data = stripBom(data)\n\n  let obj\n  try {\n    obj = JSON.parse(data, options ? options.reviver : null)\n  } catch (err) {\n    if (shouldThrow) {\n      err.message = `${file}: ${err.message}`\n      throw err\n    } else {\n      return null\n    }\n  }\n\n  return obj\n}\n\nconst readFile = universalify.fromPromise(_readFile)\n\nfunction readFileSync (file, options = {}) {\n  if (typeof options === 'string') {\n    options = { encoding: options }\n  }\n\n  const fs = options.fs || _fs\n\n  const shouldThrow = 'throws' in options ? options.throws : true\n\n  try {\n    let content = fs.readFileSync(file, options)\n    content = stripBom(content)\n    return JSON.parse(content, options.reviver)\n  } catch (err) {\n    if (shouldThrow) {\n      err.message = `${file}: ${err.message}`\n      throw err\n    } else {\n      return null\n    }\n  }\n}\n\nasync function _writeFile (file, obj, options = {}) {\n  const fs = options.fs || _fs\n\n  const str = stringify(obj, options)\n\n  await universalify.fromCallback(fs.writeFile)(file, str, options)\n}\n\nconst writeFile = universalify.fromPromise(_writeFile)\n\nfunction writeFileSync (file, obj, options = {}) {\n  const fs = options.fs || _fs\n\n  const str = stringify(obj, options)\n  // not sure if fs.writeFileSync returns anything, but just in case\n  return fs.writeFileSync(file, str, options)\n}\n\nconst jsonfile = {\n  readFile,\n  readFileSync,\n  writeFile,\n  writeFileSync\n}\n\nmodule.exports = jsonfile\n","'use strict'\n\nconst jsonFile = require('jsonfile')\n\nmodule.exports = {\n  // jsonfile exports\n  readJson: jsonFile.readFile,\n  readJsonSync: jsonFile.readFileSync,\n  writeJson: jsonFile.writeFile,\n  writeJsonSync: jsonFile.writeFileSync\n}\n","'use strict'\n\nconst u = require('universalify').fromCallback\nconst fs = require('graceful-fs')\nconst path = require('path')\nconst mkdir = require('../mkdirs')\nconst pathExists = require('../path-exists').pathExists\n\nfunction outputFile (file, data, encoding, callback) {\n  if (typeof encoding === 'function') {\n    callback = encoding\n    encoding = 'utf8'\n  }\n\n  const dir = path.dirname(file)\n  pathExists(dir, (err, itDoes) => {\n    if (err) return callback(err)\n    if (itDoes) return fs.writeFile(file, data, encoding, callback)\n\n    mkdir.mkdirs(dir, err => {\n      if (err) return callback(err)\n\n      fs.writeFile(file, data, encoding, callback)\n    })\n  })\n}\n\nfunction outputFileSync (file, ...args) {\n  const dir = path.dirname(file)\n  if (fs.existsSync(dir)) {\n    return fs.writeFileSync(file, ...args)\n  }\n  mkdir.mkdirsSync(dir)\n  fs.writeFileSync(file, ...args)\n}\n\nmodule.exports = {\n  outputFile: u(outputFile),\n  outputFileSync\n}\n","'use strict'\n\nconst { stringify } = require('jsonfile/utils')\nconst { outputFile } = require('../output-file')\n\nasync function outputJson (file, data, options = {}) {\n  const str = stringify(data, options)\n\n  await outputFile(file, str, options)\n}\n\nmodule.exports = outputJson\n","'use strict'\n\nconst { stringify } = require('jsonfile/utils')\nconst { outputFileSync } = require('../output-file')\n\nfunction outputJsonSync (file, data, options) {\n  const str = stringify(data, options)\n\n  outputFileSync(file, str, options)\n}\n\nmodule.exports = outputJsonSync\n","'use strict'\n\nconst u = require('universalify').fromPromise\nconst jsonFile = require('./jsonfile')\n\njsonFile.outputJson = u(require('./output-json'))\njsonFile.outputJsonSync = require('./output-json-sync')\n// aliases\njsonFile.outputJSON = jsonFile.outputJson\njsonFile.outputJSONSync = jsonFile.outputJsonSync\njsonFile.writeJSON = jsonFile.writeJson\njsonFile.writeJSONSync = jsonFile.writeJsonSync\njsonFile.readJSON = jsonFile.readJson\njsonFile.readJSONSync = jsonFile.readJsonSync\n\nmodule.exports = jsonFile\n","'use strict'\n\nconst fs = require('graceful-fs')\nconst path = require('path')\nconst copy = require('../copy').copy\nconst remove = require('../remove').remove\nconst mkdirp = require('../mkdirs').mkdirp\nconst pathExists = require('../path-exists').pathExists\nconst stat = require('../util/stat')\n\nfunction move (src, dest, opts, cb) {\n  if (typeof opts === 'function') {\n    cb = opts\n    opts = {}\n  }\n\n  opts = opts || {}\n\n  const overwrite = opts.overwrite || opts.clobber || false\n\n  stat.checkPaths(src, dest, 'move', opts, (err, stats) => {\n    if (err) return cb(err)\n    const { srcStat, isChangingCase = false } = stats\n    stat.checkParentPaths(src, srcStat, dest, 'move', err => {\n      if (err) return cb(err)\n      if (isParentRoot(dest)) return doRename(src, dest, overwrite, isChangingCase, cb)\n      mkdirp(path.dirname(dest), err => {\n        if (err) return cb(err)\n        return doRename(src, dest, overwrite, isChangingCase, cb)\n      })\n    })\n  })\n}\n\nfunction isParentRoot (dest) {\n  const parent = path.dirname(dest)\n  const parsedPath = path.parse(parent)\n  return parsedPath.root === parent\n}\n\nfunction doRename (src, dest, overwrite, isChangingCase, cb) {\n  if (isChangingCase) return rename(src, dest, overwrite, cb)\n  if (overwrite) {\n    return remove(dest, err => {\n      if (err) return cb(err)\n      return rename(src, dest, overwrite, cb)\n    })\n  }\n  pathExists(dest, (err, destExists) => {\n    if (err) return cb(err)\n    if (destExists) return cb(new Error('dest already exists.'))\n    return rename(src, dest, overwrite, cb)\n  })\n}\n\nfunction rename (src, dest, overwrite, cb) {\n  fs.rename(src, dest, err => {\n    if (!err) return cb()\n    if (err.code !== 'EXDEV') return cb(err)\n    return moveAcrossDevice(src, dest, overwrite, cb)\n  })\n}\n\nfunction moveAcrossDevice (src, dest, overwrite, cb) {\n  const opts = {\n    overwrite,\n    errorOnExist: true,\n    preserveTimestamps: true\n  }\n  copy(src, dest, opts, err => {\n    if (err) return cb(err)\n    return remove(src, cb)\n  })\n}\n\nmodule.exports = move\n","'use strict'\n\nconst fs = require('graceful-fs')\nconst path = require('path')\nconst copySync = require('../copy').copySync\nconst removeSync = require('../remove').removeSync\nconst mkdirpSync = require('../mkdirs').mkdirpSync\nconst stat = require('../util/stat')\n\nfunction moveSync (src, dest, opts) {\n  opts = opts || {}\n  const overwrite = opts.overwrite || opts.clobber || false\n\n  const { srcStat, isChangingCase = false } = stat.checkPathsSync(src, dest, 'move', opts)\n  stat.checkParentPathsSync(src, srcStat, dest, 'move')\n  if (!isParentRoot(dest)) mkdirpSync(path.dirname(dest))\n  return doRename(src, dest, overwrite, isChangingCase)\n}\n\nfunction isParentRoot (dest) {\n  const parent = path.dirname(dest)\n  const parsedPath = path.parse(parent)\n  return parsedPath.root === parent\n}\n\nfunction doRename (src, dest, overwrite, isChangingCase) {\n  if (isChangingCase) return rename(src, dest, overwrite)\n  if (overwrite) {\n    removeSync(dest)\n    return rename(src, dest, overwrite)\n  }\n  if (fs.existsSync(dest)) throw new Error('dest already exists.')\n  return rename(src, dest, overwrite)\n}\n\nfunction rename (src, dest, overwrite) {\n  try {\n    fs.renameSync(src, dest)\n  } catch (err) {\n    if (err.code !== 'EXDEV') throw err\n    return moveAcrossDevice(src, dest, overwrite)\n  }\n}\n\nfunction moveAcrossDevice (src, dest, overwrite) {\n  const opts = {\n    overwrite,\n    errorOnExist: true,\n    preserveTimestamps: true\n  }\n  copySync(src, dest, opts)\n  return removeSync(src)\n}\n\nmodule.exports = moveSync\n","'use strict'\n\nconst u = require('universalify').fromCallback\nmodule.exports = {\n  move: u(require('./move')),\n  moveSync: require('./move-sync')\n}\n","'use strict'\n\nmodule.exports = {\n  // Export promiseified graceful-fs:\n  ...require('./fs'),\n  // Export extra methods:\n  ...require('./copy'),\n  ...require('./empty'),\n  ...require('./ensure'),\n  ...require('./json'),\n  ...require('./mkdirs'),\n  ...require('./move'),\n  ...require('./output-file'),\n  ...require('./path-exists'),\n  ...require('./remove')\n}\n","//     wink-nlp\n//\n//     Copyright (C) GRAYPE Systems Private Limited\n//\n//     This file is part of âwink-nlpâ.\n//\n//     Permission is hereby granted, free of charge, to any\n//     person obtaining a copy of this software and\n//     associated documentation files (the \"Software\"), to\n//     deal in the Software without restriction, including\n//     without limitation the rights to use, copy, modify,\n//     merge, publish, distribute, sublicense, and/or sell\n//     copies of the Software, and to permit persons to\n//     whom the Software is furnished to do so, subject to\n//     the following conditions:\n//\n//     The above copyright notice and this permission notice\n//     shall be included in all copies or substantial\n//     portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\n//     ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\n//     TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n//     PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//     DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF\n//     CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n//     CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\n\nvar consts = Object.create( null );\n// Unknown or the UNK!\nconsts.UNK = 0;\n// Bits reserved for `precedingSpaces`.\nconsts.bits4PrecedingSpace = 16;\n// Bits reserved for `lemma`.\nconsts.bits4lemma = 20;\n// Mask for pos extraction from tokens\nconsts.posMask = 0x3F00000;\n// Mask for preceding spaces.\nconsts.psMask = 0xFFFF;\n// Mask for pointer to normal in `xpansions`.\nconsts.xnMask = 0x3FFF0000;\n// Mask for lemma extraction in case of contractions.\nconsts.lemmaMask = 0xFFFFF;\n// Size of a single token.\nconsts.tkSize = 4;\n// Size of a single expansion.\nconsts.xpSize = 4; // can't: ca can can MD i.e. expansion, normal, lemma, pos.\n// Expansion count mask.\nconsts.xcMask = 0x1F;\n// Bits reserved for point to expansions in `lemma` space.\nconsts.bits4xpPointer = 14;\n// Negation Flag.\nconsts.negationFlag = Math.pow( 2, 31 );\n\nmodule.exports = consts;\n","//     wink-nlp\n//\n//     Copyright (C) GRAYPE Systems Private Limited\n//\n//     This file is part of âwink-nlpâ.\n//\n//     Permission is hereby granted, free of charge, to any\n//     person obtaining a copy of this software and\n//     associated documentation files (the \"Software\"), to\n//     deal in the Software without restriction, including\n//     without limitation the rights to use, copy, modify,\n//     merge, publish, distribute, sublicense, and/or sell\n//     copies of the Software, and to permit persons to\n//     whom the Software is furnished to do so, subject to\n//     the following conditions:\n//\n//     The above copyright notice and this permission notice\n//     shall be included in all copies or substantial\n//     portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\n//     ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\n//     TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n//     PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//     DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF\n//     CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n//     CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\n\n/* eslint-disable no-underscore-dangle */\n\nvar constants = require( './constants.js' );\n\n// Bits reserved for `precedingSpaces`.\nvar bits4PrecedingSpace = constants.bits4PrecedingSpace;\n// Size of a single expansion.\nvar xpSize = constants.xpSize;\n// Bits reserved for `lemma`.\nvar bits4lemma = constants.bits4lemma;\n// The UNK!\nvar UNK = constants.UNK;\n\nvar docDataWrapper = function ( data ) {\n  // Extract frequently referred data elements:\n  // Extract `cache`.\n  var cache = data.cache;\n  // Extract `tokens`.\n  var tokens = data.tokens;\n\n  // Returned!\n  var methods = Object.create( null );\n\n  // ## addToken\n  /**\n   *\n   * It first creates a new lexeme entry into the `cache` and then this entry\n   * is pushed into the `tokens` array alongwith the `precedingSpaces` and\n   * rest of the token properties are initialized to `0`.\n   *\n   * @param {string} text to be added as token.\n   * @param {string} category of the token.\n   * @param {number} precedingSpaces to the `text` as parsed by tokenizer.\n   * @param {number[]} tokens, where the token is added.\n   * @returns {boolean} always `true`.\n   * @private\n  */\n  var addToken = function ( text, category, precedingSpaces ) {\n    tokens.push( cache.add( text, category ), precedingSpaces, 0, 0 );\n    return true;\n  }; // addToken()\n\n  // ## addTokenIfInCache\n  /**\n   *\n   * Adds a token corresponding to the input `text` if it is found in cache i.e.\n   * not an OOV. The addition process ensures the following:\n   * 1. Preceding spaces are added.\n   * 2. If text is a contraction, it expansions are added. Since expansins\n   * consists of lexeme, normal, lemma and pos, all of these are added to the\n   * token structure.\n   *\n   * @param {string} text to be added as token.\n   * @param {number} precedingSpaces to the `text` as parsed by tokenizer.\n   * @returns {boolean} `truthy` if `text` is found in cache otherwise `falsy`.\n   * @private\n  */\n  var addTokenIfInCache = function ( text, precedingSpaces ) {\n    // The array `tokenIndex` will contain 1-element if `text` is not a predefined\n    // contraction; otherwise it will contain `n x 4` elements, where `n` is the\n    // number of expansions.\n    var tokenIndex = cache.lookup( text );\n    // Temp for preceding space in case of contarction.\n    var ps;\n    // Temp for lemma & pos.\n    var lemma, pos;\n\n    // `UNK` means 0 or `falsy`; it flags that token has not been added.\n    if ( tokenIndex === null ) return UNK;\n\n    if ( tokenIndex.length === 1 ) {\n      tokens.push( tokenIndex[ 0 ], precedingSpaces, 0, 0 );\n    } else {\n      // Contraction, itereate through each expansion.\n      for ( let k = 0; k < tokenIndex.length; k += xpSize ) {\n        // The `precedingSpaces` will be 0 except for the first expansion.\n        ps = ( k === 0 ) ? precedingSpaces : 0;\n        // Concatenate pointer to normal contained in `xpansions` with preceding\n        // spaces.\n        ps |= ( tokenIndex[ k + 1 ] << bits4PrecedingSpace ); // eslint-disable-line no-bitwise\n        // Lemma & POS are fixed mostly for all contractions.\n        lemma = tokenIndex[ k + 2 ];\n        pos   = tokenIndex[ k + 3 ];\n        // Add token; annotations may be filled later in the pipeline.\n        tokens.push( tokenIndex[ k ], ps, ( lemma | ( pos << bits4lemma ) ), 0 ); // eslint-disable-line no-bitwise\n      }\n    }\n    // Return `truthy`, indicating that token(s) has been added successfully.\n    return 99;\n  }; // addTokenIfInCache()\n\n  // ## isLexeme\n  /**\n   *\n   * Tests if the `text` is a valid lexeme or not.\n   *\n   * @param {string} text to be added as token.\n   * @returns {boolean} `truthy` if `text` is a valid lexeme otherwise `falsy`.\n   * @private\n  */\n  var isLexeme = function ( text ) {\n    // Return `truthy` if the text is valid i.e. found. Note for `$%^OOV^%$`, it returns\n    // `0` i.e. `falsy`!\n    return cache.lookup( text );\n  }; // isLexeme()\n\n  var clean = function () {\n    tokens = null;\n    cache = null;\n  }; // clean()\n\n  methods._addToken = addToken;\n  methods._addTokenIfInCache = addTokenIfInCache;\n  methods.isLexeme = isLexeme;\n  methods.clean = clean;\n\n  return methods;\n}; // docDataWrapper()\n\nmodule.exports = docDataWrapper;\n","//     wink-nlp\n//\n//     Copyright (C) GRAYPE Systems Private Limited\n//\n//     This file is part of âwink-nlpâ.\n//\n//     Permission is hereby granted, free of charge, to any\n//     person obtaining a copy of this software and\n//     associated documentation files (the \"Software\"), to\n//     deal in the Software without restriction, including\n//     without limitation the rights to use, copy, modify,\n//     merge, publish, distribute, sublicense, and/or sell\n//     copies of the Software, and to permit persons to\n//     whom the Software is furnished to do so, subject to\n//     the following conditions:\n//\n//     The above copyright notice and this permission notice\n//     shall be included in all copies or substantial\n//     portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\n//     ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\n//     TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n//     PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//     DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF\n//     CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n//     CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\n\n// ## locate\n/**\n *\n * Locates the `token`'s index in the `spans` and returns the index of the\n * span, where it is found; or the edge â a fraction between the 2-candidate\n * span-elements. Locate dictionary meaning: **discover the exact place or\n * position of.**\n *\n * @param {number} token to be located.\n * @param {array[]} spans where token will be searched.\n * @return {number} index of span where token is found; if it is not found then\n * it returns the edge â a fraction between the 2-candidate span-elements.\n * @private\n*/\nvar locate = function ( token, spans ) {\n  var minIndex = 0;\n  var maxIndex = spans.length - 1;\n  var currIndex;\n  var leftToken;\n  var rightToken;\n  // Edge, if `token` is not found; they are converted to fractions using `sf`.\n  var edge = -1;\n  // `0.5` is a safe fraction as it is `2 ** -1`\n  var sf = 0.5;\n  while ( minIndex <= maxIndex ) {\n    currIndex = ( minIndex + maxIndex ) / 2 | 0; // eslint-disable-line no-bitwise\n    leftToken = spans[ currIndex ][ 0 ];\n    rightToken = spans[ currIndex ][ 1 ];\n\n    if ( token > rightToken ) {\n      minIndex = currIndex + 1;\n      edge = currIndex + sf;\n    } else if ( token < leftToken ) {\n      maxIndex = currIndex - 1;\n      edge = currIndex - sf;\n    } else return currIndex;\n  }\n  // Not found â return the edge!\n  return edge;\n}; // locate()\n\nmodule.exports = locate;\n","//     wink-nlp\n//\n//     Copyright (C) GRAYPE Systems Private Limited\n//\n//     This file is part of âwink-nlpâ.\n//\n//     Permission is hereby granted, free of charge, to any\n//     person obtaining a copy of this software and\n//     associated documentation files (the \"Software\"), to\n//     deal in the Software without restriction, including\n//     without limitation the rights to use, copy, modify,\n//     merge, publish, distribute, sublicense, and/or sell\n//     copies of the Software, and to permit persons to\n//     whom the Software is furnished to do so, subject to\n//     the following conditions:\n//\n//     The above copyright notice and this permission notice\n//     shall be included in all copies or substantial\n//     portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\n//     ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\n//     TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n//     PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//     DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF\n//     CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n//     CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\n\nvar locate = require( './locate.js' );\n\n// ## containedEntities\n/**\n *\n * Returns the contained entities, if any within the span defined by the\n * `sentenceStart` and the `sentenceEnd`.\n *\n * @param {array} entities from where contained ones will be returned, if any.\n * @param {number} sentenceStart start of the sentence.\n * @param {number} sentenceEnd end of the sentence.\n * @return {array} of contained entities, empty if none are contained.\n * @private\n*/\nvar containedEntities = function ( entities, sentenceStart, sentenceEnd ) {\n  var left = locate( sentenceStart, entities );\n  var right = locate( sentenceEnd, entities );\n  var maxIndex = entities.length - 1;\n  // Contained entities.\n  var contained = [];\n  // Index left & right.\n  var kl, kr;\n  // Helper.\n  var i;\n\n  // Return empty array if span is completely on the left or right side of the\n  // `entities`.\n  if ( ( left < 0 && right < 0 ) || ( left > maxIndex && right > maxIndex ) ) {\n    return contained;\n  }\n\n  // The `left` must move to the next integer value to get the first index.\n  // To avoid `-0`!\n  kl = ( left < 0 ) ? 0 : Math.ceil( left );\n\n  // If both `left` and `right` are fractions & equal means nothing is contained.\n  if ( ( left === right ) && ( kl !== left ) ) {\n    return contained;\n  }\n\n  // Something is conatined for sure, capture it and return!\n  kr = Math.floor( right );\n  for ( i = kl; i <= kr; i += 1 ) {\n    contained.push( i );\n  }\n\n  return contained;\n}; // containedEntities()\n\nmodule.exports = containedEntities;\n","//     wink-nlp\n//\n//     Copyright (C) GRAYPE Systems Private Limited\n//\n//     This file is part of âwink-nlpâ.\n//\n//     Permission is hereby granted, free of charge, to any\n//     person obtaining a copy of this software and\n//     associated documentation files (the \"Software\"), to\n//     deal in the Software without restriction, including\n//     without limitation the rights to use, copy, modify,\n//     merge, publish, distribute, sublicense, and/or sell\n//     copies of the Software, and to permit persons to\n//     whom the Software is furnished to do so, subject to\n//     the following conditions:\n//\n//     The above copyright notice and this permission notice\n//     shall be included in all copies or substantial\n//     portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\n//     ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\n//     TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n//     PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//     DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF\n//     CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n//     CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\n\n// ## search\n/**\n *\n * Searches the `token`'s index in the `spans` and returns the index of the\n * span, where it is found.\n *\n * @param {number} token to be searched.\n * @param {array[]} spans where token will be searched.\n * @return {number} index of span where token is found; if it is not found then\n * it returns `null`.\n * @private\n*/\nvar search = function ( token, spans ) {\n  var minIndex = 0;\n  var maxIndex = spans.length - 1;\n  var currIndex;\n  var leftToken;\n  var rightToken;\n\n  while ( minIndex <= maxIndex ) {\n    currIndex = ( minIndex + maxIndex ) / 2 | 0; // eslint-disable-line no-bitwise\n    leftToken = spans[ currIndex ][ 0 ];\n    rightToken = spans[ currIndex ][ 1 ];\n\n    if ( token > rightToken ) {\n      minIndex = currIndex + 1;\n    } else if ( token < leftToken ) {\n      maxIndex = currIndex - 1;\n    } else return currIndex;\n  }\n\n  return null;\n}; // search()\n\nmodule.exports = search;\n","//     wink-nlp\n//\n//     Copyright (C) GRAYPE Systems Private Limited\n//\n//     This file is part of âwink-nlpâ.\n//\n//     Permission is hereby granted, free of charge, to any\n//     person obtaining a copy of this software and\n//     associated documentation files (the \"Software\"), to\n//     deal in the Software without restriction, including\n//     without limitation the rights to use, copy, modify,\n//     merge, publish, distribute, sublicense, and/or sell\n//     copies of the Software, and to permit persons to\n//     whom the Software is furnished to do so, subject to\n//     the following conditions:\n//\n//     The above copyright notice and this permission notice\n//     shall be included in all copies or substantial\n//     portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\n//     ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\n//     TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n//     PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//     DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF\n//     CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n//     CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\n\nvar search = require( '../search.js' );\n\n// ## getParentItem\n/**\n * Obtains the parent of the required item from a parent collection of spans.\n * @param  {number}   currItemIndex    Index of the item whose parent is needed.\n * @param  {array[]}  parentCollection Parent collection of spans.\n * @param  {function} parentItemFn     Required to instantiate the found parent item.\n * @return {object}                    Object containing the applicable chainable-methods\n *                                     of parent item, if found; otherwise `undefined`.\n * @private\n */\nvar getParentItem = function ( currItemIndex, parentCollection, parentItemFn ) {\n  var k = search( currItemIndex, parentCollection );\n  if ( k === null ) return undefined;\n  return parentItemFn( k );\n}; // getParentItem()\n\nmodule.exports = getParentItem;\n","//     wink-nlp\n//\n//     Copyright (C) GRAYPE Systems Private Limited\n//\n//     This file is part of âwink-nlpâ.\n//\n//     Permission is hereby granted, free of charge, to any\n//     person obtaining a copy of this software and\n//     associated documentation files (the \"Software\"), to\n//     deal in the Software without restriction, including\n//     without limitation the rights to use, copy, modify,\n//     merge, publish, distribute, sublicense, and/or sell\n//     copies of the Software, and to permit persons to\n//     whom the Software is furnished to do so, subject to\n//     the following conditions:\n//\n//     The above copyright notice and this permission notice\n//     shall be included in all copies or substantial\n//     portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\n//     ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\n//     TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n//     PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//     DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF\n//     CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n//     CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\n\n// ## colGetItemAt\n/**\n * Obtains an item at the specified index from a collection.\n * @param  {number}   k      Relative index of the required item.\n * @param  {number}   start  The start index of collection.\n * @param  {number}   end    The end index of the collection.\n * @param  {function} itemFn Item function to create chainable-methods of the item.\n * @return {object}          Object containing the applicable chainable-methods\n *                           for the item found at `k`; otherwise `undefined`.\n * @private\n */\nvar colGetItemAt = function ( k, start, end, itemFn ) {\n  // To handle relative indexing, compute actual `k` by adding `start`.\n  var ak = k + start;\n  return ( ( ak < start || ak > end ) ? undefined : itemFn( ak ) );\n}; // colGetItemAt()\n\nmodule.exports = colGetItemAt;\n","//     wink-nlp\n//\n//     Copyright (C) GRAYPE Systems Private Limited\n//\n//     This file is part of âwink-nlpâ.\n//\n//     Permission is hereby granted, free of charge, to any\n//     person obtaining a copy of this software and\n//     associated documentation files (the \"Software\"), to\n//     deal in the Software without restriction, including\n//     without limitation the rights to use, copy, modify,\n//     merge, publish, distribute, sublicense, and/or sell\n//     copies of the Software, and to permit persons to\n//     whom the Software is furnished to do so, subject to\n//     the following conditions:\n//\n//     The above copyright notice and this permission notice\n//     shall be included in all copies or substantial\n//     portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\n//     ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\n//     TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n//     PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//     DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF\n//     CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n//     CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\n\n// ## selGetItemAt\n/**\n * Obtains an item at the specified index from a collection.\n * @param  {number}   k         Relative index of the required item.\n * @param  {number[]} selection Array containing indexes to the selected items.\n * @param  {function} itemFn    Item function to create chainable-methods of the item.\n * @return {object}             Object containing the applicable chainable-methods\n *                              for the item found at `k`; otherwise `undefined`.\n * @private\n */\nvar selGetItemAt = function ( k, selection, itemFn ) {\n  return ( ( k < 0 || k >= selection.length ) ? undefined : itemFn( selection[ k ] ) );\n}; // selGetItemAt()\n\nmodule.exports = selGetItemAt;\n","//     wink-nlp\n//\n//     Copyright (C) GRAYPE Systems Private Limited\n//\n//     This file is part of âwink-nlpâ.\n//\n//     Permission is hereby granted, free of charge, to any\n//     person obtaining a copy of this software and\n//     associated documentation files (the \"Software\"), to\n//     deal in the Software without restriction, including\n//     without limitation the rights to use, copy, modify,\n//     merge, publish, distribute, sublicense, and/or sell\n//     copies of the Software, and to permit persons to\n//     whom the Software is furnished to do so, subject to\n//     the following conditions:\n//\n//     The above copyright notice and this permission notice\n//     shall be included in all copies or substantial\n//     portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\n//     ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\n//     TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n//     PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//     DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF\n//     CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n//     CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\n\n// ## colEach\n/**\n * Iterator for collections.\n * @param  {function} f      Call back function that is called on each item.\n * @param  {number}   start  The start index in the collection.\n * @param  {number}   end    The end index.\n * @param  {function} itemFn Item function to create chainable-methods of the item.\n * @return {void}            Nothing!\n * @private\n */\nvar colEach = function ( f, start, end, itemFn ) {\n  for ( let k = start; k <= end; k += 1 ) {\n    // Use relative indexing by adding `start` from `k`.\n    f( itemFn( k ), ( k - start ) );\n  }\n}; // colEach()\n\nmodule.exports = colEach;\n","//     wink-nlp\n//\n//     Copyright (C) GRAYPE Systems Private Limited\n//\n//     This file is part of âwink-nlpâ.\n//\n//     Permission is hereby granted, free of charge, to any\n//     person obtaining a copy of this software and\n//     associated documentation files (the \"Software\"), to\n//     deal in the Software without restriction, including\n//     without limitation the rights to use, copy, modify,\n//     merge, publish, distribute, sublicense, and/or sell\n//     copies of the Software, and to permit persons to\n//     whom the Software is furnished to do so, subject to\n//     the following conditions:\n//\n//     The above copyright notice and this permission notice\n//     shall be included in all copies or substantial\n//     portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\n//     ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\n//     TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n//     PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//     DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF\n//     CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n//     CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\n\n// ## selEach\n/**\n * Iterator for selection.\n * @param  {function} f         Call back function that is called on each item.\n * @param  {number[]} selection Array containing indexes to the selected items.\n * @param  {function} itemFn    Item function to create chainable-methods of the item.\n * @return {void}               Nothing!\n * @private\n */\nvar selEach = function ( f, selection, itemFn ) {\n  for ( let k = 0; k < selection.length; k += 1 ) {\n    f( itemFn( selection[ k ] ), k );\n  }\n}; // selEach()\n\nmodule.exports = selEach;\n","//     wink-nlp\n//\n//     Copyright (C) GRAYPE Systems Private Limited\n//\n//     This file is part of âwink-nlpâ.\n//\n//     Permission is hereby granted, free of charge, to any\n//     person obtaining a copy of this software and\n//     associated documentation files (the \"Software\"), to\n//     deal in the Software without restriction, including\n//     without limitation the rights to use, copy, modify,\n//     merge, publish, distribute, sublicense, and/or sell\n//     copies of the Software, and to permit persons to\n//     whom the Software is furnished to do so, subject to\n//     the following conditions:\n//\n//     The above copyright notice and this permission notice\n//     shall be included in all copies or substantial\n//     portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\n//     ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\n//     TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n//     PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//     DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF\n//     CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n//     CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\n\n// ## colFilter\n/**\n * Filter for collections.\n * @param  {function} f             Predicate function to test each item of\n *                                  the array. Return true to select the item,\n *                                  false to reject or exclude.\n * @param  {number}   start         The start index.\n * @param  {number}   end           The end index.\n * @param  {function} itemFn        Item function to create chainable-methods of the item.\n * @param  {function} colSelectedFn The function to create chainable-methods for\n *                                  the collection of selection, which are returned.\n * @return {object}                 Object containing the applicable chainable-methods.\n */\nvar colFilter = function ( f, start, end, itemFn, colSelectedFn ) {\n  var filtered = [];\n  for ( let k = start; k <= end; k += 1 ) {\n    // Use relative indexing by adding `start` from `k`.\n    if ( f( itemFn( k ), ( k - start ) ) ) filtered.push( k );\n  }\n  return colSelectedFn( filtered );\n}; // colFilter()\n\nmodule.exports = colFilter;\n","//     wink-nlp\n//\n//     Copyright (C) GRAYPE Systems Private Limited\n//\n//     This file is part of âwink-nlpâ.\n//\n//     Permission is hereby granted, free of charge, to any\n//     person obtaining a copy of this software and\n//     associated documentation files (the \"Software\"), to\n//     deal in the Software without restriction, including\n//     without limitation the rights to use, copy, modify,\n//     merge, publish, distribute, sublicense, and/or sell\n//     copies of the Software, and to permit persons to\n//     whom the Software is furnished to do so, subject to\n//     the following conditions:\n//\n//     The above copyright notice and this permission notice\n//     shall be included in all copies or substantial\n//     portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\n//     ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\n//     TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n//     PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//     DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF\n//     CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n//     CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\n// ## selFilter\n/**\n * Filter for selection.\n * @param  {function} f             Predicate function to test each item of\n *                                  the array. Return true to select the item,\n *                                  false to reject or exclude.\n * @param  {number[]} selection     Array containing indexes to the selected items.\n * @param  {function} itemFn        Item function to create chainable-methods of the item.\n * @param  {function} colSelectedFn The function to create chainable-methods for\n *                                  the collection of selection, which are returned.\n * @return {object}                 Object containing the applicable chainable-methods.\n * @private\n */\nvar selFilter = function ( f, selection, itemFn, colSelectedFn ) {\n  var filtered = [];\n  for ( let k = 0; k < selection.length; k += 1 ) {\n    if ( f( itemFn( selection[ k ] ), k ) ) filtered.push( selection[ k ] );\n  }\n  return colSelectedFn( filtered );\n}; // selFilter()\n\nmodule.exports = selFilter;\n","/**\n * Stable sort function for frequency table i.e. `[ [ term, frequency ] ... ]`.\n * It first sorts on the frequency and then an alpha-numeric sort on term.\n *\n * @param  {array}  a first term-frequency pair element sent by sort.\n * @param  {array}  b second term-frequency pair element sent by sort.\n * @return {number}   number: -1 or 0 or +1.\n */\nmodule.exports = ( a, b ) => {\n  if ( b[ 1 ] > a[ 1 ] ) {\n    return 1;\n  } else if ( b[ 1 ] < a[ 1 ] ) {\n           return -1;\n         } else if ( a[ 0 ] > b[ 0 ] ) return 1;\n  return -1;\n};\n","//     wink-nlp\n//\n//     Copyright (C) GRAYPE Systems Private Limited\n//\n//     This file is part of âwink-nlpâ.\n//\n//     Permission is hereby granted, free of charge, to any\n//     person obtaining a copy of this software and\n//     associated documentation files (the \"Software\"), to\n//     deal in the Software without restriction, including\n//     without limitation the rights to use, copy, modify,\n//     merge, publish, distribute, sublicense, and/or sell\n//     copies of the Software, and to permit persons to\n//     whom the Software is furnished to do so, subject to\n//     the following conditions:\n//\n//     The above copyright notice and this permission notice\n//     shall be included in all copies or substantial\n//     portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\n//     ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\n//     TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n//     PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//     DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF\n//     CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n//     CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\n\nvar sort4FT = require( './sort4FT.js' );\nvar constants = require( './constants.js' );\nvar caseMap = [ 'other', 'lowerCase', 'upperCase', 'titleCase' ];\n\n// Size of a single token.\nvar tkSize = constants.tkSize;\n// Bits reserved for `lemma`.\nvar bits4lemma = constants.bits4lemma;\n// Mask for extracting pos\nvar posMask = constants.posMask;\n// Mask for preceding spaces.\nvar psMask = constants.psMask;\n// Mask for lemma in case of contraction.\nvar lemmaMask = constants.lemmaMask;\n\nvar its = Object.create( null );\n\nits.case = function ( index, tokens, cache ) {\n  return caseMap[ cache.property( tokens[ index * tkSize ], 'lutCase' ) ];\n}; // case()\n\nits.uniqueId = function ( index, tokens ) {\n  return tokens[ index * tkSize ];\n}; // uniqueId()\n\nits.negationFlag = function ( index, tokens ) {\n  return tokens[ ( index * tkSize ) + 3 ] >= constants.negationFlag;\n}; // negationFlag()\n\nits.normal = function ( index, tokens, cache ) {\n  return (\n    ( tokens[ ( index * tkSize ) + 1 ] > 65535 ) ?\n      cache.value( cache.nox( tokens[ ( index * tkSize ) + 1 ] ) ) :\n      cache.value( cache.normal( tokens[ index * tkSize ] ) )\n  );\n}; // normal()\n\nits.contractionFlag = function ( index, tokens ) {\n  return ( tokens[ ( index * tkSize ) + 1 ] > 65535 );\n}; // contractionFlag()\n\nits.pos = function ( index, tokens, cache ) {\n  return cache.valueOf( 'pos', ( tokens[ ( index * tkSize ) + 2 ] & posMask ) >>> bits4lemma );  // eslint-disable-line no-bitwise\n}; // pos()\n\nits.precedingSpaces = function ( index, tokens ) {\n  var token = tokens[ ( index * tkSize ) + 1 ];\n  var count = token & psMask;  // eslint-disable-line no-bitwise\n  return ( ''.padEnd( count ) );\n}; // precedingSpaces()\n\nits.prefix = function ( index, tokens, cache ) {\n  return cache.property( tokens[ index * tkSize ], 'prefix' );\n}; // prefix()\n\nits.shape = function ( index, tokens, cache ) {\n  return cache.property( tokens[ index * tkSize ], 'shape' );\n}; // shape()\n\nits.stopWordFlag = function ( index, tokens, cache ) {\n  // Apply check on normalized token and not the original value, because\n  // stop words are always defined in the lowercase.\n  var normal = ( tokens[ ( index * tkSize ) + 1 ] > 65535 ) ?\n    cache.nox( tokens[ ( index * tkSize ) + 1 ] ) :\n    cache.normal( tokens[ index * tkSize ] );\n  return ( cache.property( normal, 'isStopWord' ) === 1 );\n}; // stopWordFlag()\n\nits.abbrevFlag = function ( index, tokens, cache ) {\n  return ( cache.property( tokens[ index * tkSize ], 'isAbbrev' ) === 1 );\n}; // abbrevFlag()\n\nits.suffix = function ( index, tokens, cache ) {\n  return cache.property( tokens[ index * tkSize ], 'suffix' );\n}; // suffix()\n\nits.type = function ( index, tokens, cache ) {\n  return cache.property( tokens[ index * tkSize ], 'tokenType' );\n}; // type()\n\nits.value = function ( index, tokens, cache ) {\n  return cache.value( tokens[ index * tkSize ] );\n}; // value()\n\nits.stem = function ( index, tokens, cache, addons ) {\n  return addons.stem( cache.value( tokens[ index * tkSize ] ) );\n}; // stem()\n\nits.lemma = function ( index, tokens, cache, addons ) {\n  // If it is a contraction that lemma is already available in the token's data structure.\n  if ( tokens[ ( index * tkSize ) + 1 ] > 65535 ) {\n    return cache.value( tokens[ ( index * tkSize ) + 2 ] & lemmaMask ); // eslint-disable-line no-bitwise\n  }\n  // Handle mapped spelling if any.\n  const mappedIdx = cache.mappedSpelling( tokens[ index * tkSize ] );\n  // If the token has single lemma then no further processing is needed.\n  if ( cache.property( mappedIdx, 'isSLemma' ) === 1 ) {\n    return cache.value( cache.property( mappedIdx, 'lemma' ) );\n  }\n  // Exhausted all possibilities to avoid processing! Now lemmatize!\n  const pos = its.pos( index, tokens, cache );\n  const value = cache.value( cache.normal( tokens[ index * tkSize ] ) );\n  return addons.lemmatize( value, pos, cache );\n}; // lemmas()\n\nits.vector = function ( ) {\n  return ( new Array( 100 ).fill( 0 ) );\n}; // vector()\n\nits.detail = function ( ) {\n  return true;\n}; // detail()\n\nits.markedUpText = function ( index, tokens, cache ) {\n  // This is a special case because `tokens.out()` allows `as.markedUpText`.\n  // Therefore simply return the value and rest is handled by `colTokensOut` with\n  // `as.markedUpText()`` or `as.text()` as one of the arugments.\n  return its.value( index, tokens, cache );\n}; // markedUpText()\n\nits.span = function ( spanItem ) {\n  return spanItem.slice( 0, 2 );\n}; // span()\n\nits.sentiment = function ( spanItem ) {\n  return spanItem[ 3 ];\n}; // span()\n\nits.readabilityStats = function ( rdd, addons ) {\n  return addons.readabilityStats( rdd, its );\n}; // readabilityStats()\n\n/* ------ utilities ------ */\n\nits.terms = function ( tf, idf, terms ) {\n  return terms;\n}; // terms()\n\nits.docTermMatrix = function ( tf, idf, terms ) {\n  const dtm = new Array( tf.length );\n  for ( let id = 0; id < tf.length; id += 1 ) {\n    dtm[ id ] = [];\n    for ( let i = 0; i < terms.length; i += 1 ) {\n      dtm[ id ].push( tf[ id ][ terms[ i ] ] || 0 );\n    }\n  }\n  return dtm;\n}; // getDocTermMatrix()\n\nits.docBOWArray = function ( tf ) {\n  return tf;\n}; // docBOWArray()\n\nits.bow = function ( tf ) {\n  return tf;\n}; // bow()\n\nits.idf = function ( tf, idf ) {\n  var arr = [];\n  for ( const t in idf ) { // eslint-disable-line guard-for-in\n    arr.push( [ t, idf[ t ] ] );\n  }\n  // Sort on frequency followed by the term.\n  return arr.sort( sort4FT );\n}; // idf()\n\nits.tf = function ( tf ) {\n  const arr = [];\n  for ( const t in tf ) {  // eslint-disable-line guard-for-in\n    arr.push( [ t, tf[ t ] ] );\n  }\n  // Sort on frequency followed by the term.\n  return arr.sort( sort4FT );\n}; // tf()\n\nits.modelJSON = function ( tf, idf, terms, docId, sumOfAllDLs ) {\n  return JSON.stringify( {\n      uid: 'WinkNLP-BM25Vectorizer-Model/1.0.0',\n      tf: tf,\n      idf: idf,\n      terms: terms,\n      docId: docId,\n      sumOfAllDLs: sumOfAllDLs\n   } );\n}; // model()\n\nmodule.exports = its;\n","//     wink-nlp\n//\n//     Copyright (C) GRAYPE Systems Private Limited\n//\n//     This file is part of âwink-nlpâ.\n//\n//     Permission is hereby granted, free of charge, to any\n//     person obtaining a copy of this software and\n//     associated documentation files (the \"Software\"), to\n//     deal in the Software without restriction, including\n//     without limitation the rights to use, copy, modify,\n//     merge, publish, distribute, sublicense, and/or sell\n//     copies of the Software, and to permit persons to\n//     whom the Software is furnished to do so, subject to\n//     the following conditions:\n//\n//     The above copyright notice and this permission notice\n//     shall be included in all copies or substantial\n//     portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\n//     ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\n//     TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n//     PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//     DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF\n//     CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n//     CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\n\nvar locate = require( './locate.js' );\n\n// ## containedMarkings\n/**\n *\n * Returns the range of contained markings, if any within the span defined by the\n * `start` and the `end`.\n *\n * @param {array} markings from where contained ones will be returned, if any.\n * @param {number} start The start of the span.\n * @param {number} end The end of the span.\n * @return {array} range of contained markings, `null` if none are contained.\n * @private\n*/\nvar containedMarkings = function ( markings, start, end ) {\n  if ( markings === undefined || start === undefined || end === undefined ) {\n    return null;\n  }\n\n  // Left & right indexes into the `markings` array.\n  var left = locate( start, markings );\n  var right = locate( end, markings );\n  var maxIndex = markings.length - 1;\n  var kl, kr;\n\n  // Return just the text if span is completely on the left or right side of the\n  // `markings`.\n  if ( ( left < 0 && right < 0 ) || ( left > maxIndex && right > maxIndex ) ) {\n    return null;\n  }\n\n  // The `left` must move to the next integer value to get the first index.\n  // To avoid `-0`!\n  kl = ( left < 0 ) ? 0 : Math.ceil( left );\n\n  // If both `left` and `right` are fractions & equal means nothing is contained.\n  // Return just the text, no markups!\n  if ( ( left === right ) && ( kl !== left ) ) {\n    return null;\n  }\n\n  kr = Math.floor( right );\n  // Mark those markings, which are completely contained in the closed interval\n  // `[ start, end ]` i.e. no partially contained markings.\n  if ( markings[ kl ][ 0 ] < start ) kl += 1;\n  if ( markings[ kr ][ 1 ] > end )   kr -= 1;\n  if ( kl > kr ) {\n    return null;\n  }\n\n  var range = Object.create( null );\n  range.left = kl;\n  range.right = kr;\n\n  return range;\n}; // containedMarkings\n\nmodule.exports = containedMarkings;\n","//     wink-nlp\n//\n//     Copyright (C) GRAYPE Systems Private Limited\n//\n//     This file is part of âwink-nlpâ.\n//\n//     Permission is hereby granted, free of charge, to any\n//     person obtaining a copy of this software and\n//     associated documentation files (the \"Software\"), to\n//     deal in the Software without restriction, including\n//     without limitation the rights to use, copy, modify,\n//     merge, publish, distribute, sublicense, and/or sell\n//     copies of the Software, and to permit persons to\n//     whom the Software is furnished to do so, subject to\n//     the following conditions:\n//\n//     The above copyright notice and this permission notice\n//     shall be included in all copies or substantial\n//     portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\n//     ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\n//     TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n//     PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//     DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF\n//     CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n//     CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\n\nvar sort4FT = require( './sort4FT.js' );\nvar containedMarkings = require( './contained-markings.js' );\nvar as = Object.create( null );\n\n// ### array\n/**\n * It is a simple passthru function i.e. input is returned as-is.\n *\n * @param  {string[]} tokens The input tokens.\n * @return {string[]}        the input `tokens` as-is.\n * @private\n */\nas.array = function ( tokens ) {\n  // Return the input tokens as-is.\n  return tokens;\n}; // array()\n\n// ### set\n/**\n * Constructs set from the `tokens`.\n *\n * @param  {string[]} tokens The input tokens.\n * @return {set}      the set of `tokens`.\n * @private\n */\nas.set = function ( tokens ) {\n  // Create set & return.\n  return new Set( tokens );\n}; // set()\n\n// ### bow\n/**\n *\n * Constructs the bag of words from the `tokens`.\n *\n * @param  {string[]} tokens The input tokens.\n * @return {objects}         the bag of words object containing `token/frequency`\n *                           `key/value` pairs.\n * @private\n */\nas.bow = function ( tokens ) {\n  // Bag of words.\n  var bow = Object.create( null );\n  var t;\n  for ( let i = 0; i < tokens.length; i += 1 ) {\n    t = tokens[ i ];\n    bow[ t ] = 1 + ( bow[ t ] || 0 );\n  }\n\n  return bow;\n}; // bow()\n\n// ### freqTable\n/**\n * Constructs the frequency table of `tokens`, which sorted in a descending\n * order of token's frequency.\n *\n * @param  {string[]} tokens The input tokens.\n * @return {array[]}         array of `[ token, frequency ]` pairs.\n * @private\n */\nas.freqTable = function ( tokens ) {\n  // NOTE: build FT based on argument type i.e. array or object (its.detail)\n  var bow = as.bow( tokens );\n  var keys = Object.keys( bow );\n  var length = keys.length;\n  var table = new Array( length );\n\n  for ( var i = 0; i < length; i += 1 ) {\n    table[ i ] = [ keys[ i ], bow[ keys[ i ] ] ];\n  }\n\n  return table.sort( sort4FT );\n}; // freqTable()\n\n// ### bigrams\n/**\n * Generates bigrams of the input tokens.\n *\n * @param  {string[]} tokens The input tokens.\n * @return {array[]}         array of `[ token`<sub>i</sub>`, token`<sub>i+1</sub> `  ]`\n *                           bigrams.\n * @private\n */\nas.bigrams = function ( tokens ) {\n  // Bigrams will be stored here.\n  var bgs = [];\n  // Helper variables.\n  var i, imax;\n  // Create bigrams.\n  for ( i = 0, imax = tokens.length - 1; i < imax; i += 1 ) {\n    bgs.push( [ tokens[ i ], tokens[ i + 1 ] ] );\n  }\n  return bgs;\n}; // bigrams()\n\nas.unique = function ( tokens ) {\n  return Array.from( new Set( tokens ) );\n}; // unique()\n\n// ### text\n/**\n *\n * Generates the text by joining the contents of `twps` array (tokens with\n * preceding spaces).\n *\n * @param  {array} twps Array containing tokens with preceding spaces.\n * @return {string}     the text.\n * @private\n*/\nas.text = function ( twps ) {\n  // Join on empty-space as preceding spaces are part of `twps`!\n  return twps.join( '' ).trim();\n}; // text()\n\n// ### markedUpText\n/**\n *\n * Generates the marked up text of the span specified by the `start` and `end` using\n * `twps` and `markings`.\n *\n * @param  {array}  twps     Array containing tokens with preceding spaces.\n * @param  {array}  markings Array containing span of markings & marking specs.\n * @param  {number} start    The start index of the tokens.\n * @param  {number} end      The end index of the tokens.\n * @return {string}          the markedup text.\n * @private\n*/\nas.markedUpText = function ( twps, markings, start, end ) {\n  // Offset to be added while computing `first` and `last` indexes of `twps`.\n  var offset = start * 2;\n  // Compute the `range` of `markings` to consider on the basis `start` and `end`.\n  var range = containedMarkings( markings, start, end );\n  if ( range === null ) {\n    // Means no valid range, return the text as is.\n    return twps.join( '' ).trim();\n  }\n  // For every marking prefix the `first` one with `beginMarker` and suffix\n  // the `last` one with `endMarker`.\n  for ( let i = range.left; i <= range.right; i += 1 ) {\n    const first = ( ( markings[ i ][ 0 ] * 2 ) - offset ) + 1;\n    const last  = ( ( markings[ i ][ 1 ] * 2 ) - offset ) + 1;\n    const beginMarker = ( markings[ i ][ 2 ]  === undefined ) ? '<mark>' : markings[ i ][ 2 ];\n    const endMarker = ( markings[ i ][ 3 ]  === undefined ) ? '</mark>' : markings[ i ][ 3 ];\n\n    twps[ first ] = beginMarker + twps[ first ];\n    twps[ last ] += endMarker;\n  }\n\n  // Join all the elements and return the `markedUpText`.\n  return twps.join( '' ).trim();\n}; // markedUpText()\n\nmodule.exports = as;\n","//     wink-nlp\n//\n//     Copyright (C) GRAYPE Systems Private Limited\n//\n//     This file is part of âwink-nlpâ.\n//\n//     Permission is hereby granted, free of charge, to any\n//     person obtaining a copy of this software and\n//     associated documentation files (the \"Software\"), to\n//     deal in the Software without restriction, including\n//     without limitation the rights to use, copy, modify,\n//     merge, publish, distribute, sublicense, and/or sell\n//     copies of the Software, and to permit persons to\n//     whom the Software is furnished to do so, subject to\n//     the following conditions:\n//\n//     The above copyright notice and this permission notice\n//     shall be included in all copies or substantial\n//     portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\n//     ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\n//     TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n//     PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//     DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF\n//     CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n//     CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\n\nvar its = require( './its.js' );\nvar as = require( './as.js' );\nvar allowed = Object.create( null );\n\nallowed.its4token = new Set( [\n  its.case,\n  its.uniqueId,\n  its.negationFlag,\n  its.normal,\n  its.contractionFlag,\n  its.pos,\n  its.precedingSpaces,\n  its.prefix,\n  its.shape,\n  its.stopWordFlag,\n  its.abbrevFlag,\n  its.suffix,\n  its.type,\n  its.value,\n  its.stem,\n  its.lemma\n] );\n\nallowed.its4tokens = allowed.its4token;\n\nallowed.its4selTokens = allowed.its4token;\n\nallowed.as4tokens = new Set( [\n  as.array,\n  as.set,\n  as.text,\n  as.bow,\n  as.freqTable,\n  as.bigrams,\n  as.unique,\n  as.markedUpText\n] );\n\n// NOTE: it should exclude `as.markedUpText`, whenever this is included in the above.\nallowed.as4selTokens = new Set( [\n  as.array,\n  as.set,\n  as.text,\n  as.bow,\n  as.freqTable,\n  as.bigrams,\n  as.unique\n] );\n\nallowed.its4entity = new Set( [\n  its.value,\n  its.normal,\n  its.type,\n  its.detail,\n  its.span\n] );\n\nallowed.as4entities = new Set( [\n  as.array,\n  as.set,\n  as.bow,\n  as.freqTable,\n  as.unique\n] );\n\nallowed.as4selEntities = allowed.as4entities;\n\nallowed.its4sentence = new Set( [\n  its.value,\n  its.normal,\n  its.span,\n  its.markedUpText,\n  its.negationFlag,\n  its.sentiment,\n  its.stem\n] );\n\nallowed.its4document = new Set( [\n  its.value,\n  its.normal,\n  its.span,\n  its.markedUpText,\n  its.negationFlag,\n  its.sentiment,\n  its.stem,\n  its.readabilityStats\n] );\n\n\nmodule.exports = allowed;\n","//     wink-nlp\n//\n//     Copyright (C) GRAYPE Systems Private Limited\n//\n//     This file is part of âwink-nlpâ.\n//\n//     Permission is hereby granted, free of charge, to any\n//     person obtaining a copy of this software and\n//     associated documentation files (the \"Software\"), to\n//     deal in the Software without restriction, including\n//     without limitation the rights to use, copy, modify,\n//     merge, publish, distribute, sublicense, and/or sell\n//     copies of the Software, and to permit persons to\n//     whom the Software is furnished to do so, subject to\n//     the following conditions:\n//\n//     The above copyright notice and this permission notice\n//     shall be included in all copies or substantial\n//     portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\n//     ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\n//     TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n//     PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//     DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF\n//     CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n//     CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\n\nvar its = require( '../its.js' );\nvar allowed = require( '../allowed.js' );\n\n// ## itmTokenOut\n/**\n * Out method for a token. Note: the out always returns a Javascript\n * data type or data structure.\n * @param  {number}   index       The index of desired token.\n * @param  {Object}   rdd         Raw Document Data-structure.\n * @param  {function} itsf        Desired `its` mapper.\n * @param  {object}   addons      The model's addons.\n * @return {*}                    Mapped value.\n * @private\n */\nvar itmTokenOut = function ( index, rdd, itsf, addons ) {\n  // Vectors require completely different handling.\n  if ( itsf === its.vector ) {\n    return its.vector( index, rdd, addons );\n  }\n  // Not a vector request, map using `itsf`.\n  var f = ( allowed.its4token.has( itsf ) ) ? itsf : its.value;\n  return f( index, rdd.tokens, rdd.cache, addons );\n}; // itmTokenOut()\n\nmodule.exports = itmTokenOut;\n","//     wink-nlp\n//\n//     Copyright (C) GRAYPE Systems Private Limited\n//\n//     This file is part of âwink-nlpâ.\n//\n//     Permission is hereby granted, free of charge, to any\n//     person obtaining a copy of this software and\n//     associated documentation files (the \"Software\"), to\n//     deal in the Software without restriction, including\n//     without limitation the rights to use, copy, modify,\n//     merge, publish, distribute, sublicense, and/or sell\n//     copies of the Software, and to permit persons to\n//     whom the Software is furnished to do so, subject to\n//     the following conditions:\n//\n//     The above copyright notice and this permission notice\n//     shall be included in all copies or substantial\n//     portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\n//     ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\n//     TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n//     PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//     DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF\n//     CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n//     CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\n\nvar its = require( '../its.js' );\nvar as = require( '../as.js' );\nvar allowed = require( '../allowed.js' );\nvar constants = require( '../constants.js' );\n// Size of a single token.\nvar tkSize = constants.tkSize;\n// Mask for preceding spaces.\nvar psMask = constants.psMask;\n\n// ## colTokensOut\n/**\n * Out for collection of tokens. Note: the out always returns a Javascript\n * data type or data structure.\n * @param  {number}   start       The start index of the collection.\n * @param  {number}   end         The end index of the collection.\n * @param  {object}   rdd         Raw Document Data-structure.\n * @param  {function} itsf        Desired `its` mapper.\n * @param  {function} asf         Desired `as` reducer.\n * @param  {object}   addons      The model's addons.\n * @return {*}                    Map-reduced collection of tokens.\n * @private\n */\nvar colTokensOut = function ( start, end, rdd, itsf, asf, addons ) {\n  // Vectors require completely different handling.\n  if ( itsf === its.vector ) {\n    return its.vector( start, end, rdd.tokens, addons );\n  }\n\n  // Not a vector request, perform map-reduce.\n  var mappedTkns = [];\n  var itsfn = ( itsf && allowed.its4tokens.has( itsf ) ) ? itsf : its.value;\n  var asfn = ( asf && allowed.as4tokens.has( asf ) ) ? asf : as.array;\n  // Note, `as.text/markedUpText` needs special attention to include preceeding spaces.\n  if ( asfn === as.text || asfn === as.markedUpText ) {\n    for ( let i = start; i <= end; i += 1 ) {\n      mappedTkns.push( ''.padEnd( rdd.tokens[ ( i * tkSize ) + 1 ] & psMask ), itsf( i, rdd.tokens, rdd.cache, addons ) );  // eslint-disable-line no-bitwise\n    }\n  } else {\n    for ( let i = start; i <= end; i += 1 ) {\n      mappedTkns.push( itsfn( i, rdd.tokens, rdd.cache, addons ) );\n    }\n  }\n\n  return asfn( mappedTkns, rdd.markings, start, end );\n}; // colTokensOut()\n\nmodule.exports = colTokensOut;\n","//     wink-nlp\n//\n//     Copyright (C) GRAYPE Systems Private Limited\n//\n//     This file is part of âwink-nlpâ.\n//\n//     Permission is hereby granted, free of charge, to any\n//     person obtaining a copy of this software and\n//     associated documentation files (the \"Software\"), to\n//     deal in the Software without restriction, including\n//     without limitation the rights to use, copy, modify,\n//     merge, publish, distribute, sublicense, and/or sell\n//     copies of the Software, and to permit persons to\n//     whom the Software is furnished to do so, subject to\n//     the following conditions:\n//\n//     The above copyright notice and this permission notice\n//     shall be included in all copies or substantial\n//     portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\n//     ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\n//     TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n//     PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//     DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF\n//     CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n//     CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\n\nvar its = require( '../its.js' );\nvar as = require( '../as.js' );\nvar allowed = require( '../allowed.js' );\nvar constants = require( '../constants.js' );\n// Size of a single token.\nvar tkSize = constants.tkSize;\n// Mask for preceding spaces.\nvar psMask = constants.psMask;\n\n// ## selTokensOut\n/**\n * Out for selection of tokens. Note: the out always returns a Javascript\n * data type or data structure.\n * @param  {number[]} selTokens   Array containing indexes to the selected tokens.\n * @param  {obejct}   rdd         Raw document data structure.\n * @param  {function} itsf        Desired `its` mapper.\n * @param  {function} asf         Desired `as` reducer.\n * @param  {object}   addons      The addons from the model.\n * @return {*}                    Reduced value.\n * @private\n */\nvar selTokensOut = function ( selTokens, rdd, itsf, asf, addons ) {\n  // Vectors require completely different handling.\n  if ( itsf === its.vector ) {\n    return its.vector( selTokens, rdd.tokens, addons );\n  }\n\n  // Not a vector request, perform map-reduce.\n  var mappedTkns = [];\n  var itsfn = ( itsf && allowed.its4selTokens.has( itsf ) ) ? itsf : its.value;\n  var asfn = ( asf && allowed.as4selTokens.has( asf ) ) ? asf : as.array;\n\n  // Note, `as.text` needs special attention to include preceeding spaces.\n  // No `markedUpText` allowed here.\n  if ( asfn === as.text ) {\n    for ( let i = 0; i < selTokens.length; i += 1 ) {\n      mappedTkns.push( ''.padEnd( rdd.tokens[ ( selTokens[ i ] * tkSize ) + 1 ] & psMask ), itsf( selTokens[ i ], rdd.tokens, rdd.cache, addons ) );  // eslint-disable-line no-bitwise\n    }\n  } else {\n    for ( let i = 0; i < selTokens.length; i += 1 ) {\n      mappedTkns.push( itsfn( selTokens[ i ], rdd.tokens, rdd.cache, addons ) );\n    }\n  }\n\n  return asfn( mappedTkns );\n}; // selTokensOut()\n\nmodule.exports = selTokensOut;\n","//     wink-nlp\n//\n//     Copyright (C) GRAYPE Systems Private Limited\n//\n//     This file is part of âwink-nlpâ.\n//\n//     Permission is hereby granted, free of charge, to any\n//     person obtaining a copy of this software and\n//     associated documentation files (the \"Software\"), to\n//     deal in the Software without restriction, including\n//     without limitation the rights to use, copy, modify,\n//     merge, publish, distribute, sublicense, and/or sell\n//     copies of the Software, and to permit persons to\n//     whom the Software is furnished to do so, subject to\n//     the following conditions:\n//\n//     The above copyright notice and this permission notice\n//     shall be included in all copies or substantial\n//     portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\n//     ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\n//     TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n//     PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//     DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF\n//     CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n//     CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\n\nvar its = require( '../its.js' );\nvar as = require( '../as.js' );\nvar allowed = require( '../allowed.js' );\nvar colTokensOut = require( './col-tokens-out.js' );\n\n// ## itmEntityOut\n/**\n * Out method for an entity. Note: the out always returns a Javascript\n * data type or data structure. There is no word vector support for entity.\n * @param  {number}   index       The index of desired entity.\n * @param  {Object}   entities    The entities from the `rdd`; could be custom.\n * @param  {Object}   rdd         Raw Document Data-structure.\n * @param  {function} itsf        Desired `its` mapper.\n * @return {*}                    Mapped value.\n * @private\n */\nvar itmEntityOut = function ( index, entities, rdd, itsf ) {\n  var entity = entities[ index ];\n  var itsfn = ( itsf && allowed.its4entity.has( itsf ) ) ? itsf : its.value;\n  var detail;\n\n  if ( itsfn === its.detail ) {\n    // In case of `detail`, return an object containing entity's `text` & `type`.\n    detail = Object.create( null );\n    detail.value = colTokensOut( entity[ 0 ], entity[ 1 ], rdd, its.value, as.text );\n    detail.type = entity[ 2 ];\n    return detail;\n  }\n\n  if ( itsfn === its.type ) {\n    // Extract `type` and return directly.\n    return entity[ 2 ];\n  }\n\n  if ( itsfn === its.span ) {\n    // Extract span and return.\n    return its.span( entity );\n  }\n\n  // Balance cases ( i.e. value, normal, and type ) are handled via `colTokensOut()`.\n  return colTokensOut( entity[ 0 ], entity[ 1 ], rdd, itsfn, as.text );\n}; // itmEntityOut()\n\nmodule.exports = itmEntityOut;\n","//     wink-nlp\n//\n//     Copyright (C) GRAYPE Systems Private Limited\n//\n//     This file is part of âwink-nlpâ.\n//\n//     Permission is hereby granted, free of charge, to any\n//     person obtaining a copy of this software and\n//     associated documentation files (the \"Software\"), to\n//     deal in the Software without restriction, including\n//     without limitation the rights to use, copy, modify,\n//     merge, publish, distribute, sublicense, and/or sell\n//     copies of the Software, and to permit persons to\n//     whom the Software is furnished to do so, subject to\n//     the following conditions:\n//\n//     The above copyright notice and this permission notice\n//     shall be included in all copies or substantial\n//     portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\n//     ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\n//     TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n//     PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//     DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF\n//     CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n//     CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\n\nvar its = require( '../its.js' );\nvar as = require( '../as.js' );\nvar allowed = require( '../allowed.js' );\nvar itmEntityOut = require( './itm-entity-out.js' );\n\n// ## colEntitiesOut\n/**\n * Out for collection of entities. Note: the out always returns a Javascript\n * data type or data structure. Word vectors do not apply to entities.\n * @param  {obejct}   entities entities from `rdd`; could be customEntities.\n * @param  {obejct}   rdd      Raw document data structure.\n * @param  {function} itsf     Desired `its` mapper.\n * @param  {function} asf      Desired `as` reducer.\n * @return {*}                 Reduced value.\n * @private\n */\nvar colEntitiesOut = function ( entities, rdd, itsf, asf ) {\n  var ents = [];\n  for ( let i = 0; i < entities.length; i += 1 ) {\n    ents.push( itmEntityOut( i, entities, rdd, itsf ) );\n  }\n  // No application of allowed function if detail or span is needed, fall back to `as.array`.\n  var asfn = ( allowed.as4entities.has( asf ) && itsf !== its.detail && itsf !== its.span ) ? asf : as.array;\n  return asfn( ents );\n}; // colEntitiesOut()\n\nmodule.exports = colEntitiesOut;\n","//     wink-nlp\n//\n//     Copyright (C) GRAYPE Systems Private Limited\n//\n//     This file is part of âwink-nlpâ.\n//\n//     Permission is hereby granted, free of charge, to any\n//     person obtaining a copy of this software and\n//     associated documentation files (the \"Software\"), to\n//     deal in the Software without restriction, including\n//     without limitation the rights to use, copy, modify,\n//     merge, publish, distribute, sublicense, and/or sell\n//     copies of the Software, and to permit persons to\n//     whom the Software is furnished to do so, subject to\n//     the following conditions:\n//\n//     The above copyright notice and this permission notice\n//     shall be included in all copies or substantial\n//     portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\n//     ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\n//     TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n//     PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//     DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF\n//     CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n//     CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\n\nvar its = require( '../its.js' );\nvar as = require( '../as.js' );\nvar allowed = require( '../allowed.js' );\nvar itmEntityOut = require( './itm-entity-out.js' );\n\n// ## selEntitiesOut\n/**\n * Out for selection of entities. Note: the out always returns a Javascript\n * data type or data structure. Word vectors do not apply to entities.\n * @param  {number[]} selEntities Array containing indexes to the selected entities.\n * @param  {obejct}   entities    Entities from `rdd`; could be customEntities.\n * @param  {obejct}   rdd         Raw document data structure.\n * @param  {function} itsf        Desired `its` mapper.\n * @param  {function} asf         Desired `as` reducer.\n * @return {*}                    Reduced value.\n * @private\n */\nvar selEntitiesOut = function ( selEntities, entities, rdd, itsf, asf ) {\n  var ents = [];\n  for ( let i = 0; i < selEntities.length; i += 1 ) {\n    ents.push( itmEntityOut( selEntities[ i ], entities, rdd, itsf ) );\n  }\n  // No application of allowed function if detail or span is needed, fall back to `as.array`.\n  var asfn = ( allowed.as4selEntities.has( asf ) && itsf !== its.detail && itsf !== its.span ) ? asf : as.array;\n  return asfn( ents );\n}; // selEntitiesOut()\n\nmodule.exports = selEntitiesOut;\n","//     wink-nlp\n//\n//     Copyright (C) GRAYPE Systems Private Limited\n//\n//     This file is part of âwink-nlpâ.\n//\n//     Permission is hereby granted, free of charge, to any\n//     person obtaining a copy of this software and\n//     associated documentation files (the \"Software\"), to\n//     deal in the Software without restriction, including\n//     without limitation the rights to use, copy, modify,\n//     merge, publish, distribute, sublicense, and/or sell\n//     copies of the Software, and to permit persons to\n//     whom the Software is furnished to do so, subject to\n//     the following conditions:\n//\n//     The above copyright notice and this permission notice\n//     shall be included in all copies or substantial\n//     portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\n//     ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\n//     TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n//     PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//     DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF\n//     CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n//     CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\n\nvar its = require( '../its.js' );\nvar as = require( '../as.js' );\nvar allowed = require( '../allowed.js' );\nvar colTokensOut = require( './col-tokens-out.js' );\n\n// ## itmSentenceOut\n/**\n * Out method for a sentence. Note: the out always returns a Javascript\n * data type or data structure.\n * @param  {number}   index       The index of desired sentence.\n * @param  {Object}   rdd         Raw Document Data-structure.\n * @param  {function} itsf        Desired `its` mapper.\n * @param  {object}   addons      The model's addons.\n * @return {*}                    Mapped value.\n * @private\n */\nvar itmSentenceOut = function ( index, rdd, itsf, addons ) {\n  var sentence = rdd.sentences[ index ];\n  // Vectors require completely different handling.\n  if ( itsf === its.vector ) {\n    return its.vector( sentence, rdd, addons );\n  }\n\n  var itsfn = ( itsf && allowed.its4sentence.has( itsf ) ) ? itsf : its.value;\n\n  if ( itsfn === its.span || itsfn === its.sentiment ) {\n    return itsfn( sentence );\n  }\n\n  // Handle `its.negationFlag` seprately here.\n  if ( itsfn === its.negationFlag ) {\n    return ( sentence[ 2 ] === 1 );\n  }\n\n  // Setup the correct `as.fn` becuase the current markedup text would have\n  // returned the `value`. Refer to `its.markedUpText`.\n  var asfn = ( itsfn === its.markedUpText ) ? as.markedUpText : as.text;\n\n  return colTokensOut( sentence[ 0 ], sentence[ 1 ], rdd, itsfn, asfn, addons );\n}; // itmSentenceOut()\n\nmodule.exports = itmSentenceOut;\n","//     wink-nlp\n//\n//     Copyright (C) GRAYPE Systems Private Limited\n//\n//     This file is part of âwink-nlpâ.\n//\n//     Permission is hereby granted, free of charge, to any\n//     person obtaining a copy of this software and\n//     associated documentation files (the \"Software\"), to\n//     deal in the Software without restriction, including\n//     without limitation the rights to use, copy, modify,\n//     merge, publish, distribute, sublicense, and/or sell\n//     copies of the Software, and to permit persons to\n//     whom the Software is furnished to do so, subject to\n//     the following conditions:\n//\n//     The above copyright notice and this permission notice\n//     shall be included in all copies or substantial\n//     portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\n//     ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\n//     TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n//     PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//     DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF\n//     CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n//     CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\n\nvar itmSentenceOut = require( './itm-sentence-out.js' );\n\n// ## colSentencesOut\n/**\n * Out for collection of sentences. Note: the out always returns a Javascript\n * data type or data structure.\n * @param  {object}   rdd          Raw Document Data-structure.\n * @param  {function} itsf         Desired `its` mapper.\n * @param  {object}   addons       The model's addons.\n * @return {*}                     Mapped sentences.\n * @private\n */\nvar colSentencesOut = function ( rdd, itsf, addons ) {\n  var sents = [];\n  for ( let i = 0; i < rdd.sentences.length; i += 1 ) {\n    sents.push( itmSentenceOut( i, rdd, itsf, addons ) );\n  }\n  return sents;\n}; // colSentencesOut()\n\nmodule.exports = colSentencesOut;\n","//     wink-nlp\n//\n//     Copyright (C) GRAYPE Systems Private Limited\n//\n//     This file is part of âwink-nlpâ.\n//\n//     Permission is hereby granted, free of charge, to any\n//     person obtaining a copy of this software and\n//     associated documentation files (the \"Software\"), to\n//     deal in the Software without restriction, including\n//     without limitation the rights to use, copy, modify,\n//     merge, publish, distribute, sublicense, and/or sell\n//     copies of the Software, and to permit persons to\n//     whom the Software is furnished to do so, subject to\n//     the following conditions:\n//\n//     The above copyright notice and this permission notice\n//     shall be included in all copies or substantial\n//     portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\n//     ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\n//     TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n//     PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//     DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF\n//     CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n//     CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\n\nvar its = require( '../its.js' );\nvar as = require( '../as.js' );\nvar allowed = require( '../allowed.js' );\nvar colTokensOut = require( './col-tokens-out.js' );\n\n// ## itmDocumentOut\n/**\n * Out method for the document. Note: the out always returns a Javascript\n * data type or data structure.\n * @param  {Object}   rdd         Raw Document Data-structure.\n * @param  {function} itsf        Desired `its` mapper.\n * @param  {Object}   addons      The model's addons.\n * @return {*}                    Mapped value.\n * @private\n */\nvar itmDocumentOut = function ( rdd, itsf, addons ) {\n  var document = rdd.document;\n  // Vectors require completely different handling.\n  if ( itsf === its.vector ) {\n    return its.vector( document, rdd, addons );\n  }\n\n  var itsfn = ( itsf && allowed.its4document.has( itsf ) ) ? itsf : its.value;\n\n  if ( itsfn === its.span || itsfn === its.sentiment ) {\n    return itsfn( document );\n  }\n\n  // Handle its.negationFlag seprately here.\n  if ( itsfn === its.negationFlag ) {\n    return ( document[ 2 ] === 1 );\n  }\n\n  if ( itsfn === its.readabilityStats ) {\n    return itsfn( rdd, addons );\n  }\n\n  // Setup the correct `as.fn` becuase the current markedup text would have\n  // returned the `value`. Refer to `its.markedUpText`.\n  var asfn = ( itsfn === its.markedUpText ) ? as.markedUpText : as.text;\n\n  return colTokensOut( document[ 0 ], document[ 1 ], rdd, itsfn, asfn, addons );\n}; // itmDocumentOut()\n\nmodule.exports = itmDocumentOut;\n","//     wink-nlp\n//\n//     Copyright (C) GRAYPE Systems Private Limited\n//\n//     This file is part of âwink-nlpâ.\n//\n//     Permission is hereby granted, free of charge, to any\n//     person obtaining a copy of this software and\n//     associated documentation files (the \"Software\"), to\n//     deal in the Software without restriction, including\n//     without limitation the rights to use, copy, modify,\n//     merge, publish, distribute, sublicense, and/or sell\n//     copies of the Software, and to permit persons to\n//     whom the Software is furnished to do so, subject to\n//     the following conditions:\n//\n//     The above copyright notice and this permission notice\n//     shall be included in all copies or substantial\n//     portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\n//     ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\n//     TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n//     PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//     DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF\n//     CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n//     CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\n\nvar constants = require( '../constants.js' );\n// Size of a single token.\nvar tkSize = constants.tkSize;\n// Mask for preceding spaces.\nvar psMask = constants.psMask;\n// Bits reserved for `lemma`.\nvar bits4lemma = constants.bits4lemma;\n// Mask for extracting pos\nvar posMask = constants.posMask;\n\n\n// ### printTokens\n/**\n *\n * Prints a table of tokens along with their properties on console.\n *\n * @param {number[]} tokens The tokens.\n * @param {object} cache The language `cache`.\n * @returns {void} Nothing!\n * @private\n*/\nvar printTokens = function ( tokens, cache ) {\n  var imax = tokens.length;\n  var i, j;\n  var t, tv;\n  var pad = '                         ';\n  var str;\n  var props = [ 'prefix', 'suffix', 'shape', 'lutCase', 'nerHint', 'tokenType' ];\n\n  // Print header.\n  console.log( '\\n\\ntoken      p-spaces   prefix  suffix  shape   case    nerHint type     normal/pos' );\n  console.log( 'âââââââââââââââââââââââââââââââââââââââââââââââââââââââââââââââââââââââââââââââââââââââ' );\n  for ( i = 0; i < imax; i += tkSize ) {\n    str = '';\n    t = tokens[ i ];\n    tv = cache.value( t );\n    str += ( JSON.stringify( tv ).replace( /\"/g, '' )  + pad ).slice( 0, 18 );\n    str += ( ( tokens[ i + 1 ] & psMask ) + pad ).slice( 0, 4 );  // eslint-disable-line no-bitwise\n    for ( j = 0; j < props.length; j += 1 ) {\n      str += ( JSON.stringify( cache.property( t, props[ j ] ) ).replace( /\"/g, '' ) + pad ).slice( 0, 8 );\n    }\n    if ( tokens[ i + 1 ] > 65535 ) {\n      str += ' ' + cache.value( cache.nox( tokens[ i + 1 ] ) ); // eslint-disable-line no-bitwise\n      str += ' / ' + cache.valueOf( 'pos', ( tokens[ i + 2 ] & posMask ) >>> bits4lemma ); // eslint-disable-line no-bitwise\n    } else {\n      str += ' ' + JSON.stringify( cache.value( cache.normal( t ) ) ).replace( /\"/g, '' );\n      str += ' / ' + cache.property( t, 'pos' );\n    }\n\n    // str += '/' + cache.property( t, 'nerHint' );  // eslint-disable-line no-bitwise\n    console.log( str );\n    // Not being used as of now; to use move it before the console.log!\n    str += ' / ' + cache.valueOf( 'pos', ( tokens[ i + 2 ] & posMask ) >>> bits4lemma );  // eslint-disable-line no-bitwise\n  }\n\n  // Print total number of tokens.\n  console.log( '\\n\\ntotal number of tokens: %d', tokens.length / tkSize );\n}; // printTokens()\n\nmodule.exports = printTokens;\n","//     wink-nlp\n//\n//     Copyright (C) GRAYPE Systems Private Limited\n//\n//     This file is part of âwink-nlpâ.\n//\n//     Permission is hereby granted, free of charge, to any\n//     person obtaining a copy of this software and\n//     associated documentation files (the \"Software\"), to\n//     deal in the Software without restriction, including\n//     without limitation the rights to use, copy, modify,\n//     merge, publish, distribute, sublicense, and/or sell\n//     copies of the Software, and to permit persons to\n//     whom the Software is furnished to do so, subject to\n//     the following conditions:\n//\n//     The above copyright notice and this permission notice\n//     shall be included in all copies or substantial\n//     portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\n//     ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\n//     TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n//     PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//     DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF\n//     CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n//     CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\n\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable no-console */\n\nvar containedEntities = require( './contained-entities.js' );\n\n// ### Helper Functions\n\n// Get **item at** collection, selection & parent.\nvar getParentItem = require( './api/get-parent-item.js' );\nvar colGetItemAt = require( './api/col-get-item.js' );\nvar selGetItemAt = require( './api/sel-get-item.js' );\n\n// **Each** iterator for collection & selection.\nvar colEach = require( './api/col-each.js' );\nvar selEach = require( './api/sel-each.js' );\n\n// **Filter** for collection & selection.\nvar colFilter = require( './api/col-filter.js' );\nvar selFilter = require( './api/sel-filter.js' );\n\n// **Token's out** for item, collection & selection.\nvar itmTokenOut = require( './api/itm-token-out.js' );\nvar colTokensOut = require( './api/col-tokens-out.js' );\nvar selTokensOut = require( './api/sel-tokens-out.js' );\n\n// **Entity's out** for item, collection & selection.\nvar itmEntityOut = require( './api/itm-entity-out.js' );\nvar colEntitiesOut = require( './api/col-entities-out.js' );\nvar selEntitiesOut = require( './api/sel-entities-out.js' );\n\n// **Sentence's out** for item, collection & selection.\nvar itmSentenceOut = require( './api/itm-sentence-out.js' );\nvar colSentencesOut = require( './api/col-sentences-out.js' );\n\n// **Document's out** for item.\nvar itmDocumentOut = require( './api/itm-document-out.js' );\n\n// Print tokens, it is primarily for command line output.\nvar printTokens = require( './api/print-tokens.js' );\n\n// <hr/>\n\n// # Doc\n/**\n *\n * The wink-nlp **doc**ument â constructed in `wink-nlp.js` â publishes the\n * developer APIs.\n *\n * @param  {object} docData     It encapsulates the document data.\n * @param  {object} addons      The model's addon, may contain word vectors, stemmer etc.\n * @return {object}             conatining APIs.\n * @private\n */\nvar doc = function ( docData, addons ) {\n  // Extract `cache` as it is frequently accessed.\n  var cache = docData.cache;\n\n  // Document's tokens; each token is represented as an array of numbers:\n  // ```\n  // [\n  //   hash, // of tokenized lexeme\n  //   (nox) + preceding spaces, // expansion's normal\n  //   pos + lemma, // pos & lemma are contextual\n  //   entity + sentence // 12bit + 20bits\n  // ]\n  // ```\n  var tokens = docData.tokens;\n\n  // Entities â sorted as array of `[ start, end, entity type ].`\n  var entities = docData.entities;\n  var customEntities = docData.customEntities;\n\n  // Sentences â sorted as array of pairs of `[ start, end ]` pointing to the `tokens`.\n  var sentences = docData.sentences;\n\n  // Markings are 4-tuples of `start`, `end` **token indexes**,  and `begin & end markers`.\n  // The begin & end markers are used to markup the tokens specified.\n  var markings = docData.markings;\n\n\n  // #### API core functions:\n\n  // Collection APIs.\n  var colEntities;\n  var colCustomEntities;\n  var colTokens;\n  var colSentences;\n\n  // Selection â obtained via `filter` â APIs. It is also like a collection.\n  var colSelectedEntities;\n  var colSelectedCustomEntities;\n  var colSelectedTokens;\n\n  // Item APIs.\n  var itemToken;\n  var itemEntity;\n  var itemCustomEntity;\n  var itemSentence;\n\n  // Others.\n  var isLexeme = cache.lookup;\n\n  // The Document â Returned!\n  var methods = Object.create( null );\n\n  // ## Token\n  // **Item, Collection, and Selection APIs.**\n\n  // ### itemToken\n  /**\n   *\n   * Makes item of the token specified at `index`.\n   *\n   * @param  {number} index The index of the token, which is required to be returned as item token.\n   * @return {object}       containing applicable API methods.\n   * @private\n   */\n  itemToken = function ( index ) {\n    var api = Object.create( null );\n    // Access the parent document.\n    api.parentDocument = () => methods;\n    // Access the parent entity, **if any.**\n    api.parentEntity = () => getParentItem( index, entities, itemEntity );\n    // Access the parent cuustom entity, **if any.**\n    api.parentCustomEntity = () => getParentItem( index, customEntities, itemCustomEntity );\n    // Markup this token.\n    api.markup = ( beginMarker, endMarker ) => markings.push( [ index, index, beginMarker, endMarker ] );\n    // Output this token or its properties using mapper function â `f`.\n    api.out = ( f ) => itmTokenOut( index, docData, f, addons );\n    // Access the parent sentence.\n    api.parentSentence = () => getParentItem( index, sentences, itemSentence );\n    // Index within the document.\n    api.index = () => ( index );\n    return api;\n  }; // itemToken()\n\n  // ### colSelectedTokens\n  /**\n   *\n   * Makes collection of tokens identified by the `selectedTokens` array.\n   *\n   * @param  {array} selectedTokens The array of selected tokens, using which the\n   *                                collection is made.\n   * @return {object}               containing applicable API methods.\n   * @private\n   */\n  colSelectedTokens = function ( selectedTokens ) {\n    var api = Object.create( null );\n    // Iterator.\n    api.each = ( f ) => selEach( f, selectedTokens, itemToken );\n    // Filter.\n    api.filter = ( f ) => selFilter( f, selectedTokens, itemToken, colSelectedTokens );\n    // Item at `k`th index. If `k` is outside valid range, return `undefined` like JS.\n    api.itemAt = ( k ) => selGetItemAt( k, selectedTokens, itemToken );\n    // Number of selected tokens.\n    api.length = () => ( selectedTokens.length );\n    // Output this collection of selected tokens as a reduced values or properties\n    // using map/reduce functions â `f/g`.\n    api.out = ( f, g ) => selTokensOut( selectedTokens, docData, f, g, addons );\n    return api;\n  }; // colTokens()\n\n  // ### colTokens\n  /**\n   *\n   * Makes collection of tokens beginning from `start` index to `end` index.\n   *\n   * @param  {number} start The start index.\n   * @param  {number} end   The end index.\n   * @return {object}       containing applicable API methods.\n   * @private\n   */\n  colTokens = function ( start, end ) {\n    return (\n      function () {\n        var api = Object.create( null );\n        // Iterator.\n        api.each = ( f ) => colEach( f, start, end, itemToken );\n        // Filter.\n        api.filter = ( f ) => colFilter( f, start, end, itemToken, colSelectedTokens );\n        // Item at `k`th index. If `k` is outside valid range, return `undefined` like JS.\n        // No need to handle relative indexing as `colGetItemAt` handles it.\n        api.itemAt = ( k ) => colGetItemAt( k, start, end, itemToken );\n        // Length of this collection.\n        api.length = () => ( end - start + 1 );\n        // Output this token collection as a reduced values or properties using\n        // map/reduce functions â `f/g`.\n        api.out = ( f, g ) => colTokensOut( start, end, docData, f, g, addons );\n\n        return api;\n      }\n    );\n  }; // colTokens()\n\n  // <hr/>\n\n  // ## Entity\n  // **Item, Collection, and Selection APIs.**\n\n  // ### itemEntity\n  /**\n   *\n   * Makes item of the entity specified at `index`.\n   *\n   * @param  {number} index The index of the entity, which is required to be\n   *                        returned as item entity.\n   * @return {object}       containing applicable API methods.\n   * @private\n   */\n  itemEntity = function ( index ) {\n    var api = Object.create( null );\n    // Access the parent document.\n    api.parentDocument = () => methods;\n    // Markup this entity.\n    api.markup = ( beginMarker, endMarker ) => markings.push( [ entities[ index ][ 0 ], entities[ index ][ 1 ], beginMarker, endMarker ] );\n    // Output this entity or its properties using mapper function â `f`.\n    api.out = ( f ) => itmEntityOut( index, entities, docData, f );\n    // Access the parent sentence.\n    api.parentSentence =  () => getParentItem( entities[ index ][ 0 ], sentences, itemSentence );\n    // Retun collection of tokens contained in this entity.\n    api.tokens = colTokens( entities[ index ][ 0 ], entities[ index ][ 1 ] );\n    // Index within the document.\n    api.index = () => ( index );\n    return api;\n  }; // itemEntity()\n\n  // ### colSelectedEntities\n  /**\n   *\n   * Makes collection of entities identified by the `selectedEntities` array.\n   *\n   * @param  {array} selectedEntities The array of selected entities, using which\n   *                                  the collection is made.\n   * @return {object}                 containing applicable API methods.\n   * @private\n   */\n  colSelectedEntities = function ( selectedEntities ) {\n    var api = Object.create( null );\n    // Iterator.\n    api.each = ( f ) => selEach( f, selectedEntities, itemEntity );\n    // Filter.\n    api.filter = ( f ) => selFilter( f, selectedEntities, itemEntity, colSelectedEntities );\n    // Item at `k`th index. If `k` is outside valid range, return `undefined` like JS.\n    api.itemAt = ( k ) => selGetItemAt( k, selectedEntities, itemEntity );\n    // Number of selected entities.\n    api.length = () => ( selectedEntities.length );\n    // Output this collectionn of selected of entities as a reduced value\n    // using map/reduce functions â `f/g`.\n    api.out = ( f, g ) => selEntitiesOut( selectedEntities, entities, docData, f, g );\n    return api;\n  }; // colSelectedEntities()\n\n  // ### colEntities\n  /**\n   *\n   * Makes collection of all the entities.\n   *\n   * @return {object} containing applicable API methods.\n   * @private\n   */\n  colEntities = function () {\n    var api = Object.create( null );\n    // Iterator.\n    api.each = ( f ) => colEach( f, 0, entities.length - 1, itemEntity );\n    // Filter.\n    api.filter = ( f ) => colFilter( f, 0, entities.length - 1, itemEntity, colSelectedEntities );\n    // Item at `k`th index. If `k` is outside valid range, return `undefined` like JS.\n    api.itemAt = ( k ) => colGetItemAt( k, 0, ( entities.length - 1 ), itemEntity );\n    // Length of this collection.\n    api.length = () => ( entities.length );\n    // Output this collection of entities as a reduced value\n    // using map/reduce functions â `f/g`.\n    api.out = ( f, g ) => colEntitiesOut( entities, docData, f, g );\n    return api;\n  }; // colEntities()\n\n  // <hr/>\n\n  // ## Entity\n  // **Item, Collection, and Selection APIs.**\n\n  // ### itemCustomEntity\n  /**\n   *\n   * Makes item of the entity specified at `index`.\n   *\n   * @param  {number} index The index of the entity, which is required to be\n   *                        returned as item entity.\n   * @return {object}       containing applicable API methods.\n   * @private\n   */\n  itemCustomEntity = function ( index ) {\n    var api = Object.create( null );\n    // Access the parent document.\n    api.parentDocument = () => methods;\n    // Markup this entity.\n    api.markup = ( beginMarker, endMarker ) => markings.push( [ customEntities[ index ][ 0 ], customEntities[ index ][ 1 ], beginMarker, endMarker ] );\n    // Output this entity or its properties using mapper function â `f`.\n    api.out = ( f ) => itmEntityOut( index, customEntities, docData, f );\n    // Access the parent sentence.\n    api.parentSentence =  () => getParentItem( customEntities[ index ][ 0 ], sentences, itemSentence );\n    // Retun collection of tokens contained in this entity.\n    api.tokens = colTokens( customEntities[ index ][ 0 ], customEntities[ index ][ 1 ] );\n    // Index within the document.\n    api.index = () => ( index );\n    return api;\n  }; // itemCustomEntity()\n\n  // ### colSelectedCustomEntities\n  /**\n   *\n   * Makes collection of entities identified by the `selectedEntities` array.\n   *\n   * @param  {array} selectedCustomEntities The array of selected entities, using which\n   *                                        the collection is made.\n   * @return {object}                       containing applicable API methods.\n   * @private\n   */\n  colSelectedCustomEntities = function ( selectedCustomEntities ) {\n    var api = Object.create( null );\n    // Iterator.\n    api.each = ( f ) => selEach( f, selectedCustomEntities, itemCustomEntity );\n    // Filter.\n    api.filter = ( f ) => selFilter( f, selectedCustomEntities, itemCustomEntity, colSelectedCustomEntities );\n    // Item at `k`th index. If `k` is outside valid range, return `undefined` like JS.\n    api.itemAt = ( k ) => selGetItemAt( k, selectedCustomEntities, itemCustomEntity );\n    // Number of selected entities.\n    api.length = () => ( selectedCustomEntities.length );\n    // Output this collectionn of selected of entities as a reduced value\n    // using map/reduce functions â `f/g`.\n    api.out = ( f, g ) => selEntitiesOut( selectedCustomEntities, customEntities, docData, f, g );\n    return api;\n  }; // colSelectedCustomEntities()\n\n  // ### colCustomEntities\n  /**\n   *\n   * Makes collection of all the entities.\n   *\n   * @return {object} containing applicable API methods.\n   * @private\n   */\n  colCustomEntities = function () {\n    var api = Object.create( null );\n    // Iterator.\n    api.each = ( f ) => colEach( f, 0, customEntities.length - 1, itemCustomEntity );\n    // Filter.\n    api.filter = ( f ) => colFilter( f, 0, customEntities.length - 1, itemCustomEntity, colSelectedCustomEntities );\n    // Item at `k`th index. If `k` is outside valid range, return `undefined` like JS.\n    api.itemAt = ( k ) => colGetItemAt( k, 0, ( customEntities.length - 1 ), itemCustomEntity );\n    // Length of this collection.\n    api.length = () => ( customEntities.length );\n    // Output this collection of entities as a reduced value\n    // using map/reduce functions â `f/g`.\n    api.out = ( f, g ) => colEntitiesOut( customEntities, docData, f, g );\n    return api;\n  }; // colCustomEntities()\n\n  // <hr/>\n\n  // ## Sentence\n  // **Item, Collection, and Selection APIs.**\n\n  // ### itemSentence\n  /**\n   *\n   * Makes item of the sentence specified by `index` of the sentence.\n   *\n   * @param  {number} index The index of the sentence.\n   * @return {object}       containing applicable API methods.\n   * @private\n   */\n  itemSentence = function ( index ) {\n    var api = Object.create( null );\n    // Access the parent document.\n    api.parentDocument = () => methods;\n    // Markup this sentence.\n    api.markup = ( beginMarker, endMarker ) => markings.push( [ sentences[ index ][ 0 ], sentences[ index ][ 1 ], beginMarker, endMarker ] );\n    // Output this sentence as text.\n    api.out = ( f ) => itmSentenceOut( index, docData, f, addons );\n    // Outputs the collection of entities, if any, contained in this sentence.\n    api.entities = () => colSelectedEntities( containedEntities( entities, sentences[ index ][ 0 ], sentences[ index ][ 1 ] ) );\n    // Outputs the collection of custom entities, if any, contained in this sentence.\n    api.customEntities = () => colSelectedCustomEntities( containedEntities( customEntities, sentences[ index ][ 0 ], sentences[ index ][ 1 ] ) );\n    // Outputs the collection of tokens in this sentence.\n    api.tokens = colTokens( sentences[ index ][ 0 ], sentences[ index ][ 1 ] );\n    // Index within the document.\n    api.index = () => ( index );\n    return api;\n  }; // itemSentence()\n\n  // ### colSentences\n  /**\n   *\n   * Makes collection of sentences in this document.\n   *\n   * @return {object} containing applicable API methods.\n   * @private\n   */\n  colSentences = function () {\n    var api = Object.create( null );\n    // Iterator.\n    api.each = ( f ) => colEach( f, 0, sentences.length - 1, itemSentence );\n    // Item at `k`th index. If `k` is outside valid range, return `undefined` like JS.\n    api.itemAt = ( k ) => colGetItemAt( k, 0, ( sentences.length - 1 ), itemSentence );\n    // Length of this collection.\n    api.length = () => ( sentences.length );\n    // Output this collection of sentences as an array of strings.\n    api.out = ( f ) => colSentencesOut( docData, f, addons );\n    return api;\n  }; // colSentences()\n\n  // <hr/>\n\n\n  // Published chainable methods.\n  methods.entities = colEntities;\n  methods.customEntities = colCustomEntities;\n  methods.isLexeme = isLexeme;\n  methods.isOOV = cache.isOOV;\n  methods.out = ( f ) => itmDocumentOut( docData, f, addons );\n  methods.sentences = colSentences;\n  methods.tokens = colTokens( 0, docData.numOfTokens - 1 );\n\n  methods.printTokens = () => printTokens( tokens, cache );\n\n  // Enusre that we make a deep copy of config before returning to avoid corruption!\n  methods.pipeConfig = () => JSON.parse( JSON.stringify( docData.currPipe ) );\n\n  return methods;\n};\n\nmodule.exports = doc;\n","//     wink-nlp\n//\n//     Copyright (C) GRAYPE Systems Private Limited\n//\n//     This file is part of âwink-nlpâ.\n//\n//     Permission is hereby granted, free of charge, to any\n//     person obtaining a copy of this software and\n//     associated documentation files (the \"Software\"), to\n//     deal in the Software without restriction, including\n//     without limitation the rights to use, copy, modify,\n//     merge, publish, distribute, sublicense, and/or sell\n//     copies of the Software, and to permit persons to\n//     whom the Software is furnished to do so, subject to\n//     the following conditions:\n//\n//     The above copyright notice and this permission notice\n//     shall be included in all copies or substantial\n//     portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\n//     ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\n//     TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n//     PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//     DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF\n//     CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n//     CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\n\nvar constants = require( './constants.js' );\nvar xnMask = constants.xnMask;\nvar bits4PrecedingSpace = constants.bits4PrecedingSpace;\nvar xcMask = constants.xcMask;\nvar bits4xpPointer = constants.bits4xpPointer;\n\n// ## cache\n/**\n *\n * Creates an instance of `cache`. It is typically instantiated in each `winkNLP`\n * instance and there it is responsible for caching token properties acrosss the\n * documents i.e. the `doc()`.\n *\n * @param {Array} model containing language model.\n * @param {Array} featureFn extracts language specific features of a lexeme.\n * @return {object} of methods.\n * @private\n*/\nvar cache = function ( model, featureFn ) {\n  const fTokenType = 'tokenType';\n  // Returned!\n  var methods = Object.create( null );\n  // Extract frequently used properties.\n  var lexemesHash = model.features.lexeme.hash;\n  var lxm = model.features.lexeme;\n  var lexemeIntrinsicSize = model.features.lexeme.intrinsicSize;\n  var layout = model.packing.layout;\n  var pkSize = model.packing.size;\n  var efSize = model.packing.efSize;\n  var efList = model.packing.efList;\n  var efListSize = efList.length;\n  var lexicon = model.lexicon;\n  var xpansions = model.xpansions;\n  var posClusters = model.features.posClusters.list;\n  // Contains quantas of UInt32Array of size `model.packing.size`. A quanta\n  // at an `index` contains the features of the corresponding OOV lexeme loacted\n  // at `model.features.lexeme.list[ index ]`. This simplifies information access,\n  // as it remains identical to the **intrinsic lexicon** with the only difference\n  // that this not a continuous array of UInt32s. It follows\n  // `[ normal, lemma, <extractable features> ]` structure. The extractable\n  // features will be dynamically determined using the language model.\n  var extrinsicLexicon = [];\n  // Base Packing Size is `2` because one word each for normal & lemma is needed.\n  var elBasePackingSize = 2;\n  // Packing size for each lexeme in `extrinsicLexicon` â base plus additional\n  // words needed for extractable features.\n  var elPackingSize = 2 + efSize;\n  // Extractable Features temp storage; eventually its contents will be pushed\n  // inside `extrinsicLexicon`. Space is allocated right in the beginning to save\n  // time. Its contents are filled i.e. initialized with 0 whenever needed.\n  var efArray = new Uint32Array( efSize );\n\n  var feature = featureFn( model.packing.config );\n\n  // Extractable Features Hash: used during property extraction for OOV tokens.\n  // If a token is not found in this then a **0** is returned.\n  var efHash = Object.create( null );\n  // Since `tokenType` is determined during tokenization, it is always extractable.\n  efHash.tokenType = true;\n  // Copy rest from the list in to the hash.\n  efList.forEach( ( ef ) => ( efHash[ ef ] = true ) );\n\n  // ## getFeaturesIndex\n  /**\n   *\n   * Returns the `index` of `value` from the feature `name`. If the value is\n   * missing then it is added and its `index` is returned accordingly alongwith\n   * a flag indicating that it is a new value.\n   *\n   * @param {string} name of the feature.\n   * @param {string} value of the feature, whoes index will be returned.\n   * @return {number[]} `[ isNewValue, index ]`.\n   * @example\n   * // Returns the index (hash) of **lexeme** â `you`:\n   * getFeaturesIndex( 'lexeme', 'you' );\n   * // -> [ 0, 47 ]\n   * // If `you` was absent then it would have been added and the return value\n   * // would have been [ 1, index of added value ]\n   * @private\n  */\n  var getFeaturesIndex = function ( name, value ) {\n    // Extract the named feature.\n    var f = model.features[ name ];\n    // And its hash & list.\n    var h = f.hash;\n    var l = f.list;\n    // New `value` flag.\n    var isNewValue = 0;\n    // Check if `value` is present.\n    var index = h[ value ];\n    if ( index === undefined ) {\n      // Feature's storage limit check. â not required right now!\n      // if ( f.index > f.maxIndex ) {\n      //   throw Error( `wink-nlp: memory limit for \"${name}\" exceeded.` );\n      // }\n      // Missing â add `value`.\n      index = h[ value ] = f.index;\n      // No need to increment index because push returns the required value!\n      f.index = l.push( value );\n      // Set new value flag.\n      isNewValue = 1;\n    }\n    return [ isNewValue, index ];\n  }; // getFeaturesIndex()\n\n  // ## add\n  /**\n   *\n   * Adds a token in the cache corresponding to the **text**. If the same is\n   * present in the cache then a pointer to its cached value is retured; otherwise\n   * a new entry is made in the cache and the same is returned.\n   *\n   * Whenever a new entry is made, all its extractable features are also\n   * extracted & packed; and if an extractable feature is also new, its entry\n   * is also made via `getFeaturesIndex()` api.\n   *\n   * @param {string} text i.e. the value of the token to be added.\n   * @param {number} category of the token i.e. `word(0)` or `number(1)`, etc.\n   * @return {number[]} index (or hash) of the `text` added.\n   * @private\n  */\n  var add = function ( text, category ) {\n    // Lowercased `text`.\n    var normText = text.toLowerCase();\n    // First start with `text` as its properties are being processed first.\n    var textIndex = getFeaturesIndex( 'lexeme', text );\n    // Then obtain index of its normal.\n    var normIndex = ( normText === text ) ? textIndex : getFeaturesIndex( 'lexeme', normText );\n    // Helpers: cfg of feature, feature, feature's value, feature's value for\n    // packing & loop index.\n    var cfg, f, fv, fv4p, k;\n\n    // Process properties of `text` first.\n    // The `textIndex[ 0 ]` is a indicated if the value is newly added, and if\n    // so then add extract-able features. See `getFeaturesIndex()` above.\n    if ( textIndex[ 0 ] ) {\n      // NOTE: This block of code is repeated below, with an exception that\n      // in the next block we use `normtext` in `fv = feature[ f ]( text )`.\n      // Intialize extractable featires' array with all 0s.\n      efArray.fill( 0 );\n      // For every extractable feature, extract & pack.\n      for ( k = 0; k < efListSize; k += 1 ) {\n        f = efList[ k ];\n        cfg = layout[ f ];\n        // Use `text`.\n        fv = feature[ f ]( text, category, methods );\n        fv4p = ( cfg[ 3 ] ) ? fv : getFeaturesIndex( f, fv )[ 1 ];\n        efArray[ cfg[ 0 ] ] |= ( fv4p << cfg[ 2 ] ); // eslint-disable-line no-bitwise\n      } // for\n      // Pack token type now.\n      f = fTokenType;\n      cfg = layout[ f ];\n      efArray[ cfg[ 0 ] ] |= ( category << cfg[ 2 ] ); // eslint-disable-line no-bitwise\n      // Push all the details i.e. `[ normal, lemma, <extractable features> ]`\n      // into `extrinsicLexicon`.\n      extrinsicLexicon.push( normIndex[ 1 ], normIndex[ 1 ], ...efArray );\n    } // if ( >= lexemeIntrinsicSize )\n\n    // If the normalized text is not same as the original text then the\n    // normalize text's extract-able features could be candidates for addition.\n    if ( textIndex[ 1 ] !== normIndex[ 1 ] ) {\n      // Has it been newly added? If Yes, add its extract-able features.\n      if ( normIndex[ 0 ] ) {\n        // NOTE: This block of code is same as above.\n        // Intialize extractable featires' array with all 0s.\n        efArray.fill( 0 );\n        // For every extractable feature, extract & pack.\n        for ( k = 0; k < efListSize; k += 1 ) {\n          f = efList[ k ];\n          cfg = layout[ f ];\n          // Use `normText`.\n          fv = feature[ f ]( normText, category, methods );\n          fv4p = ( cfg[ 3 ] ) ? fv : getFeaturesIndex( f, fv )[ 1 ];\n          efArray[ cfg[ 0 ] ] |= ( fv4p << cfg[ 2 ] ); // eslint-disable-line no-bitwise\n        } // for\n        // Pack token type now.\n        f = fTokenType;\n        cfg = layout[ f ];\n        efArray[ cfg[ 0 ] ] |= ( category << cfg[ 2 ] ); // eslint-disable-line no-bitwise\n        // Push all the details i.e. `[ normal, lemma, <extractable features> ]`\n        // into `extrinsicLexicon`.\n        extrinsicLexicon.push( normIndex[ 1 ], normIndex[ 1 ], ...efArray );\n      } // if ( >= lexemeIntrinsicSize )\n    } // if ( textIndex !== normIndex )\n\n    // Return the `textIndex` only â this can be sued to extract properties.\n    return ( textIndex[ 1 ] );\n  }; // add()\n\n  // ## lookup\n  /**\n   *\n   * Looks up for the `text` in the cache and returns its index. If the input\n   * text is a contraction then its expansions are returned.\n   *\n   * @param {string} text to be searched in the cache.\n   * @return {number[]} contains either a single element (i.e. `index`) indicating\n   * that it is NOT a contraction or multiple elements indication that the text\n   * is a contraction. Each contraction expands into 4 elements viz. `lexeme`,\n   * `normal`, `lemma` , and `pos`.\n   * @private\n  */\n  var lookup = function ( text ) {\n    // `layout.isContraction` for multiple use later.\n    var layout4isContraction = layout.isContraction;\n    var layout4lemma = layout.lemma;\n    // `index` to `text`.\n    var index = lexemesHash[ text ];\n    // Holds lemma extracted in case of contraction.\n    var lemma;\n    // Contraction Count, Contraction Index, Loop Index.\n    var cc, cx, cxi;\n\n    // If the text is not found, return `null`.\n    if ( index === undefined ) return null;\n    // `text` is found â need to check for contraction if `text` is not an OOV.\n    var tokens = [];\n    var isContraction;\n    if ( index < lexemeIntrinsicSize ) {\n      // Not an OOV, check it it is a contraction.\n      isContraction = ( lexicon[ layout4isContraction[ 0 ] + ( index * pkSize ) ] & layout4isContraction[ 1 ] ) >>> layout4isContraction[ 2 ]; // eslint-disable-line no-bitwise\n      if ( isContraction ) {\n        // It is a contraction, process its expansions.\n        // Start by extracting lemma, as it contains pointer to `expansions` and their count.\n        lemma  = ( lexicon[ layout4lemma[ 0 ] + ( index * pkSize ) ] & layout4lemma[ 1 ] ) >>> layout4lemma[ 2 ]; // eslint-disable-line no-bitwise\n        // Extract pointer (i.e. index) to expansions and their count.\n        cx = lemma & 0x3FFF; // eslint-disable-line no-bitwise\n        cc = ( lemma & ( xcMask << bits4xpPointer ) ) >> bits4xpPointer; // eslint-disable-line no-bitwise\n        // Iterate through `cc` times to push details into the `tokens`.\n        for ( cxi = 0; cxi < cc; cxi += 4 ) {\n          tokens.push(\n            xpansions[ cx + cxi ],      // lexeme\n            cx + cxi + 1,               // normal (pointer to xpansion & not to lexicon)\n            xpansions[ cx + cxi + 2 ],  // lemma\n            xpansions[ cx + cxi + 3 ]   // pos\n          );\n        }\n      } else {\n        // Not a contraction, simply add `text`'s `index` to `tokens`.\n        tokens.push( index );\n      }\n    } else {\n      // An OOV, only add `text`'s `index` to `tokens`.\n      tokens.push( index );\n    }\n    return tokens;\n  }; // lookup()\n\n  // ## value\n  /**\n   *\n   * Returns the value corresponding to the `index`.\n   *\n   * @param {number} index for the value.\n   * @return {string} value corresponding to the `index`.\n   * @private\n  */\n  var value = function ( index ) {\n    return lxm.list[ index ];\n  }; // value()\n\n  // ## normal\n  /**\n   *\n   * Returns the index of normal of the input `index` (of required lexeme) after\n   * taking into account mapping of spelling, if any.\n   *\n   * @param {number} index of the required lexeme.\n   * @return {string} index to the normal.\n   * @private\n  */\n  var normal = function ( index ) {\n    // Temps for `layput.normal`, `layout.isSpellingMapped`, etc.\n    var layout4normal = layout.normal;\n    var layout4mapped = layout.isSpellingMapped;\n    var layout4lemma =  layout.lemma;\n    // Used to remap if its value is `1`. In this case lemma becomes the `normIndex`.\n    var isSpellingMapped;\n    // Index for OOVs i.e. when `index > lexemeIntrinsicSize`.\n    var oovIdx;\n    // Returned: normal's index.\n    var normIndex;\n\n    // Processing is different for native and OOV words or lexemes. For OOVs\n    // properties have to be extracted from `extrinsicLexicon`, whereas for\n    // native words they are exracted from `lexicon`.\n    if ( index < lexemeIntrinsicSize ) {\n      normIndex = ( lexicon[ layout4normal[ 0 ] + ( index * pkSize ) ] & layout4normal[ 1 ] ) >>> layout4normal[ 2 ]; // eslint-disable-line no-bitwise\n      isSpellingMapped = ( lexicon[ layout4mapped[ 0 ] + ( index * pkSize ) ] & layout4mapped[ 1 ] ) >>> layout4mapped[ 2 ]; // eslint-disable-line no-bitwise\n      if ( isSpellingMapped ) {\n        // Mapped, pick up the lemma portion as this points to normal in case of\n        // mapped spellings.\n        normIndex = ( lexicon[ layout4lemma[ 0 ] + ( index * pkSize ) ] & layout4lemma[ 1 ] ) >>> layout4lemma[ 2 ]; // eslint-disable-line no-bitwise\n      } else {\n        // Compute actual index from the relative index.\n        normIndex += index;\n      }\n    } else {\n      oovIdx = index - lexemeIntrinsicSize;\n      // Refer to `extrinsicLexicon` structure at the top of `cache()`.\n      normIndex = extrinsicLexicon[ oovIdx * elPackingSize ];\n      // This `normIndex` may point to an intrinsic lexeme, in which case\n      // mapping needs to be checked.\n      if ( normIndex < lexemeIntrinsicSize ) {\n        isSpellingMapped = ( lexicon[ layout4mapped[ 0 ] + ( normIndex * pkSize ) ] & layout4mapped[ 1 ] ) >>> layout4mapped[ 2 ]; // eslint-disable-line no-bitwise\n        if ( isSpellingMapped ) {\n          normIndex = ( lexicon[ layout4lemma[ 0 ] + ( normIndex * pkSize ) ] & layout4lemma[ 1 ] ) >>> layout4lemma[ 2 ]; // eslint-disable-line no-bitwise\n        }\n      }\n    }\n\n    return normIndex;\n  }; // normal()\n\n  // ## mappedSpelling\n  /**\n   *\n   * Returns the index of mapped spelling's of the input `index` of required lexeme.\n   *\n   * @param {number} index of the required lexeme.\n   * @return {string} index to the normal.\n   * @private\n  */\n  var mappedSpelling = function ( index ) {\n    // Temps for `layout.isSpellingMapped`, etc.\n    var layout4mapped = layout.isSpellingMapped;\n    var layout4lemma =  layout.lemma;\n    // Used to remap if its value is `1`. In this case lemma becomes the `normIndex`.\n    var isSpellingMapped;\n    // Returned: normal's index.\n    var mappedIndex = index;\n\n    // Only applicable to lexems that are inside the vocabulary as there can not\n    // be mapped spelling for OOV words!\n    if ( index < lexemeIntrinsicSize ) {\n      isSpellingMapped = ( lexicon[ layout4mapped[ 0 ] + ( index * pkSize ) ] & layout4mapped[ 1 ] ) >>> layout4mapped[ 2 ]; // eslint-disable-line no-bitwise\n      if ( isSpellingMapped ) {\n        // Mapped, pick up the lemma portion as this points to normal in case of\n        // mapped spellings.\n        mappedIndex = ( lexicon[ layout4lemma[ 0 ] + ( index * pkSize ) ] & layout4lemma[ 1 ] ) >>> layout4lemma[ 2 ]; // eslint-disable-line no-bitwise\n      }\n    }\n\n    return mappedIndex;\n  }; // mappedSpelling()\n\n  // ## nox\n  /**\n   *\n   * Returns the index of normal of the expansion.\n   *\n   * @param {number} binaryWord containing pointer to `xpansions` and `precedingSpaces`;\n   * It is the 2nd (relative) element of a single token's packet of 4-words.\n   * @return {number} index to the normal, whoes value can be found via `value()`.\n   * @private\n  */\n  var nox = function ( binaryWord ) {\n    return xpansions[ ( binaryWord & xnMask) >>> bits4PrecedingSpace ];  // eslint-disable-line no-bitwise\n  }; // nox()\n\n  // ## property\n  /**\n   *\n   * Extracts the property â `prop` of a lexeme (or word) specified by `index`.\n   *\n   * @param {number} index of the lexeme whoes properties are required to be extracted.\n   * @param {string} prop (name) that needs to be extracted â it should be a valid property.\n   * @return {string} extracted property, if `prop` is known/valid otherwise `null`.\n   * @private\n  */\n  var property = function ( index, prop ) {\n    // A property and its value\n    var propValue;\n    // Index for OOVs i.e. when `index > lexemeIntrinsicSize`.\n    var oovIdx;\n    // Temp for `layput[ p ]`\n    var layout4Prop;\n\n    // Processing is different for native and OOV words or lexemes. For OOVs\n    // properties have to be extracted from `extrinsicLexicon`, whereas for\n    // native words they are exracted from `lexicon`.\n    if ( index < lexemeIntrinsicSize ) {\n      layout4Prop = layout[ prop ];\n      if ( layout4Prop  === undefined ) return null;\n      propValue  = ( lexicon[ layout4Prop[ 0 ] + ( index * pkSize ) ] & layout4Prop[ 1 ] ) >>> layout4Prop[ 2 ]; // eslint-disable-line no-bitwise\n      // Use hash/list to update value if required.\n      if ( layout4Prop[ 3 ] === 0 || layout4Prop[ 5 ] === 1 ) propValue = model.features[ prop ].list[ propValue ];\n    } else {\n        // Attempt extraction only if extractable!\n        if ( !efHash[ prop ] ) return 0;\n        // Compute index into `extrinsicLexicon`.\n        oovIdx = index - lexemeIntrinsicSize;\n        layout4Prop = layout[ prop ];\n        // No need for this check as `if ( !efHash[ prop ] )...` ensures return\n        // in case of any unknown property:\n        /* if ( layout4Prop  === undefined ) return null; */\n        // Use `extrinsicLexicon`.\n\n        // Reach to the desired quanta via `oovIdx * elPackingSize`, move forward by `base size` and then go to offset!\n        propValue  = ( extrinsicLexicon[ ( oovIdx * elPackingSize ) + elBasePackingSize + layout4Prop[ 0 ] ] & layout4Prop[ 1 ] ) >>> layout4Prop[ 2 ]; // eslint-disable-line no-bitwise\n        // Use hash/list to update value if required.\n        if ( layout4Prop[ 3 ] === 0 || layout4Prop[ 5 ] === 1 ) propValue = model.features[ prop ].list[ propValue ];\n    }\n    return propValue;\n  }; // property()\n\n  var isMemberPOS = function ( lexemeIdx, posIdx ) {\n    // Dont miss converting posIdx to a number.\n    return posClusters[ property( lexemeIdx, 'lexemeCID' ) ].has( +posIdx );\n  }; // isMemberPOS()\n\n  // ## posOf\n  /**\n   *\n   * Extracts the pos' index of the a lexeme (or word) specified by `index`.\n   *\n   * @param {number} index of the lexeme whoes properties are required to be extracted.\n   * @return {string[]} extracted properties in the same sequence as `list`.\n   * @private\n  */\n  var posOf = function ( index ) {\n    // Value of extracted pos will go here.\n    var posValue;\n    // Index for OOVs i.e. when `index > lexemeIntrinsicSize`.\n    var oovIdx;\n    // Temp for `layput[ p ]`\n    var layout4Prop;\n\n    // Processing is different for native and OOV words or lexemes. For OOVs\n    // properties have to be extracted from `extrinsicLexicon`, whereas for\n    // native words they are exracted from `lexicon`.\n    if ( index < lexemeIntrinsicSize ) {\n        layout4Prop = layout.pos;\n        posValue  = ( lexicon[ layout4Prop[ 0 ] + ( index * pkSize ) ] & layout4Prop[ 1 ] ) >>> layout4Prop[ 2 ]; // eslint-disable-line no-bitwise\n    } else {\n        // Compute index into `extrinsicLexicon`.\n        oovIdx = index - lexemeIntrinsicSize;\n        layout4Prop = layout.pos;\n\n        // Use `extrinsicLexicon`.\n        // Reach to the desired quanta via `oovIdx * elPackingSize`, move forward by `base size` and then go to offset!\n        posValue  = ( extrinsicLexicon[ ( oovIdx * elPackingSize ) + elBasePackingSize + layout4Prop[ 0 ] ] & layout4Prop[ 1 ] ) >>> layout4Prop[ 2 ]; // eslint-disable-line no-bitwise\n    }\n    return posValue;\n  }; // posOf()\n\n  // ## valueOf\n  /**\n   *\n   * Extracts the value of the `prop`erty for its input `index`.\n   *\n   * @param {string} prop to be extracted for the `index`.\n   * @param {number} index of the property.\n   * @return {string[]} extracted properties in the same sequence as `list`.\n   * @private\n  */\n  var valueOf = function ( prop, index ) {\n    return model.features[ prop ].list[ index ];\n  }; // valueOf()\n\n  // ## currentSize\n  /**\n   *\n   * Returns the current size of lexicon including OOVs.\n   *\n   * @return {number} size of the current lexicon.\n   * @private\n  */\n  var currentSize = function () {\n    // Minus `1` becuase at `0` we have OOV symbolic word.\n    return ( lxm.list.length - 1 );\n  }; // size()\n\n  // ## intrinsicSize\n  /**\n   *\n   * Returns the intrinsic i.e. native size of lexicon.\n   *\n   * @return {number} size of the native or intrinsic lexicon.\n   * @private\n  */\n  var intrinsicSize = function () {\n    return lexemeIntrinsicSize;\n  };\n\n  /**\n   * Finds if the text can have `pos` as valid part of speech, provided it is a\n   * base form. Used in **lemmatization** to see if the lemma shares the same pos\n   * with the original word.\n   *\n   * @param  {string} text  the incoming word.\n   * @param  {string} pos   the pos that needs to be checked as one of the valid pos for text.\n   * @return {boolean}       True if it does, otherwise false.\n   */\n  var hasSamePOS = function ( text, pos ) {\n    // Get the word's index\n    var textIndex = lookup( text );\n    // If not found i.e. OOV means that it did not have a pre-defined POS set.\n    if ( !textIndex ) return false;\n    // More then one means it is a contraction.\n    if ( textIndex.length > 1 ) return false;\n    // Outside intrinsic vocab means OOV again.\n    if ( textIndex[ 0 ] >= lexemeIntrinsicSize ) return false;\n    // If it is not a base form so point in checking same POS â basics of\n    // lemmatization. For example, `hiding` becomes `hid` on removal of `-ing`,\n    // which is not in base form (i.e. hid is the past tense of hide); so it should\n    // not take that as the lemma and instead try adding `-e`.\n    if ( property( textIndex, 'isBaseForm' ) === 0 ) return false;\n    // Finally if it is in base form then check for pos membership.\n    return isMemberPOS( textIndex[ 0 ], model.pos.hash[ pos ] );\n  }; // hasSamePOS()\n\n  // ## isOOV\n  /**\n   *\n   * Tests the input `text` for being an OOV.\n   *\n   * @param {text} text that needs to be test for OOV.\n   * @return {boolean} true if OOV otherwise false (in vocab).\n   * @private\n  */\n  var isOOV = function ( text ) {\n    var textIndex = lookup( text );\n    if ( !textIndex ) return true;\n    if ( textIndex.length > 1 ) return false;\n    if ( textIndex[ 0 ] >= lexemeIntrinsicSize ) return true;\n    return false;\n  }; // isOOV()\n\n  methods.add = add;\n  methods.lookup = lookup;\n  methods.value = value;\n  methods.property = property;\n  methods.normal = normal;\n  methods.nox = nox;\n  methods.posOf = posOf;\n  methods.valueOf = valueOf;\n  methods.currentSize = currentSize;\n  methods.intrinsicSize = intrinsicSize;\n  methods.isOOV = isOOV;\n  methods.isMemberPOS = isMemberPOS;\n  methods.hasSamePOS = hasSamePOS;\n  methods.mappedSpelling = mappedSpelling;\n\n  return methods;\n}; // cache()\n\nmodule.exports = cache;\n","//     wink-nlp\n//\n//     Copyright (C) GRAYPE Systems Private Limited\n//\n//     This file is part of âwink-nlpâ.\n//\n//     Permission is hereby granted, free of charge, to any\n//     person obtaining a copy of this software and\n//     associated documentation files (the \"Software\"), to\n//     deal in the Software without restriction, including\n//     without limitation the rights to use, copy, modify,\n//     merge, publish, distribute, sublicense, and/or sell\n//     copies of the Software, and to permit persons to\n//     whom the Software is furnished to do so, subject to\n//     the following conditions:\n//\n//     The above copyright notice and this permission notice\n//     shall be included in all copies or substantial\n//     portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\n//     ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\n//     TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n//     PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//     DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF\n//     CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n//     CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\n\n/* eslint-disable no-underscore-dangle */\n\n// Used in accessing the regex and its category from `rgxs`.\nconst RGX = 0;\nconst CAT = 1;\n// SPECIAL REGULAR EXPRESSIONS:\n// Regex to handle short forms or abbreviations.\nvar rgxShortFormDot = /^(?:(?:[A-Z])(?:\\.))+$/i;\nvar rgxShortForm = /^(?:(?:[A-Z])(?:\\.))+[a-z]?$/i;\n// Regex process hyphenated words.\nvar rgxHyphens = /[\\-\\â\\â]/gi;\nvar rgxPeriod = /[\\.]/gi;\nvar rgxNumber = /[0-9]/;\n\n// ### tokenizer\n/**\n *\n * Creates an instance of `tokenizer`.\n *\n * @param {object} categories token categories, as obtained via the language model.\n * @param {object} preserve rules for hyphenation preservation.\n * @return {function} for recursive tokenization.\n * @private\n*/\nvar tokenizer = function ( categories, preserve ) {\n  // Function to add tokens to the `doc()`.\n  var addToken;\n  var addTokenIfInCache;\n  // Function to test if lexeme exists via `doc()`.\n  var isLexeme;\n  // Preceding Spaces â special need for recursive tokenizer.\n  var ps = 0;\n\n  // ### pushHyphenatedToken\n  /**\n   *\n   * Pushes the incoming `tkn` after handling hyphens, if any:\n   * 1. Use it as-is if it is a valid lexeme or contains a number.\n   * 2. Use it as-is if does not contain hyphens.\n   * 3. Otherwise apply rules.\n   *\n   * @param {string} tkn to be processed as per rules hyphenation rules in `preserve`.\n   * @param {array} tokens into which the (split) `tkn` is pushed.\n   * @returns {void} nothing!\n   * @private\n  */\n  var pushHyphenatedToken = function ( tkn, tokens ) {\n    // Will contain pure alpha words, obtained by splitting on `rgxHyphens`.\n    var words;\n    // Will contain mathed hyphens.\n    var hyphens;\n    // Helper variables.\n    var i, k, last;\n\n    // If a token is a valid lexeme or contains one or more number, dont touch it.\n    if ( isLexeme( tkn) || rgxNumber.test( tkn ) ) {\n      tokens.push( [ tkn, categories.word ] );\n      return;\n    }\n\n    hyphens = tkn.match( rgxHyphens );\n    // If there are no hyphens in the word, dont touch it.\n    if ( hyphens === null ) {\n      tokens.push( [ tkn, categories.word ] );\n      return;\n    }\n\n    // Word is hyphenated, process it according to the rules specified in `preserve`.\n    words = tkn.split( rgxHyphens );\n    last = words.length - 1;\n    if ( preserve.prefix[ words[ 0 ] ] || preserve.suffix[ words[ last ] ] ) {\n      tokens.push( [ tkn, categories.word ] );\n      return;\n    }\n    k = 0;\n    for ( i = 0; i < words.length; i += 1 ) {\n      // Do not push any empty token!\n      if ( words[ i ] !== '' ) {\n        tokens.push( [ words[ i ], categories.word ] );\n      }\n\n      if ( k < hyphens.length ) {\n        tokens.push( [ hyphens[ k ], categories.punctuation ] );\n      }\n      k += 1;\n    }\n  }; // pushHyphenatedToken()\n\n  // ### pushWordToken\n  /**\n   *\n   * Pushes the incoming `tkn` after handling periods and hyphens present:\n   * 1. Use it as-is if it is a valid lexeme or a short form ending with a period.\n   * 2. Split on period and the successively assemble tokens using matches & splits.\n   * 3. Finally send each such assembled token down for handling hyphenated word.\n   *\n   * @param {string} tkn to be processed and pushed.\n   * @param {array} tokens into which the (split) `tkn` is pushed.\n   * @returns {void} nothing!\n   * @private\n  */\n  var pushWordToken = function ( tkn, tokens ) {\n    // Will contain words, obtained by splitting on `rgxPeriod`.\n    var words;\n    // Will contain matched periods.\n    var periods;\n    // Helper variables:<br/>\n    // Index variables\n    var i, k;\n    // Used in successively assembling a potential token from matches & words\n    // (i.e. splits), if word has periods.\n    var currBuild = '';\n    var nextBuild = '';\n\n\n    // If a token is a **valid lexeme**, or it is **short form ending with a\n    // period** (e.g. dot) then _dont touch it._\n    if ( isLexeme( tkn ) || rgxShortFormDot.test( tkn ) ) {\n      tokens.push( [ tkn, categories.word ] );\n      return;\n    }\n\n    // Start by matching with periods\n    periods = tkn.match( rgxPeriod );\n    // If there are no periods in the word, dont touch it.\n    if ( periods === null ) {\n      pushHyphenatedToken( tkn, tokens );\n      return;\n    }\n\n    // Word has periods, therefore process it:\n    words = tkn.split( rgxPeriod );\n    k = 0;\n\n    for ( i = 0; i < words.length; i += 1 ) {\n      // Build next potential token by joining the current build with the next word.\n      nextBuild = currBuild + words[ i ];\n      // If it is a valid possibility, then continue building it.\n      if ( rgxShortForm.test( nextBuild ) || ( isLexeme( nextBuild ) && nextBuild.length > 2 ) || ( currBuild === '' ) ) {\n        currBuild = nextBuild;\n      } else {\n        // Else send it down to handle hyphenated word.\n        pushHyphenatedToken( currBuild, tokens );\n        // Reset builds.\n        currBuild = words[ i ];\n        nextBuild = '';\n      }\n\n      if ( k < periods.length ) {\n        // In the same manner handle period sign.\n        nextBuild = currBuild + periods[ k ];\n        if ( rgxShortForm.test( nextBuild ) || ( isLexeme( nextBuild ) && nextBuild.length > 2 ) ) {\n          currBuild = nextBuild;\n        } else {\n          pushHyphenatedToken( currBuild, tokens );\n          tokens.push( [ periods[ k ], categories.punctuation ] );\n          currBuild = '';\n          nextBuild = '';\n        }\n      }\n      k += 1;\n    }\n    // Handle the last piece if applicable.\n    if ( currBuild !== '' ) pushHyphenatedToken( currBuild, tokens );\n  }; // pushWordToken()\n\n  // ### tokenizeTextUnit\n  /**\n   *\n   * Attempts to tokenize the input `text` using the `rgxSplit`. The tokenization\n   * is carried out by combining the regex matches and splits in the right sequence.\n   * The matches are the *real tokens*, whereas splits are text units that are\n   * tokenized in later rounds! The real tokens (i.e. matches) are pushed as\n   * `object` and splits as `string`.\n   *\n   * @param {string} text unit that is to be tokenized.\n   * @param {object} rgxSplit object containing the regex and it's category.\n   * @return {array} of tokens.\n   * @private\n  */\n  var tokenizeTextUnit = function ( text, rgxSplit ) {\n    // Regex matches go here; note each match is a token and has the same tag\n    // as of regex's category.\n    var matches = text.match( rgxSplit[ RGX ] );\n    // Balance is \"what needs to be tokenized\".\n    var balance = text.split( rgxSplit[ RGX ] );\n    // The result, in form of combination of tokens & matches, is captured here.\n    var tokens = [];\n    // The tag;\n    var tag = rgxSplit[ CAT ];\n    // Helper variables.\n    var i,\n        imax,\n        k,\n        t; // Temp token.\n        // tp; // Temp token with a period sign in end.\n\n    // console.log( matches, balance, text, tag, balance[ 1 ] ); // eslint-disable-line no-console\n    // A `null` value means it is equivalent to no matches i.e. an empty array.\n    matches = ( matches ) ? matches : [];\n    // Handle cases where the word is ending with period for **word category**.\n    // Iterate in [ m0 b1 m1 ... ] pattern as `b0` has no value here.\n    // *** COMMENTED out after `pushWordToken()`:\n    // k = 0;\n    // if ( tag === categories.word ) {\n    //   for ( i = 1, imax = balance.length; i < imax; i += 1 ) {\n    //     t = balance[ i ];\n    //     if ( k < matches.length && t[ 0 ] === '.' ) {\n    //       tp = matches[ k ] + '.';\n    //       if ( isLexeme( tp ) || rgxShortForm.test( tp ) ) {\n    //         matches[ k ] = tp;\n    //         balance[ i ] = t.slice( 1 );\n    //       }\n    //     }\n    //     k += 1;\n    //   }\n    // }\n\n    // console.log( matches, balance, text, tag, balance[ 1 ] ); // eslint-disable-line no-console\n    // Combine tokens & matches in the following pattern [ b0 m0 b1 m1 ... ]\n    k = 0;\n    for ( i = 0, imax = balance.length; i < imax; i += 1 ) {\n      t = balance[ i ];\n      t = t.trim();\n      if ( t ) tokens.push( t );\n      if ( k < matches.length ) {\n        if ( tag === categories.word ) {\n          // Handle special cases for words via:\n          pushWordToken( matches[ k ], tokens );\n        } else {\n          tokens.push( [ matches[ k ], tag ] );\n        }\n      }\n      k += 1;\n    }\n\n    return ( tokens );\n  }; // tokenizeTextUnit()\n\n  // ### tokenizeTextRecursively\n  /**\n   *\n   * Tokenizes the input text recursively using the array of `regexes` and then\n   * the `tokenizeTextUnit()` function. If (or whenever) the `regexes` becomes\n   * empty, it simply splits the text on non-word characters instead of using\n   * the `tokenizeTextUnit()` function.\n   *\n   * @param {string} text unit that is to be tokenized.\n   * @param {object} regexes object containing the regex and it's category.\n   * @return {undefined} nothing!\n   * @private\n  */\n  var tokenizeTextRecursively = function ( text, regexes ) {\n    var sentence = text.trim();\n    var tokens = [];\n    // Helpers â for loop variables & token category.\n    var i, imax;\n    var cat;\n\n    if ( !regexes.length ) {\n      // No regex left, this is the true **unk**.\n      // Becuase it is `UNK`, we can use `addToken` instead of attempting\n      // `addTokenIfInCache`.\n      addToken( text, categories.unk, ps );\n      ps = 0;\n      return;\n    }\n\n    var rgx = regexes[ 0 ];\n    tokens = tokenizeTextUnit( sentence, rgx );\n\n    for ( i = 0, imax = tokens.length; i < imax; i += 1 ) {\n      if ( typeof tokens[ i ] === 'string' ) {\n        // Strings become candidates for further tokenization.\n        tokenizeTextRecursively( tokens[ i ], regexes.slice( 1 ) );\n      } else {\n        // Use the passed value of preceding spaces only once!\n        // First try cache, otherwise make a direct addition. This ensures\n        // processing of expansions.\n        cat = addTokenIfInCache( tokens[ i ][ 0 ], ps );\n        if ( cat === categories.unk ) addToken( tokens[ i ][ 0 ], tokens[ i ][ 1 ], ps );\n        // Reset `ps` to **0** as there can never be spaces in a text passed to\n        // this tokenizer.\n        ps = 0;\n      }\n    }\n  }; // tokenizeTextRecursively()\n\n  // ### tokenize\n  /**\n   *\n   * Tokenizes the input `sentence` using the function `tokenizeTextRecursively()`.\n   * This acts as the fall back tokenizer to the **linear tokenizer**.\n   *\n   * @method Tokenizer#tokenize\n   * @param {RegExp} rgxs containg regexes for parsing.\n   * @param {string} text the input sentence.\n   * @param {number} precedingSpaces to the text\n   * @param {object} doc contains the document; used here for adding tokens.\n   * @return {void} nothing!\n   * `value` and its `tag` identifying the type of the token.\n   * @private\n  */\n  var tokenize = function ( rgxs, text, precedingSpaces, doc ) {\n    // Cache frequently used doc methods.\n    addToken = doc._addToken;\n    addTokenIfInCache = doc._addTokenIfInCache;\n    isLexeme = doc.isLexeme;\n    // Set `ps` to the passed value of preceding spaces, it will be reset to **0**\n    // after first use during recursion.\n    ps = precedingSpaces;\n    tokenizeTextRecursively( text, rgxs, precedingSpaces );\n  }; // tokenize()\n\n  return tokenize;\n};\n\nmodule.exports = tokenizer;\n","//     wink-nlp\n//\n//     Copyright (C) GRAYPE Systems Private Limited\n//\n//     This file is part of âwink-nlpâ.\n//\n//     Permission is hereby granted, free of charge, to any\n//     person obtaining a copy of this software and\n//     associated documentation files (the \"Software\"), to\n//     deal in the Software without restriction, including\n//     without limitation the rights to use, copy, modify,\n//     merge, publish, distribute, sublicense, and/or sell\n//     copies of the Software, and to permit persons to\n//     whom the Software is furnished to do so, subject to\n//     the following conditions:\n//\n//     The above copyright notice and this permission notice\n//     shall be included in all copies or substantial\n//     portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\n//     ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\n//     TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n//     PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//     DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF\n//     CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n//     CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\n\n/* eslint-disable no-console */\n/* eslint-disable no-underscore-dangle */\n\nvar recTokenizer = require( './recursive-tokenizer.js' );\n\n/**\n * Creates an instance of tokenizer.\n *\n * @param  {object}   trex        language specific regular expressions needed for\n *                                tokenization. This includes helper, linear and\n *                                recursive.\n * @param  {object}   categories  tokens categories and their map to numeric code.\n * @param  {object}   preserve    language specific suffixes and prefixes to be preserved.\n * @return {function}             that performs the tokenization based on the\n *                                above configuration.\n * @private\n */\nvar tokenizer = function ( trex, categories, preserve ) {\n  // Maximum number of preceding spaces allowed.\n  var maxPrecedingSpaces = 65535;\n  var processFunctions = [];\n  var rgxCatDetectors = trex.ltc;\n  var tokenizeRecursively = recTokenizer( categories, preserve );\n  // Initialize helper regexes.\n  var rgxAnyWithRP = trex.helpers.anyWithRP;\n  var rgxAnyWithLP = trex.helpers.anyWithLP;\n  var rgxLPanyRP = trex.helpers.LPanyRP;\n  var rgxSplitter = trex.helpers.splitter;\n\n  var detectTokenCategory = function ( token ) {\n    // console.log( token );\n    var cat;\n    for ( cat = 0; cat < rgxCatDetectors.length; cat += 1 ) {\n      // console.log( token, rgxCatDetectors[ cat ][ 0 ].test( token ),  rgxCatDetectors[ cat ][ 1 ] )\n      if ( rgxCatDetectors[ cat ][ 0 ].test( token ) ) return rgxCatDetectors[ cat ][ 1 ];\n    }\n    return categories.unk;\n  }; // detectTokenCategory()\n\n\n  var processUnk = function ( text, cat, precedingSpaces, doc ) {\n    // Match is captured here.\n    var match;\n    // Splitted non-punctuation portion's category.\n    var splitCat;\n\n    // Match with any thing followed by a **right** punctuation.\n    match = text.match( rgxAnyWithRP );\n    // Non-null indicates that there was a right punctuation in the end.\n    if ( match ) {\n      // Safely add the text prior to punkt if in cache.\n      splitCat = doc._addTokenIfInCache( match[ 1 ], precedingSpaces );\n      if ( splitCat === categories.unk ) {\n        // Try detecting token category before falling back to recursion.\n        splitCat = detectTokenCategory( match[ 1 ] );\n        if ( splitCat  === categories.unk ) {\n          // Still 'unk', handle it via recursive tokenizer.\n          tokenizeRecursively( trex.rtc, text, precedingSpaces, doc );\n        } else {\n          // Because it is a detected category use `processFunctions()`.\n          processFunctions[ splitCat ]( match[ 1 ], splitCat, precedingSpaces, doc );\n          doc._addToken( match[ 2 ], categories.punctuation, 0 );\n        }\n      } else {\n        // The split is a added via `addTokenIfInCache()`, simply add the balance.\n        doc._addToken( match[ 2 ], categories.punctuation, 0 );\n      }\n      // All done so,\n      return;\n    }\n    // Match with any thing followed by a **left** punctuation.\n    match = text.match( rgxAnyWithLP );\n    // Now non-null indicates that there was a left punctuation in the beginning.\n    if ( match ) {\n      // If match 2 is a valid lexeme, can safley add tokens. Notice insertion\n      // sequence has reversed compared to the previous if block.\n      if ( doc.isLexeme( match[ 2 ] ) ) {\n        doc._addToken( match[ 1 ], categories.punctuation, precedingSpaces );\n        doc._addTokenIfInCache( match[ 2 ], 0 );\n      } else {\n        // Try detecting token category before falling bac k to recursion.\n        splitCat = detectTokenCategory( match[ 2 ] );\n        if ( splitCat  === categories.unk ) {\n          // Still 'unk', handle it via recursive tokenizer.\n          tokenizeRecursively( trex.rtc, text, precedingSpaces, doc );\n        } else {\n          // Because it is a detected category use `processFunctions()`.\n          doc._addToken( match[ 1 ], categories.punctuation, precedingSpaces );\n          processFunctions[ splitCat ]( match[ 2 ], splitCat, 0, doc );\n        }\n      }\n      // All done so,\n      return;\n    }\n    // Punctuation on both sides!\n    match = text.match( rgxLPanyRP );\n    if ( match ) {\n      // If match 2 is a valid lexeme, can safley add tokens.\n      if ( doc.isLexeme( match[ 2 ] ) ) {\n        doc._addToken( match[ 1 ], categories.punctuation, precedingSpaces );\n        doc._addTokenIfInCache( match[ 2 ], 0 );\n        doc._addToken( match[ 3 ], categories.punctuation, 0 );\n      } else {\n        // Try detecting token category before falling bac k to recursion.\n        splitCat = detectTokenCategory( match[ 2 ] );\n        if ( splitCat  === categories.unk ) {\n          // Still 'unk', handle it via recursive tokenizer.\n          tokenizeRecursively( trex.rtc, text, precedingSpaces, doc );\n        } else {\n          // Because it is a detected category use `processFunctions()`.\n          doc._addToken( match[ 1 ], categories.punctuation, precedingSpaces );\n          processFunctions[ splitCat ]( match[ 2 ], splitCat, 0, doc );\n          doc._addToken( match[ 3 ], categories.punctuation, 0 );\n        }\n      }\n      // All done so,\n      return;\n    }\n\n    // Nothing worked, treat the whole thing as `unk` and fallback to recursive tokenizer.\n    tokenizeRecursively( trex.rtc, text, precedingSpaces, doc );\n  }; // processUnk()\n\n  // var processWord = function ( token, cat, precedingSpaces, doc ) {\n  //   doc._addToken( token, cat, precedingSpaces );\n  // }; // processWord()\n\n  var processWordRP = function ( token, cat, precedingSpaces, doc ) {\n    // Handle **special case**, `^[a-z]\\.$` will arrive here instead of `shortForm`!\n    var tl = token.length;\n    if ( tl > 2 ) {\n      doc._addToken( token.slice( 0, -1 ), categories.word, precedingSpaces );\n      doc._addToken( token.slice( -1 ), categories.punctuation, 0 );\n    } else if ( tl === 2 && token[ tl - 1 ] === '.' ) {\n        doc._addToken( token, categories.word, precedingSpaces );\n      } else {\n        doc._addToken( token.slice( 0, -1 ), categories.word, precedingSpaces );\n        doc._addToken( token.slice( -1 ), categories.punctuation, 0 );\n      }\n  }; // processWordRP()\n\n  var processDefault = function ( token, cat, precedingSpaces, doc ) {\n    doc._addToken( token, cat, precedingSpaces );\n  }; // processDefault()\n\n  var tokenize = function ( doc, text ) {\n    // Raw tokens, obtained by splitting them on spaces.\n    var rawTokens = [];\n    // Contains the number of spaces preceding a token.\n    var precedingSpaces = 0;\n    // Pointer to the `rawTokens`, whereas `pp` is the previous pointer!\n    var p;\n    // Token category as detected by the `detectTokenCategory()` function.\n    var cat;\n    // A temporary token!\n    var t;\n\n    rawTokens = text.split( rgxSplitter );\n\n    // Now process each raw token.\n    for ( p = 0; p < rawTokens.length; p += 1 ) {\n      t = rawTokens[ p ];\n      // Skip empty (`''`) token.\n      if ( !t ) continue; // eslint-disable-line no-continue\n      // Non-empty token:\n      if ( t[ 0 ] === ' ' ) {\n        // This indicates spaces: count them.\n        precedingSpaces = t.length;\n        // Cap precedingSpaces to a limit if it exceeds it.\n        if ( precedingSpaces > maxPrecedingSpaces ) precedingSpaces = maxPrecedingSpaces;\n      } else {\n        // A potential token: process it.\n        cat = doc._addTokenIfInCache( t, precedingSpaces );\n        if ( cat === categories.unk ) {\n          cat = detectTokenCategory( t );\n          processFunctions[ cat ]( t, cat, precedingSpaces, doc );\n        }\n        precedingSpaces = 0;\n      }\n    } // for\n  }; // tokenize()\n\n  // Main Code:\n  // Specific Processes.\n  processFunctions[ categories.unk ] = processUnk;\n  processFunctions[ categories.wordRP ] = processWordRP;\n\n  // Default process.\n  processFunctions[ categories.emoji ] = processDefault;\n  processFunctions[ categories.word ] = processDefault;\n  processFunctions[ categories.shortForm ] = processDefault;\n  processFunctions[ categories.number ] = processDefault;\n  processFunctions[ categories.url ] = processDefault;\n  processFunctions[ categories.email ] = processDefault;\n  processFunctions[ categories.mention ] = processDefault;\n  processFunctions[ categories.hashtag ] = processDefault;\n  processFunctions[ categories.emoticon ] = processDefault;\n  processFunctions[ categories.time ] = processDefault;\n  processFunctions[ categories.ordinal ] = processDefault;\n  processFunctions[ categories.currency ] = processDefault;\n  processFunctions[ categories.punctuation ] = processDefault;\n  processFunctions[ categories.symbol ] = processDefault;\n  processFunctions[ categories.tabCRLF ] = processDefault;\n  processFunctions[ categories.apos ] = processDefault;\n  processFunctions[ categories.alpha ] = processDefault;\n  processFunctions[ categories.decade ] = processDefault;\n\n  return tokenize;\n}; // tokenizer()\n\nmodule.exports = tokenizer;\n","//     wink-nlp\n//\n//     Copyright (C) GRAYPE Systems Private Limited\n//\n//     This file is part of âwink-nlpâ.\n//\n//     Permission is hereby granted, free of charge, to any\n//     person obtaining a copy of this software and\n//     associated documentation files (the \"Software\"), to\n//     deal in the Software without restriction, including\n//     without limitation the rights to use, copy, modify,\n//     merge, publish, distribute, sublicense, and/or sell\n//     copies of the Software, and to permit persons to\n//     whom the Software is furnished to do so, subject to\n//     the following conditions:\n//\n//     The above copyright notice and this permission notice\n//     shall be included in all copies or substantial\n//     portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\n//     ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\n//     TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n//     PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//     DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF\n//     CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n//     CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\n\n/* eslint-disable no-sync */\n\n\nvar makeRegexes = function ( config ) {\n  var rgx = [];\n  var imax = config.length;\n  var i;\n\n  for ( i = 0; i < imax; i += 1 ) {\n    rgx.push( [ ( new RegExp( config[ i ][ 0 ], config[ i ][ 1 ] ) ), config[ i ][ 2 ] ] );\n  }\n  return rgx;\n}; // makeRegexes()\n\nvar compileTRex =  function ( trex ) {\n  var rtc;\n  var ltc;\n  var helpers = Object.create( null );\n\n  try {\n    rtc = makeRegexes( trex.rtc );\n\n    ltc = makeRegexes( trex.ltc );\n\n    // Helper regexes.\n    for ( const h in trex.helpers ) { // eslint-disable-line guard-for-in\n      helpers[ h ] = new RegExp( trex.helpers[ h ][ 0 ], trex.helpers[ h ][ 1 ] );\n    }\n\n    // file = path.join( __dirname, 'languages', language, 'normalization-map.json' );\n    // nmap = JSON.parse( fs.readFileSync( file, 'utf8' ) );\n  } catch ( ex ) {\n    throw Error( 'wink-nlp: Invalid trex.\\n\\nDetails:\\n' + ex.message );\n  }\n  return  { rtc: rtc, ltc: ltc, helpers: helpers };\n}; // readLangConfig()\n\nmodule.exports = compileTRex;\n","//     wink-nlp\n//\n//     Copyright (C) GRAYPE Systems Private Limited\n//\n//     This file is part of âwink-nlpâ.\n//\n//     Permission is hereby granted, free of charge, to any\n//     person obtaining a copy of this software and\n//     associated documentation files (the \"Software\"), to\n//     deal in the Software without restriction, including\n//     without limitation the rights to use, copy, modify,\n//     merge, publish, distribute, sublicense, and/or sell\n//     copies of the Software, and to permit persons to\n//     whom the Software is furnished to do so, subject to\n//     the following conditions:\n//\n//     The above copyright notice and this permission notice\n//     shall be included in all copies or substantial\n//     portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\n//     ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\n//     TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n//     PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//     DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF\n//     CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n//     CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\n\nvar constants = require( './constants.js' );\n// Size of a single token.\nvar tkSize = constants.tkSize;\n// Bits reserved for `lemma`.\nvar bits4lemma = constants.bits4lemma;\n// Mask for extracting pos\nvar posMask = constants.posMask;\n\nvar mappers = Object.create( null );\n\n// ## mapRawTokens2UIDn\n/**\n * Maps the raw tokens to an array of uid of normal of tokens.\n * @private\n *\n * @param {object} rdd The raw document data-structure.\n * @returns {array} conatining the uid of normals.\n * @private\n*/\nvar mapRawTokens2UIdOfNormal = function ( rdd ) {\n  // Extract tokens & cache.\n  var tokens = rdd.tokens;\n  var cache = rdd.cache;\n  // Will contain only the hash of normal of tokenized lexemes.\n  var mappedTokens = new Array( rdd.numOfTokens );\n  var i, k;\n  for ( i = 0; i < tokens.length; i += tkSize ) {\n    k = i + 1;\n    mappedTokens[ i / tkSize ] = ( tokens[ k ] > 65535 ) ?\n                              // Handle contraction's expansion.\n                              cache.nox( tokens[ k ] ) :\n                              // Handle all other words.\n                              cache.normal( tokens[ i ] );\n  } // for ( i = 0; i < tokens.length...\n\n  return mappedTokens;\n}; // mapRawTokens2UIdOfNormal()\n\n// ## mapRawTokens2UIDn\n/**\n * Maps the raw tokens to an array of uid of value of tokens.\n * @private\n *\n * @param {object} rdd The raw document data-structure.\n * @returns {array} conatining the uid of values.\n * @private\n*/\nvar mapRawTokens2UIdOfValue = function ( rdd ) {\n  // Extract tokens.\n  var tokens = rdd.tokens;\n  var cache = rdd.cache;\n  // Will contain only the hash of value of tokenized lexemes.\n  var mappedTokens = new Array( rdd.numOfTokens );\n  var i;\n  for ( i = 0; i < tokens.length; i += tkSize ) {\n    // Use mapped spelling â this ensure correct pos tagging & lemmatization etc.\n    // as mapped spelling is the gold spelling.\n    mappedTokens[ i / tkSize ] = cache.mappedSpelling( tokens[ i ] );\n  } // for ( i = 0; i < tokens.length...\n  return mappedTokens;\n}; // mapRawTokens2UIdOfValue()\n\n// ## mapRawTokens2UIdOfPOS\n/**\n * Extracts the default or most likely pos tag for every token.\n * @private\n *\n * @param {object} rdd the raw document data.\n * @returns {array} conatining the default pos tags.\n * @private\n*/\nvar mapRawTokens2UIdOfDefaultPOS = function ( rdd ) {\n  // Extract tokens & cache.\n  var tokens = rdd.tokens;\n  var cache = rdd.cache;\n  var posTags = new Array( rdd.numOfTokens );\n  let pk = 0;\n  for ( let i = 0; i < tokens.length; i += tkSize, pk += 1 ) {\n    posTags[ pk ] = ( tokens[ ( i ) + 2 ] === 0 ) ?\n                      // Make UNK to NOUN to handle the remote possibility of ML POS being undefined!\n                      // Also use mapped spelling â this ensure correct pos tagging & lemmatization etc.\n                      // as mapped spelling is the gold spelling.\n                      ( cache.posOf( cache.mappedSpelling( tokens[ i ] ) ) || 8 ) :\n                      ( ( tokens[ ( i ) + 2 ] & posMask ) >>> bits4lemma ); // eslint-disable-line no-bitwise\n  }\n  return posTags;\n}; // mapRawTokens2UIdOfDefaultPOS()\n\nmappers.mapRawTokens2UIdOfNormal = mapRawTokens2UIdOfNormal;\nmappers.mapRawTokens2UIdOfValue = mapRawTokens2UIdOfValue;\nmappers.mapRawTokens2UIdOfDefaultPOS = mapRawTokens2UIdOfDefaultPOS;\n\nmodule.exports = mappers;\n","//     wink-nlp\n//\n//     Copyright (C) GRAYPE Systems Private Limited\n//\n//     This file is part of âwink-nlpâ.\n//\n//     Permission is hereby granted, free of charge, to any\n//     person obtaining a copy of this software and\n//     associated documentation files (the \"Software\"), to\n//     deal in the Software without restriction, including\n//     without limitation the rights to use, copy, modify,\n//     merge, publish, distribute, sublicense, and/or sell\n//     copies of the Software, and to permit persons to\n//     whom the Software is furnished to do so, subject to\n//     the following conditions:\n//\n//     The above copyright notice and this permission notice\n//     shall be included in all copies or substantial\n//     portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\n//     ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\n//     TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n//     PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//     DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF\n//     CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n//     CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\n\nvar regex = /\\[.*?\\]/g;\n\n// ## extractEnclosedText\n/**\n *\n * Extracts the text enclosed in square brackets.\n *\n * @param {string} text from which enclosed text is extracted.\n * @returns {string[]} texts enclosed within square brackets.\n * @private\n*/\nvar extractEnclosedText = function ( text ) {\n  var // Extracted elements are captured here.\n      elements = [],\n      // Extract matches with quotes\n      matches = text.match( regex );\n  if ( !matches || ( matches.length === 0 ) ) return null;\n  // Collect elements after removing the quotes.\n  for ( var k = 0, kmax = matches.length; k < kmax; k += 1 ) {\n    elements.push( matches[ k ].substr( 1, matches[ k ].length - 2 ) );\n  }\n  return ( elements );\n}; // extractEnclosedText();\n\n// ## productReducer\n/**\n *\n * Callback function used by `reduce` inside the `product()` function.\n * Follows the standard guidelines of `reduce()` callback function.\n *\n * @param {array} prev refer to JS reduce function.\n * @param {array} curr refer to JS reduce function.\n * @returns {array} reduced value.\n * @private\n*/\nvar productReducer = function ( prev, curr ) {\n  var c,\n      cmax = curr.length;\n  var p,\n      pmax = prev.length;\n  var result = [];\n\n  for ( p = 0; p < pmax; p += 1 ) {\n    for ( c = 0; c < cmax; c += 1 ) {\n      result.push( prev[ p ].concat( curr[ c ] ) );\n    }\n  }\n  return ( result );\n}; // productReducer()\n\n/**\n *\n * Finds the Cartesian Product of arrays present inside the array `a`. Therefore\n * the array `a` must be an array of 1-dimensional arrays. For example,\n * `product( [ [ 9, 8 ], [ 1, 2 ] ] )` will produce\n * `[ [ 9, 1 ], [ 9, 2 ], [ 8, 1 ], [ 8, 2 ] ]`.\n *\n * @param {array} a whose cartesian product is computed.\n * @returns {array} reduced value.\n * @private\n*/\nvar product = function ( a ) {\n  return (\n    a.reduce( productReducer, [ [] ] )\n  );\n}; // product()\n\n\n// ## composeCorpus\n/**\n *\n * Generates all possible patterns from the input argument string.\n * The string s must follow a special syntax as illustrated in the\n * example below:<br/>\n * `'[I] [am having|have] [a] [problem|question]'`<br/>\n *\n * Each phrase must be quoted between `[ ]` and each possible option of phrases\n * (if any) must be separated by a `|` character. The patterns are composed by\n * computing the cartesian product of all the phrases.\n *\n * If a single patterns expands to a large size then it issues console\n * warning/error at 512/65536 level.\n *\n * @param {string} str the input string.\n * @return {string[]} of all possible patterns.\n * @private\n*/\nvar composePatterns = function ( str ) {\n  if ( !str || ( typeof str !== 'string' ) ) return [];\n\n  const LIMIT1 = 512;\n  const LIMIT2 = 65536;\n  var quotedTextElems = extractEnclosedText( str );\n  var patterns = [];\n  var finalPatterns = [];\n\n  if ( !quotedTextElems ) return [ [ str ] ];\n  quotedTextElems.forEach( function ( e ) {\n    patterns.push( e.split( '|' ) );\n  } );\n\n  // Compute the size of the array that will be produced as a result of processing\n  // the pattern.\n  const size = patterns.reduce( ( ( prev, curr ) => prev * curr.length ), 1 );\n\n  // Issue warning/error if the size is prohibitively large from the end-user\n  // prespective. Note: while winkNLP can handle even larger sizes, it can\n  // still break down in the event of explosion!\n  if ( size > LIMIT1 && size < LIMIT2 ) {\n    console.warn( 'winkNLP: complex pattern detected, consider simplifying it!' );\n  } else if ( size > LIMIT2 ) console.error(\n                              'winkNLP: very complex pattern detected, please review and simplify.\\n' +\n                              '         === It may slow down further execution! ===\\n\\n'\n                             );\n\n  product( patterns ).forEach( function ( e ) {\n    finalPatterns.push( e.join( ' ' ).trim().split( /\\s+/ ) );\n  } );\n  return ( finalPatterns );\n}; // composePatterns()\n\nmodule.exports = composePatterns;\n","//     wink-nlp\n//\n//     Copyright (C) GRAYPE Systems Private Limited\n//\n//     This file is part of âwink-nlpâ.\n//\n//     Permission is hereby granted, free of charge, to any\n//     person obtaining a copy of this software and\n//     associated documentation files (the \"Software\"), to\n//     deal in the Software without restriction, including\n//     without limitation the rights to use, copy, modify,\n//     merge, publish, distribute, sublicense, and/or sell\n//     copies of the Software, and to permit persons to\n//     whom the Software is furnished to do so, subject to\n//     the following conditions:\n//\n//     The above copyright notice and this permission notice\n//     shall be included in all copies or substantial\n//     portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\n//     ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\n//     TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n//     PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//     DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF\n//     CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n//     CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\n\n// ## identifyMarkedArea\n/**\n *\n * Identifies the area to be marked within the detected entitity's span, which is\n * extracted as the value.\n *\n * @param {number[]} mark contains the target area to be extracted from within\n *                        the entitity's span, defined as `[ firstIndex, lastIndex ]`.\n * @param {number} length of the entity's span.\n * @return {number[]}     array containing the modifiers for the orginal span.\n * @private\n*/\nconst identifyMarkedArea = function ( mark, length ) {\n  // Length Minus 1.\n  const lm1 = length - 1;\n  let [ firstIndex, lastIndex ] = mark;\n\n  if ( firstIndex < 0 ) firstIndex += length;\n  firstIndex = Math.max( firstIndex, 0 );\n  if ( firstIndex > lm1 ) firstIndex = 0;\n\n  if ( lastIndex < 0 ) lastIndex += length;\n  lastIndex = Math.min( lastIndex, lm1 );\n  if ( lastIndex < firstIndex ) lastIndex = lm1;\n\n  // The `lastIndex` manoeuvre is required to keep identical approach\n  // being followed in `learnSinglePattern()` of automaton.js, where\n  // the `firstIndex` **was** being added and the `lastIndex` **was** being\n  // subtracted from the span of entity.\n  lastIndex = length - lastIndex - 1;\n  return [ firstIndex, lastIndex ];\n}; // identifyMarkedArea()\n\nmodule.exports = identifyMarkedArea;\n","//     wink-nlp\n//\n//     Copyright (C) GRAYPE Systems Private Limited\n//\n//     This file is part of âwink-nlpâ.\n//\n//     Permission is hereby granted, free of charge, to any\n//     person obtaining a copy of this software and\n//     associated documentation files (the \"Software\"), to\n//     deal in the Software without restriction, including\n//     without limitation the rights to use, copy, modify,\n//     merge, publish, distribute, sublicense, and/or sell\n//     copies of the Software, and to permit persons to\n//     whom the Software is furnished to do so, subject to\n//     the following conditions:\n//\n//     The above copyright notice and this permission notice\n//     shall be included in all copies or substantial\n//     portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\n//     ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\n//     TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n//     PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//     DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF\n//     CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n//     CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\n\n/* eslint-disable no-console */\n/* eslint-disable guard-for-in */\nconst composePatterns = require( './compose-patterns.js' );\nconst identifyMarkedArea = require( './identify-marked-area.js' );\n\nconst eosTokenN = 2070000;\nconst eosTokenX = '$%^EoS^%$';\nconst otherwiseN = 2070003;\nconst otherwiseX = ' otherwise';\n\nvar simpleFSM = function ( cache, token2Ignore ) {\n  // Returned!\n  var methods = Object.create( null );\n  // Holds FSM in the following structure:<br/>\n  // curr state â> event â> next state <br/>\n  // One of the event is `otherwise`, whose next state defines the default state.\n  var fsm = Object.create( null );\n  // The root or the beginning state of the `fsm`.\n  const root = 0;\n  // Tracks the last used state. Whenever a new state is needed, its value is\n  // incremented and returned. See `getNextState()`.\n  var lastUsedState =  0;\n  // The terminal states i.e. the detected patterns: maps state to name.\n  var terminalStates = Object.create( null );\n  // The terminal states, where part of pattern has been marked out.\n  var markedStates = Object.create( null );\n  // Add-ons value is stored here.\n  var customPropertyAtStates = Object.create( null );\n  // Use to substitute tokens by patterns in a multi-pass scenario.\n  var substitutions;\n  // On pattern detection function.\n  var onPatternDetectionFn;\n  // By default always ignore the new line character, else use the value supplied\n  // by `token2Ignore`; this will usually be the OOV lexeme, i.e. `$%^oov^%$`.\n  const toBeIgnoredToken =  ( token2Ignore === undefined ) ? '\\n' : token2Ignore;\n  // The `cache` is `undefined`, when things have to work on token text â for\n  // learning & recognition both. For native case of learning (i.e. generation),\n  // it can be `null` or real value; and native mode recognition will always\n  // need real value of the `cache`.\n  // Setup `keyLF/eosToken` to use during entity detection on the basis of `cache`\n  // value â It is critical for model generation.\n  const keyLF = ( cache === undefined || cache === null ) ? toBeIgnoredToken : cache.lookup( toBeIgnoredToken )[ 0 ];\n  const eosToken = ( cache === undefined || cache === null ) ? eosTokenX : eosTokenN;\n  // The `otherwise` event; including a space to ensure that such an input can\n  // never arrive from the token stream. Later on it will be changed to numeric\n  // value > `0xFFFFF` i.e. the limit of vocabulary.\n  const otherwise = ( cache === undefined ) ? otherwiseX : otherwiseN;\n\n  // ## getNextState\n  /**\n   *\n   * Returns the next state to be assigned i.e. the next unused state or\n   * a state corresponding to target, if defined.\n   *\n   * @param {number} index of current token.\n   * @param {number} last index of last token.\n   * @param {number} target state of the pattern being processed; could be\n   * `undefined` if it is being encountered for the first time.\n   * @returns {number} next state that should be assigned for the current event.\n   * @private\n  */\n  var getNextState = function ( index, last, target ) {\n    // Check its invocation in the of fsm.\n    if ( index === last && target ) return target;\n    // Compute next unused state & return. Note this now becomes the last\n    // used state!\n    lastUsedState += 1;\n    return lastUsedState;\n  }; // getNextState()\n\n  // ## learnSinglePattern\n  /**\n   *\n   * Learns a single pattern.\n   *\n   * @param {string} name of the pattern to be learned.\n   * @param {array} pattern to be learned.\n   * @param {array} mark `[ start, end ]`.\n   * @param {any} customProperty contains definable value(s).\n   * @returns {undefined} Nothing!\n   * @private\n  */\n  var learnSinglePattern = function ( name, pattern, mark, customProperty ) {\n    const length = pattern.length;\n    // Last element.\n    const last = length - 1;\n    // Target state for this pattern, would be `undefined` if this pattern type is\n    // enountered for the first time (`undefined` disables collapse of states).\n    const target = undefined;\n    // Tracks the `state` as the FSM builds up, specially useful if there are\n    // machines with shared path i.e. common `(state, events)` pairs.\n    let state = root;\n    // Assigned for `otherwise` events.\n    let goBackTo = root;\n    // Temp for event & next state.\n    let ev, nextState;\n\n    // Iterate through the pattern's tokens, while discovering any existing\n    // machine that can share path.\n    for ( let k = 0; k < length; k += 1 ) {\n      ev = pattern[ k ];\n      // Create new state & intialize, if required.\n      if ( fsm[ state ] === undefined ) {\n        fsm[ state ] = Object.create( null );\n        fsm[ state ][ otherwise ] = goBackTo;\n      }\n      // Check for machines that may share path.\n      if ( fsm[ state ][ ev ] === undefined ) {\n        // None found, create new state transition by assigning the next state for\n        // the current event â `ev`.\n        nextState = getNextState( k, last, target );\n        fsm[ state ][ ev ] = nextState;\n        // Always compute state transition from the perspective of discovering\n        // shared path: here the `fsm[ state ][ ev ]` has been just assigned\n        // `nextState`, therefore `state` needs to transition to this state only.\n        state = nextState;\n      } else if ( terminalStates[ fsm[ state ][ ev ] ] ) {\n          // Case when shared path is found and the next state on the path is a\n          // terminal state.\n          if ( fsm[ state ][ otherwise ] === root ) fsm[ state ][ otherwise ] = goBackTo;\n          goBackTo = fsm[ state ][ ev ];\n          nextState = getNextState( k, last, target );\n          fsm[ state ][ ev ] = nextState;\n          // Compute state transition; again like earlier case, it would be `nextState`.\n          state = nextState;\n        } else if ( k === last ) {\n            // Case when shared path is found and the next state on the path is NOT\n            // a terminal state AND current token is the LAST one.\n            nextState = getNextState( k, last, target );\n            fsm[ fsm[ state ][ ev ] ][ otherwise ] = nextState;\n            state = nextState;\n          } else {\n            // Case when shared path is found and the next state on the path is NOT\n            // a terminal state AND current token is NOT the LAST one.<br/>\n            // Simply compute state transition, no other work to be done!\n            state = fsm[ state ][ ev ];\n          }\n    }\n    terminalStates[ state ] = name;\n\n    if ( mark ) {\n      // Update last element of `mark` to simplifies computations during fsm\n      // execution. Update must happen as a deep copy & not directly!\n      markedStates[ state ] = identifyMarkedArea( mark, length );\n    }\n\n    if ( customProperty !== undefined ) {\n      customPropertyAtStates[ state ] = customProperty;\n    }\n  }; // learnSinglePattern()\n\n  // ## learn\n  /**\n   *\n   * Learns the patterns that must be detected via recognize() API calls.\n   *\n   * @param {Object[]} patterns to be learned.\n   *\n   * @param {string} patterns[].name of the pattern.\n   * @param {string} patterns[].structure of the pattern.\n   * @returns {number} of uniquely named patterns.\n   * `[ pattern-id, start-token, end-token ]` format.\n   * @private\n  */\n  var learn = function ( patterns ) {\n    // Temp for counting unique.\n    var obj = Object.create( null );\n    // Composed Patterns\n    var cp = [];\n    for ( let i = 0; i < patterns.length; i += 1 ) {\n      const pi = patterns[ i ];\n      if ( typeof pi.pattern === 'string' ) {\n        const all = composePatterns( pi.pattern );\n        for ( let j = 0; j < all.length; j += 1 )\n          cp.push( { name: pi.name, pattern: all[ j ], mark: pi.mark, customProperty: pi.customProperty } );\n      } else cp.push( { name: pi.name, pattern: pi.pattern, mark: pi.mark, customProperty: pi.customProperty } );\n    }\n    // Sort to get the longest pattern on the top.\n    cp.sort( ( a, b ) => ( b.pattern.length - a.pattern.length ) );\n    // All set, now learn using composed patterns â `cp`!\n    for ( let i = 0; i < cp.length; i += 1 ) {\n      learnSinglePattern( cp[ i ].name, cp[ i ].pattern, cp[ i ].mark, cp[ i ].customProperty );\n    }\n    // Return number of uniquely named patterns.\n    for ( const ts in terminalStates ) obj[ terminalStates[ ts ] ] = true;\n    return ( ( Object.keys( obj ) ).length );\n  }; // learn()\n\n  // ## setOnPatternDetectionFn\n  /**\n   *\n   * Defines the function that is called on every detected pattern, provided\n   * the detected pattern had an `customProperty` property defined.\n   * @param {function} f to be called with `match` & `customProperty` value as parameters.\n   * @returns {boolean} `true` if it was a success otherwise `false`.\n   * @private\n  */\n  var setOnPatternDetectionFn = function ( f ) {\n    if ( typeof f === 'function' ) {\n      onPatternDetectionFn = f;\n      return true;\n    }\n    return false;\n  }; // setOnPatternDetectionFn()\n\n  // ## pushMatch2Patterns\n  /**\n   *\n   * Pushes a `match`ed pattern details into the `patterns` array after handling\n   * marking and calling the on pattern detection function, if required. Before\n   * pushing a `match` to patterns, the state (numeric) at `match[ 2 ]` is mapped\n   * to its name using `terminalStates`; remember the `state` passed here is\n   * always the terminal state. Passing state in match ensures that respective\n   * `mark` and `customProperty` are handled differently if they have different values in\n   * a state-machine rows, even though the `names` are identical.\n   *\n   * @param {array} patterns where the `match` is pushed.\n   * @param {array} match pushed in to the `patterns`. The `match` conntains\n   * 3-entries viz. 0âstate, 1 & 2âstart & end indexes of `tokens`.\n   * @returns {undefined} Nothing.\n   * @private\n  */\n  var pushMatch2Patterns = function ( patterns, match ) {\n    // Extract the state at match[ 0 ].\n    var m0 = match[ 2 ];\n    // Pattern name `'0'` â simply ignore it!\n    if ( terminalStates[ m0 ] === '0' ) return;\n    // Not to be ignored â process it.\n    var mark = markedStates[ m0 ];\n    var customProperty = customPropertyAtStates[ m0 ];\n    if ( mark ) {\n      match[ 0 ] += mark[ 0 ];\n      match[ 1 ] -= mark[ 1 ];\n    }\n\n    // Removed `customProperty !== undefined &&` check while coding pos experiment\n    if ( onPatternDetectionFn )\n      onPatternDetectionFn( match, customProperty );\n\n    match[ 2 ] = terminalStates[ m0 ];\n\n    patterns.push( match );\n  }; // pushPattern()\n\n  // ## setPatternSwap\n  /**\n   *\n   * Sets up the patterns to be used for token substitution/swap in the\n   * `recognize()` api.\n   *\n   * @param {array[]} patterns to be used for substitutions in `recognize()`.\n   * @returns {undefined} Nothing.\n   * @private\n  */\n  var setPatternSwap = function ( patterns ) {\n    if ( !patterns || !Array.isArray( patterns ) ) {\n      substitutions = undefined;\n      return;\n    }\n    // Old `substitutions` are re-initialized.\n    substitutions = Object.create( null );\n    // Sort patterns by the start of pattern index.\n    patterns.sort( ( a, b ) => ( a[ 0 ] > b[ 0 ] ) );\n    // Index it by start of pattern.\n    patterns.forEach( ( e ) => ( substitutions[ e[ 0 ] ] = [ e[ 1 ], e[ 2 ] ] ) );\n  }; // setPatternSwap()\n\n  // ## recognize\n  /**\n   *\n   * Recognizes patterns present in the input tokens in a greedy manner.\n   *\n   * @param {array} tokens in which the patterns need to be recognized.\n   * @param {function} [transformToken] an optional function that is called before\n   * processing every token.\n   * @param {*} [param] that has to be passed as the last param to `transformToken()`\n   * function.\n   * @returns {array[]} where each element follows\n   * `[ pattern-id, start-token, end-token ]` format.\n   * @private\n  */\n  var recognize = function ( tokens, transformToken, param ) {\n    // Length of the `tokens.`\n    const length = tokens.length;\n    // Check if `transformToken` is a valid function.\n    var transformTokenFn = ( typeof transformToken === 'function' ) ? transformToken : null;\n    // Detected patterns are captured here. Each element has the following format: <br/>\n    // `[ pattern-id, start-token, end-token ]`\n    var patterns = [];\n    // We don't need a separate state machines unlike `recognize()`, as the\n    // following set of variables together act like a singleton machine.\n    var first = 0;\n    var state = root;\n    // Next State.\n    var ns = root;\n    // Temp. for a single pattern.\n    var p = null;\n    // Last non-root otherwise state & index\n    var lastOtherwiseIndex;\n    var lastOtherwiseState;\n    // Temp. for a token.\n    var t;\n    // Used to increment `j` and computing span of pattern correctly, may become\n    // > 1 if an earlier detected pattern is longer that 1-token.\n    var delta = 1;\n\n    for ( let i = 0; i <= length; i += 1 ) {\n      // **Attempt greedy lookup**:<br/>\n      // Keep digging until next state becomes `root` or a terminal state is\n      // encountered. Upon failure after a partial match, roll back is required\n      // so that the extra consumed tokens can be explored by machine.\n      for ( let j = i; j <= length; j += delta ) {\n        // Extract current token.\n        t = ( j === length ) ?  eosToken : tokens[ j ];\n\n        // Skip the newline character; TODO: will replace by the hash value!\n        // Use direct hash for the time being later, it must be obtained via cache\n        if ( t === keyLF ) continue; // eslint-disable-line no-continue\n\n        // Perform replacements using earlier detected patterns.\n        if ( substitutions && substitutions[ j ] ) {\n          t = substitutions[ j ][ 1 ];\n          delta = substitutions[ j ][ 0 ] - j + 1;\n        } else delta = 1;\n\n        // Apply token transformation function, if defined. Must not be called\n        // for the `eosToken`.\n        if ( transformTokenFn && ( j < length ) ) t = transformTokenFn( t, cache, param, j );\n\n        // Find next state on the basis of current `state` and current token â `t`.\n        ns = fsm[ state ][ t ] || root;\n        // Detect the state transition to capture `first` token of a potential upcoming\n        // pattern. If state is `root` and the next state is `non-root` indicates\n        // that we have just starting chasing for a new pattern.\n        if ( !state && ns ) first = j;\n\n        if ( terminalStates[ ns ] ) {\n          // Terminal state encountered, save this pattern. Update span using `delta`.\n          p = [ first, j + delta - 1, ns ];\n          pushMatch2Patterns( patterns, p );\n          // Set index to `j`, so that iterations can commence from `j + 1` as\n          // for-loop increments the index variable at the end of loop!\n          i = j;\n          // Ensures that the inner loop terminates!\n          j = length + 100;\n          // Pattern has been discovered, so next state must be set to `root`.\n          ns = root;\n          // Same is true for the last saved otherwise state.\n          lastOtherwiseState = root;\n        } else if ( ns === root ) {\n          // Not a terminal state but the next state has hit the `root`.\n          if ( lastOtherwiseState ) {\n            // But we have a `non-root` last saved otherwise state; this means\n            // we must save this pattern.\n            p = [ first, lastOtherwiseIndex, lastOtherwiseState ];\n            pushMatch2Patterns( patterns, p );\n            // Set index to the index corresponding to the above last saved otherwise\n            // state.\n            i = lastOtherwiseIndex;\n            // Ensure that the inner loop terminates;\n            j = length + 100;\n            // Pattern has been discovered, so next state must be set to `root`.\n            ns = root;\n            // Same is true for the last saved otherwise state.\n            lastOtherwiseState = root;\n          } else {\n            // The last saved otherwise state is pointing to `root`: terminate\n            // the inner loop without updating the index variable â this ensures\n            // complete roll back.\n            j = length + 100;\n          }\n        }\n        // Update the current state.\n        state = ns;\n        // Save (last) non-root otherwise state & index, if any.\n        if ( fsm[ state ][ otherwise ] ) {\n          // Update span using `delta`.\n          lastOtherwiseIndex = j + delta - 1;\n          lastOtherwiseState = fsm[ state ][ otherwise ];\n        }\n      }\n    }\n\n    return patterns;\n  }; // recognize()\n\n  // ## exportJSON\n  /**\n   * Exports the learning as a JSON, which may be saved as a text file for\n   * later use via `importJSON()`.\n   *\n   * @return {string} Learning in JSON format.\n   * @private\n  */\n  var exportJSON = function () {\n    return JSON.stringify(\n      [ 100, lastUsedState, fsm, terminalStates, markedStates, customPropertyAtStates ]\n    );\n  }; // exportJSON()\n\n  // ## emptyModelJSON\n  /**\n   * Exports the an empty model's JSON. Useful in model generation.\n   *\n   * @return {string} Learning in JSON format.\n   * @private\n  */\n  var emptyModelJSON = function () {\n    // Empty machine!\n    const m0 = Object.create( null );\n    m0[ 0 ] = Object.create( null );\n    return JSON.stringify(\n      [ 100,\n        0,                      // `lastUsedState`.\n        m0,                     // `fsm`,\n        Object.create( null ),  // `terminalStates`,\n        Object.create( null ),  // `markedStates`,\n        Object.create( null ),  // `customPropertyAtStates`\n      ]\n    );\n  }; // emptyModelJSON()\n\n  // ## importJSON\n  /**\n   * Imports an existing JSON learning for recognition.\n   *\n   * @param {JSON} json containing learnings in as exported by `exportJSON()`.\n   * @return {void} Nothing!\n   * @throws Error if `json` is invalid.\n   * @private\n  */\n  var importJSON = function ( json ) {\n    var model =  JSON.parse( json );\n    lastUsedState = model[ 1 ];\n    fsm = model[ 2 ];\n    terminalStates = model[ 3 ];\n    markedStates = model[ 4 ];\n    customPropertyAtStates = model[ 5 ];\n  }; // importJSON()\n\n  // Prints the model in terms of the state machine & terminal states.\n  var printModel = function () {\n    console.log( 'State Machine:' );\n    console.log( JSON.stringify( fsm, null, 2 ) );\n    console.log();\n    console.log( 'Terminal States:' );\n    console.log( JSON.stringify( terminalStates, null, 2 ) );\n    console.log();\n    console.log( 'Marked States:' );\n    console.log( JSON.stringify( markedStates, null, 2 ) );\n    console.log();\n    console.log( 'customProperty States:' );\n    console.log( JSON.stringify( customPropertyAtStates, null, 2 ) );\n  }; // printModel()\n\n\n  methods.learn = learn;\n  methods.recognize = recognize;\n  methods.setPatternSwap = setPatternSwap;\n  methods.setOnPatternDetectionFn = setOnPatternDetectionFn;\n  methods.exportJSON = exportJSON;\n  methods.importJSON = importJSON;\n  methods.emptyModelJSON = emptyModelJSON;\n\n  methods.printModel = printModel;\n\n  // This a dummy statement to ensure 100% coverage; because feature of\n  // collapsing shared states into single one was **disabled** due to `mark`.\n  getNextState( 0, 0, 99 );\n  return methods;\n}; // fsm()\n\nmodule.exports = simpleFSM;\n","//     wink-nlp\n//\n//     Copyright (C) GRAYPE Systems Private Limited\n//\n//     This file is part of âwink-nlpâ.\n//\n//     Permission is hereby granted, free of charge, to any\n//     person obtaining a copy of this software and\n//     associated documentation files (the \"Software\"), to\n//     deal in the Software without restriction, including\n//     without limitation the rights to use, copy, modify,\n//     merge, publish, distribute, sublicense, and/or sell\n//     copies of the Software, and to permit persons to\n//     whom the Software is furnished to do so, subject to\n//     the following conditions:\n//\n//     The above copyright notice and this permission notice\n//     shall be included in all copies or substantial\n//     portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\n//     ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\n//     TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n//     PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//     DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF\n//     CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n//     CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\n\nvar DocDataWrapper = require( './dd-wrapper.js' );\nvar Automata = require( './automaton.js' );\nvar mappers = require( './tokens-mappers.js' );\nvar mapRawTokens2UIdOfValue = mappers.mapRawTokens2UIdOfValue;\nvar mapRawTokens2UIdOfNormal = mappers.mapRawTokens2UIdOfNormal;\n\nvar cerAutomata = Automata(); // eslint-disable-line new-cap\n\nvar rgxOr = /^\\[((?:[^| ]+\\|)+?|(?:\\|[^| ]+)+?|(?:[^| ]+\\|[^| ]+)+?|(?:[^| ]+))\\]$/;\nvar rgxPipe = /\\|/g;\n\n// ## mergeSplitsAndMatches\n/**\n * Helper function to merge the two input array elements by picking elements\n * alternatively from each array.\n * @param  {string[]} splts obtained by splitting on pipe.\n * @param  {string[]} mtchs obtained by matching on pipe.\n * @return {string[]}       the merged array.\n * @private\n */\nvar mergeSplitsAndMatches = function ( splts, mtchs ) {\n  const [ s0, ...splits ] = splts;\n  return ( ( s0 === undefined ) ? mtchs : [ s0, ...mergeSplitsAndMatches( mtchs, splits ) ] );\n}; // mergeSplitsAndMatches()\n\n// # compiler\n/**\n * It transforms the input patterns for custom entity recognition into a model,\n * which is run by winkNLP's `readDoc()` method. The model is created by\n * the `learnCustomEntities()` method of core winkNLP using this compiler. Brefore\n * the compiler can be **run**, its instance must be created using the following\n * parameters:\n *\n * @param  {JSON}     cerModel    precompiled custom entity meta model â handles escaping\n *                                of entity literals. For example `^ADJ` will match\n *                                with token `ADJ` (or `adj` based on `matchValue` in\n *                                `cerConfig`), whereas `ADJ` will match with the\n *                                adjective part-of-speech of a token.\n * @param  {object}   cache       of lexicon, which is required to deliver performance.\n * @param  {function} tokenize    is instantiated from core tokenizer, which tokenises the\n *                                input patterns. It is used in the `tokenizeText()` private\n *                                method of compiler.\n * @param  {boolean}  matchValue  match value flag â defines match on either `value` or\n *                                `normal` of tokens.<br/>\n * @return {object}               contains **run** function, which can compile the input\n *                                pattern into a model.\n * @private\n */\nvar compiler = function ( cerModel, cache, tokenize, matchValue ) {\n  // Returned!\n  var methods = Object.create( null );\n  // Map of literals to be preserved.\n  var preserve;\n\n  cerAutomata.importJSON( cerModel );\n  // On pattern detection, we need to save the custom property â `preserve`\n  // created by the `cerModel's` execution.\n  cerAutomata.setOnPatternDetectionFn( ( match, customProperty ) => ( match.push( customProperty ) ) );\n\n  // ## hasOrPattern\n  /**\n   * Test the presence of or-pattern in the tokens and returns the index of the\n   * same.\n   * @param  {string[]} tokens of each word, split on spaces.\n   * @return {number}          the index where token is found otherwise -1.\n   * @private\n   */\n  var hasOrPattern = function ( tokens ) {\n    // Use findIndex with regex to locate.\n    return ( tokens.findIndex( ( e ) => rgxOr.test( e ) ) !== -1 );\n  }; // hasOrPattern()\n\n  // ## encloseInSquareBracket\n  /**\n   * Heper function to enclose incoming text element within square brackets.\n   * @param  {string} e input text element.\n   * @return {string}   enclosed text element.\n   * @private\n   */\n  var encloseInSquareBracket = function ( e ) {\n    // Enclose!\n    return '[' + e +  ']';\n  }; // encloseInSquareBracket()\n\n  // ## tokenizeText\n  /**\n   * Tokenizes the incoming text using wink-nlp's tokenizer.\n   * @param  {string} text   input text string.\n   * @return {object[]}      where each object contains normal & value of the token.\n   * @private\n   */\n  var tokenizeText = function ( text ) {\n    // Mimic wink-nlp like manoeuvre!\n    var rdd = Object.create( null );\n    rdd.cache = cache;\n    rdd.tokens = [];\n    var wrappedDocData = DocDataWrapper( rdd );  // eslint-disable-line new-cap\n\n    tokenize( wrappedDocData, text ); // eslint-disable-line new-cap\n    const tokens = [];\n    const values = mapRawTokens2UIdOfValue( rdd ).map( ( t ) => cache.value( t ) );\n    const normals = mapRawTokens2UIdOfNormal( rdd ).map( ( t ) => cache.value( t ) );\n    for ( let i = 0; i < values.length; i += 1 ) tokens.push( { value: values[ i ], normal: normals[ i ] } );\n    return tokens;\n  }; // tokenizeText()\n\n  // ## compileSimplePattern\n  /**\n   * Compiles a simple pattern.\n   *\n   * @param  {string} text    input simple pattern string.\n   * @return {string[]}       of compiled pattern.\n   * @private\n   */\n  var compileSimplePattern = function ( text ) {\n    // Compiled pattern build here.\n    const cp = [];\n    // Tokenized `text`.\n    const tokens = tokenizeText( text );\n    // Spans of recognized patterns from tokens' value because patterns are always\n    // in UPPER case.\n    const spans = cerAutomata.recognize( tokens.map( ( t ) => t.value ) );\n    // The spans are mapped into `replacements` and are indexed by `spans[ i ][ 0 ]`.\n    // `e[ 0 ]` & e[ 1 ] are start & end indexes, `e[ 2 ]` is entity name, and\n    // `e[ 3 ]` is customProperty, where true mean preserve replacement.\n    const replacements = Object.create( null );\n    spans.forEach( ( e ) => ( replacements[ e[ 0 ] ] = [ e[ 1 ], e[ 2 ], e[ 3 ] ] ) );\n    // Perform replacements.\n    for ( let i = 0; i < tokens.length; i += 1 ) {\n      // Replacement defined for this index â `i`? **Yes** means it could be a property\n      // or esacped property or a lone escape character or an esacped escape character. **No**\n      // means a literal.\n      if ( replacements[ i ] ) {\n        // **Empty** entity name indicates a lone escape character.\n        if ( replacements[ i ][ 1 ] !==  '' ) {\n          // Preserve? **Yes** means it is an escaped property or escape char;\n          // **No** means property.\n          if ( replacements[ i ][ 2 ].preserve ) {\n            // Since it has to be preserved, `matchValue` drives both the `cp` &\n            // `preserve` contents i.e. **normal** or **value**\n\n            // This contains escaped `<property>`.\n            const tri0 = ( matchValue ) ? tokens[ replacements[ i ][ 0 ] ].value : tokens[ replacements[ i ][ 0 ] ].normal;\n            // This conntains `<property>&`.\n            const ri1 = ( matchValue ) ? replacements[ i ][ 1 ] : replacements[ i ][ 1 ].toLowerCase();\n            // Map escaped `<property>` to `<property>&`.\n            preserve[ tri0 ] = ri1;\n            cp.push( ri1 );\n          } else {\n            // It is a **property**, therefore it has to go to the state machine\n            // **as-is**.\n            cp.push( replacements[ i ][ 1 ] );\n          }\n        }\n        // Skip by moving `i` to the end index.\n        i = replacements[ i ][ 0 ];\n      } else {\n        // **Literal**: Extract token's normal or value based on `matchValue` flag.\n        const ti = ( matchValue ) ? tokens[ i ].value : tokens[ i ].normal;\n        cp.push( ti );\n        preserve[ ti ] = ti;\n      }\n    }\n    // Return compiled pattern.\n    return cp;\n  }; // compileSimplePattern()\n\n  // ## compileOrPattern\n  /**\n   * Compiles the tokens containing \"or\" patterns.\n   * @param  {string[]} tokens  contains the incoming tokens.\n   * @return {string}           compiled text string.\n   * @private\n   */\n  var compileOrPattern = function ( tokens ) {\n    const pattern = [];\n    for ( let i = 0; i < tokens.length; i += 1 ) {\n      if ( rgxOr.test( tokens[ i ] ) ) {\n        // Strip the opening/closing square brackets.\n        const ti = tokens[ i ].substring( 1, tokens[ i ].length - 1 );\n        // Find matches with `rgxPipe`; if they are null set to an empty array.\n        const matches = ti.match( rgxPipe ) || [];\n        // Find splits on `rgxPipe`.\n        const splits = ti.split( rgxPipe );\n        // Iterate through `splits` to check that each element cannot be tokenized\n        // further.\n        for ( let j = 0; j < splits.length; j += 1 ) {\n          const st = ( splits[ j ] === '' ) ? [ '' ] : compileSimplePattern( splits[ j ] );\n          if ( st.length > 1 ) {\n           throw Error( `wink-nlp: incorrect token \"${st.join( '' )}\" encountered in examples of learnCustomEntities() API.` );\n          }\n          splits[ j ] = st[ 0 ];\n        } // splits iterations\n        // Merge matches & splits to create the pattern.\n        pattern.push( encloseInSquareBracket( mergeSplitsAndMatches( splits, matches ).join( '' ) ) );\n      } else {\n        // Simple part of text, just enclose it in square brackets after replacement (if any).\n        compileSimplePattern( tokens[ i ] ).forEach( ( t ) => pattern.push( encloseInSquareBracket( t ) ) );\n      }\n    }\n    return pattern.join( ' ' );\n  }; // compileOrPattern()\n\n  // ## compileSinglePattern\n  /**\n   * Compiles a single pattern text. It invokes compilation of \"or\" or \"simple\"\n   * pattern based on input text type.\n   *\n   * @param  {string} text      input pattern text.\n   * @return {(array|string)}   depending onn type of pattern.\n   * @private\n   */\n  var compileSinglePattern = function ( text ) {\n    // Split on spaces.\n    const atoms = text.trim().split( /\\s+/ );\n    // Invoke required compilation based on the type of `atoms` i.e. the text.\n    if ( hasOrPattern( atoms ) ) {\n      return compileOrPattern( atoms );\n    }\n    return compileSimplePattern( text );\n  }; // compileSinglePattern()\n\n  // ## run\n  /**\n   * Runs the compiler to compile the examples. It calls `compileSinglePattern()`\n   * on each example iteratively.\n   *\n   * @param  {object[]} examples containing objects, where each object defines an\n   *                             entity in terms of name and pattern.\n   * @return {object}            compiled examples ready for automata and literals\n   *                             preserve.\n   * @private\n   */\n  var run = function ( examples ) {\n    // Compiled examples are captured here.\n    const ces = [];\n    // Intialize preserve every time a new compilation happens.\n    preserve = Object.create( null );\n    for ( let i = 0; i < examples.length; i += 1 ) {\n      const example = examples[ i ];\n      const patterns = example.patterns;\n      for ( let j = 0; j < patterns.length; j += 1 ) {\n        const cp = compileSinglePattern( patterns[ j ] );\n        const ce = Object.create( null );\n        ce.name = example.name;\n        ce.pattern = cp;\n        if ( example.mark ) ce.mark = example.mark;\n        ces.push( ce );\n      }\n    }\n\n    return { examples: ces, preserve: preserve };\n  }; // run()\n\n  methods.run = run;\n\n  return methods;\n}; // compiler()\n\nmodule.exports = compiler;\n","//     wink-nlp\n//\n//     Copyright (C) GRAYPE Systems Private Limited\n//\n//     This file is part of âwink-nlpâ.\n//\n//     Permission is hereby granted, free of charge, to any\n//     person obtaining a copy of this software and\n//     associated documentation files (the \"Software\"), to\n//     deal in the Software without restriction, including\n//     without limitation the rights to use, copy, modify,\n//     merge, publish, distribute, sublicense, and/or sell\n//     copies of the Software, and to permit persons to\n//     whom the Software is furnished to do so, subject to\n//     the following conditions:\n//\n//     The above copyright notice and this permission notice\n//     shall be included in all copies or substantial\n//     portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\n//     ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\n//     TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n//     PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//     DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF\n//     CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n//     CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\n\nvar helper = Object.create( null );\n\n/**\n * Tests if argument `v` is a JS object.\n *\n * @param {*} v       is tested for a valid JS object.\n * @returns {boolean} ture if `v` is a valid JS object, otherwise false.\n */\nhelper.isObject = function ( v ) {\n  return ( Object.prototype.toString.call( v ) === '[object Object]' );\n}; // isObject()\n\n/**\n * Tests if argument `v` is a JS array.\n *\n * @param {*} v       is tested for a valid JS array.\n * @returns {boolean} ture if `v` is a valid JS array, otherwise false.\n */\nhelper.isArray = function ( v ) {\n  return ( Object.prototype.toString.call( v ) === '[object Array]' );\n}; // isArray()\n\n/**\n * Tests if argument `n` is a finite integer.\n *\n * @param {*} n       is tested for a finite integer.\n * @returns {boolean} ture if `n` is a finite integer, otherwise false.\n */\nhelper.isFiniteInteger = function ( n ) {\n  return (\n    ( typeof n === 'number' ) &&\n    !isNaN( n ) &&\n    isFinite( n ) &&\n    ( n === Math.round( n ) )\n  );\n}; // isFiniteInteger()\n\n/**\n * Tests if argument `a` contains one or more finite integers.\n *\n * @param {*} a       is tested for an array of finite integers.\n * @returns {boolean} ture if `n` is an array of finite integers, otherwise false.\n */\nhelper.isIntegerArray = function ( a ) {\n  // If it is not an array, return `false`.\n  if ( !helper.isArray( a ) ) return false;\n\n  // Has no element i.e. no finite integer â return `false`.\n  if ( a.length === 0 ) return false;\n\n  // Test every element for a finite integer.\n  for ( let i = 0; i < a.length; i += 1 ) {\n    // Any failure means immediately return `false`.\n    if ( !helper.isFiniteInteger( a[ i ] ) ) return false;\n  }\n\n  // It is an array and contains all finite integers, return `true`.\n  return true;\n}; // isIntegerArray()\n\nmodule.exports = helper;\n","//     wink-nlp\n//\n//     Copyright (C) GRAYPE Systems Private Limited\n//\n//     This file is part of âwink-nlpâ.\n//\n//     Permission is hereby granted, free of charge, to any\n//     person obtaining a copy of this software and\n//     associated documentation files (the \"Software\"), to\n//     deal in the Software without restriction, including\n//     without limitation the rights to use, copy, modify,\n//     merge, publish, distribute, sublicense, and/or sell\n//     copies of the Software, and to permit persons to\n//     whom the Software is furnished to do so, subject to\n//     the following conditions:\n//\n//     The above copyright notice and this permission notice\n//     shall be included in all copies or substantial\n//     portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\n//     ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\n//     TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n//     PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n//     DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF\n//     CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n//     CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\n\nvar DocDataWrapper = require( './dd-wrapper.js' );\nvar Doc = require( './doc-v2.js' );\nvar Cache = require( './cache.js' );\nvar tokenizer = require( './tokenizer.js' );\nvar compileTRex = require( './compile-trex.js' );\nvar mappers = require( './tokens-mappers.js' );\nvar itsHelpers = require( './its.js' );\nvar asHelpers = require( './as.js' );\nvar mapRawTokens2UIdOfNormal = mappers.mapRawTokens2UIdOfNormal;\nvar mapRawTokens2UIdOfDefaultPOS = mappers.mapRawTokens2UIdOfDefaultPOS;\n\nvar Compiler = require( './examples-compiler.js' );\n\nvar constants = require( './constants.js' );\n\nvar fsm = require( './automaton.js' );\n\nvar search = require( './search.js' );\nvar locate = require( './locate.js' );\n\nvar helper = require( './helper.js' );\n\n// Size of a single token.\nvar tkSize = constants.tkSize;\n\n/**\n * Creates an instance of nlp.\n * @private\n *\n * @param {object} theModel language model.\n * @param {string[]} pipe of nlp annotations.\n * @returns {object} conatining set of API methods for natural language processing.\n * @example\n * const nlp = require( 'wink-nlp' );\n * var myNLP = nlp();\n*/\nvar nlp = function ( theModel, pipe ) {\n\n  var methods = Object.create( null );\n  // Token Regex; compiled from `model`\n  var trex;\n  // wink-nlp language `model`.\n  var model;\n  // Holds instance of `cache` created using the `model`.\n  var cache;\n  // NLP Pipe Config.\n  // var nlpPipe = Object.create( null );\n  // Configured tokenize.\n  var tokenize;\n  // Automata\n  // 1. NER\n  var nerAutomata;\n  var nerTransformers;\n  // 2. SBD\n  var sbdAutomata;\n  var sbdTransformers;\n  var sbdSetter;\n  // 3. NEG\n  var negAutomata;\n  var negSetter;\n  // SA\n  var saAutomata;\n  var saSetter;\n  // POS\n  var posAutomata;\n  var posTransformers;\n  var posSetter;\n  var posUpdater;\n  // Patterns or Custom Entities\n  var cerAutomata;\n  var cerTransformer;\n  var cerLearnings = 0;\n  var cerPreserve;\n  var cerConfig;\n  // Used for compiling examples.\n  var compiler;\n  // Used to innstantiate the compiler.\n  var cerMetaModel;\n\n  // Contains a list of valid annotations built from `theModel`.\n  var validAnnotations = Object.create( null );\n\n  // Current pipe.\n  var currPipe = Object.create( null );\n  var onlyTokenization = true;\n\n  // Private methods.\n\n  // ## load\n  /**\n   * Loads the model containing the core model along with other applicable\n   * models.\n   * @private\n   *\n   * @returns {void} nothing!.\n   * @private\n  */\n  var load = function () {\n    // Load language model.\n    model = theModel.core();\n    // With `intrinsicSize` captured, instantiate cache etc.\n    cache = Cache( model, theModel.featureFn ); // eslint-disable-line new-cap\n    trex = compileTRex( model.trex );\n\n    // Instantiate tokenizer.\n    tokenize = tokenizer( trex, model.tcat.hash, model.preserve );\n\n    // Load & setup SBD model.\n    var sbdModel = theModel.sbd();\n\n    sbdAutomata = new Array( sbdModel.machines.length );\n    sbdTransformers = new Array( sbdModel.machines.length );\n    for ( let i = 0; i < sbdModel.machines.length; i += 1 ) {\n      sbdAutomata[ i ] = fsm( cache );\n      sbdAutomata[ i ].importJSON( sbdModel.machines[ i ] );\n      sbdTransformers[ i ] = sbdModel.transformers[ i ];\n    }\n    sbdSetter = sbdModel.setter;\n\n    // Load & setup NER model.\n    var nerModel = theModel.ner();\n\n    nerAutomata = new Array( nerModel.machines.length );\n    nerTransformers = new Array( nerModel.machines.length );\n    for ( let i = 0; i < nerModel.machines.length; i += 1 ) {\n      nerAutomata[ i ] = fsm( cache );\n      nerAutomata[ i ].importJSON( nerModel.machines[ i ] );\n      nerTransformers[ i ] = nerModel.transformers[ i ];\n    }\n\n    var negModel = theModel.negation();\n    negAutomata = fsm( cache );\n    negAutomata.importJSON( negModel.machines[ 0 ] );\n    negSetter = negModel.setter;\n\n    var saModel = theModel.sa();\n    saAutomata = fsm( cache );\n    saAutomata.importJSON( saModel.machines[ 0 ] );\n    saSetter = saModel.setter;\n\n    var posModel = theModel.pos();\n    posAutomata = new Array( posModel.machines.length );\n    posTransformers = new Array( nerModel.machines.length );\n    for ( let i = 0; i < posModel.machines.length; i += 1 ) {\n      // Ignore only OOV literal and not new line character in the case of POS Tagging.\n      posAutomata[ i ] = fsm( cache, cache.value( 0 ) );\n      posAutomata[ i ].importJSON( posModel.machines[ i ] );\n      posTransformers[ i ] = posModel.transformers[ i ];\n    }\n    posSetter = posModel.setter;\n    posUpdater = posModel.updater;\n\n\n    var cmModel = theModel.metaCER();\n    cerMetaModel = cmModel.machines;\n    cerTransformer = cmModel.transformers[ 0 ];\n    // posAutomata = fsm( cache, cache.value( 0 ) );\n    // posAutomata.importJSON( posModel.machines[ 0 ] );\n    // posTransformer = posModel.transformers[ 0 ];\n  }; // load()\n\n  // Public Methods.\n  // ## readDoc\n  /**\n   * Loads a single document to be processed.\n   * @private\n   *\n   * @param {string} text of the document that you want to process.\n   * @returns {object} the document in terms of an object that exposes the API.\n   * @example\n   * const DOC = \"The quick brown fox jumps over the lazy dog\";\n   * myNLP.readDoc(DOC);\n  */\n  var readDoc = function ( text ) {\n    if ( typeof text !== 'string' ) {\n      throw Error( `wink-nlp: expecting a valid Javascript string, instead found \"${typeof text}\".`);\n    }\n    // Raw Document Data-structure gets populated here as NLP pipe taks execute!\n    var rdd = Object.create( null );\n    // The `cache` is also part of document data structure.\n    rdd.cache = cache;\n    // Document's tokens; each token is represented as an array of numbers:\n    // ```\n    // [\n    //   hash, // of tokenized lexeme\n    //   (nox) + preceding spaces, // expansion's normal\n    //   pos + lemma, // pos & lemma are contextual\n    //   negation flag // 1 bit at msb\n    // ]\n    // ```\n    rdd.tokens = [];\n    // Sentences â stored as array of pairs of `[ start, end ]` pointing to the `tokens`.\n    rdd.sentences = [];\n    // Markings are 4-tuples of `start`, `end` **token indexes**,  and `begin & end markers`.\n    // The begin & end markers are used to markup the tokens specified.\n    rdd.markings = [];\n    // Publish the current annotation pipeline so that code can inquire about\n    // active annotations!\n    rdd.currPipe = currPipe;\n\n    var wrappedDocData = DocDataWrapper( rdd );  // eslint-disable-line new-cap\n\n    // Start of NLP Pipe\n    tokenize( wrappedDocData, text ); // eslint-disable-line new-cap\n    // Compute number of tokens.\n    rdd.numOfTokens = rdd.tokens.length / tkSize;\n    // This structure is identical to sentences ( or entities ), for the sake of uniformity.\n    // The structure is `[ start, end, negationFlag, sentimentScore ]`.\n    rdd.document = [ 0, ( rdd.numOfTokens - 1 ), 0, 0 ];\n\n    // Map tokens for automata if there are other annotations to be performed.\n    var tokens4Automata = ( onlyTokenization ) ? null : mapRawTokens2UIdOfNormal( rdd );\n\n    var px;\n    if ( currPipe.sbd ) {\n      // Sentence Boundary Detection.\n      // Set first `Pattern Swap (x)` as `null`.\n      px = null;\n      for ( let i = 0; i < sbdAutomata.length; i += 1 ) {\n        sbdAutomata[ i ].setPatternSwap( px );\n        // For SBD, all tokens are required to extract preceeding spaces.\n        px = sbdAutomata[ i ].recognize( tokens4Automata, sbdTransformers[ i ], rdd.tokens );\n      }\n      // The structure of sentence is:<br/>\n      // `[ start, end, negationFlag, sentimentScore ]`\n      sbdSetter( px, rdd );\n      // Compute number of sentences!\n      rdd.numOfSentences = rdd.sentences.length;\n    } else {\n      // Setup default sentence as entire document!\n      rdd.numOfSentences = 1;\n      rdd.sentences = [ [ 0, ( rdd.numOfTokens - 1 ), 0, 0 ] ];\n    }\n\n    if ( currPipe.ner ) {\n      // Named entity detection.\n      px = null;\n      for ( let i = 0; i < nerAutomata.length; i += 1 ) {\n        nerAutomata[ i ].setPatternSwap( px );\n        px = nerAutomata[ i ].recognize( tokens4Automata, nerTransformers[ i ] );\n      }\n      // Entities â storted as array of `[ start, end, entity type ].`\n      // There are no setter for entities as no transformation is needed.\n      rdd.entities = px;\n    } else {\n      rdd.entities = [];\n    }\n\n    if ( currPipe.negation ) {\n      // Negation\n      px = null;\n      px = negAutomata.recognize( tokens4Automata );\n      negSetter( px, rdd, constants, search );\n    }\n\n    if ( currPipe.sentiment ) {\n      // Sentiment Analysis\n      px = null;\n      px = saAutomata.recognize( tokens4Automata );\n      saSetter( px, rdd, constants, locate );\n    }\n\n    if ( currPipe.pos ) {\n      // PoS Tagging\n      const posTags = mapRawTokens2UIdOfDefaultPOS( rdd );\n      px = null;\n      for ( let i = 0; i < posAutomata.length; i += 1 ) {\n        px = posAutomata[ i ].recognize( posTags, posTransformers[ 0 ], rdd.tokens );\n        posUpdater( px, cache, posTags, tokens4Automata );\n      }\n      posSetter( rdd, posTags, tkSize, constants.bits4lemma );\n    }\n\n    if ( currPipe.cer ) {\n      // Patterns\n      px = null;\n      if ( cerAutomata !== undefined && cerLearnings > 0 ) {\n        cerConfig.rdd = rdd;\n        cerConfig.preserve = cerPreserve;\n        cerConfig.constants = constants;\n        if ( cerConfig.useEntity ) cerAutomata.setPatternSwap( rdd.entities );\n        px = cerAutomata.recognize( tokens4Automata, cerTransformer, cerConfig );\n      }\n      // If there are no custom entities, then `px` will be `null`; in such a case\n      // set `customEntities` to an empty array.\n      rdd.customEntities = px || [];\n    } else rdd.customEntities = [];\n\n\n    // Word Vector\n    // if ( theModel.wordVectors !== undefined ) {\n    //\n    // }\n\n    // Now create the document!\n    var doc = Doc( rdd, theModel.addons ); // eslint-disable-line new-cap\n\n    // All done â cleanup document's data.\n    wrappedDocData.clean();\n    return doc;\n  }; // readDoc()\n\n  var learnCustomEntities = function ( examples, config ) {\n    // Ensure (a) `examples` is an array and (b) and its each element is an object.\n    if ( helper.isArray( examples ) ) {\n      examples.forEach( ( ex ) => {\n        if ( helper.isObject( ex ) ) {\n          // The object must contain name  & patterns property of string and array type respectively.\n          if ( ( typeof ex.name !== 'string' ) || ( ex.name === '' ) ) {\n            throw Error( `wink-nlp: name should be a string, instead found \"${ex.name}\":\\n\\n${JSON.stringify( ex, null, 2 )}` );\n          } else if ( helper.isArray( ex.patterns ) ) {\n            for ( let k = 0; k < ex.patterns.length; k += 1 ) {\n              const p = ex.patterns[ k ];\n              // Each pattern should be a string.\n              if ( ( typeof p !== 'string' ) || ( p === '' ) ) {\n                throw Error( `wink-nlp: each pattern should be a string, instead found \"${p}\":\\n\\n${JSON.stringify( ex, null, 2 )}` );\n              }\n            } // for ( let k = 0;... )\n          } else {\n            // Pattern is not an array.\n            throw Error( `wink-nlp: patterns should be an array, instead found \"${typeof ex.patterns}\":\\n\\n${JSON.stringify( ex, null, 2 )}` );\n          }\n          // If mark is present then it should be an array of integers **and** its length must\n          // be equal to 2 **and** start index <= end index.\n          if ( ( ex.mark !== undefined ) &&\n                ( !helper.isIntegerArray( ex.mark ) ||\n                ( ex.mark.length !== 2 ) ||\n                ( ex.mark.length === 2 && ex.mark[ 0 ] > ex.mark[ 1 ] ) ) ) {\n            throw Error( `wink-nlp: mark should be an array containing start & end indexes, instead found:\\n\\n${JSON.stringify( ex.mark, null, 2 )}` );\n          }\n        } else {\n          // Example is not an object.\n          throw Error( `wink-nlp: each example should be an object, instead found a \"${typeof ex}\":\\n\\n${JSON.stringify( ex, null, 2 )}` );\n        }\n      } );\n    } else {\n      // Examples is not an array.\n      throw Error( `wink-nlp: examples should be an array, instead found \"${typeof examples}\".` );\n    }\n\n    // Validate config\n    cerConfig = ( config === undefined || config === null ) ? Object.create( null ) : JSON.parse( JSON.stringify( config ) );\n    if ( !helper.isObject( cerConfig ) ) {\n      throw Error( `wink-nlp: config should be an object, instead found \"${typeof cerConfig}\".` );\n    }\n    cerConfig.matchValue = !!cerConfig.matchValue;\n    cerConfig.usePOS = ( cerConfig.usePOS === undefined ) ? true : !!cerConfig.usePOS;\n    cerConfig.useEntity = ( cerConfig.useEntity === undefined ) ? true : !!cerConfig.useEntity;\n\n\n    // Instantiate compiler.\n    compiler = Compiler( cerMetaModel, cache, tokenize, cerConfig.matchValue ); // eslint-disable-line new-cap\n\n    cerAutomata = null;\n    cerLearnings = 0;\n    cerAutomata = fsm();\n    const compiled = compiler.run( examples );\n    cerPreserve = compiled.preserve;\n    cerLearnings = cerAutomata.learn( compiled.examples );\n    // cerAutomata.printModel();\n    return cerLearnings;\n  }; // learnCustomEntities()\n\n  if ( helper.isObject( theModel ) ) {\n    if ( typeof theModel.core !== 'function' ) {\n      throw Error( 'wink-nlp: invalid model used.' );\n    }\n  } else {\n    throw Error( 'wink-nlp: invalid model used.' );\n  }\n\n  // Build a list of valid annotations from `theModel`. This will ensure that\n  // only **available** annotations from the model can be used in the pipe.\n  validAnnotations.sbd = typeof theModel.sbd === 'function';\n  validAnnotations.negation = typeof theModel.negation === 'function';\n  validAnnotations.sentiment = typeof theModel.sa === 'function';\n  validAnnotations.pos = typeof theModel.pos === 'function';\n  validAnnotations.ner = typeof theModel.ner === 'function';\n  validAnnotations.cer = typeof theModel.metaCER === 'function';\n\n  const tempPipe = ( pipe === undefined ) ? Object.keys( validAnnotations ) : pipe;\n  if ( helper.isArray( tempPipe ) ) {\n    tempPipe.forEach( ( at ) => {\n      if ( !validAnnotations[ at ] ) throw Error( `wink-nlp: invalid pipe annotation \"${at}\" found.` );\n      currPipe[ at ] = true;\n      onlyTokenization = false;\n    } );\n  } else throw Error( `wink-nlp: invalid pipe, it must be an array instead found a \"${typeof pipe}\".` );\n\n  // Load the model.\n  load();\n  // Setup default configuration.\n  // definePipeConfig();\n  // Methods.\n  methods.readDoc = readDoc;\n  methods.learnCustomEntities = learnCustomEntities;\n  // Expose `its` and `as` helpers.\n  methods.its = itsHelpers;\n  methods.as = asHelpers;\n\n  return methods;\n}; // wink\n\nmodule.exports = nlp;\n","const originalModel=require(\"./languages/cur/models/eng-core-web-model.json\"),bufferFromBase64=function(data){let decodedData;try{decodedData=atob(data)}catch(e){throw Error(\"Unsupproted browser or node.js version;\\n      Refer to https://developer.mozilla.org/en-US/docs/Web/API/atob#browser_compatibility for supported versions.\")}var size=decodedData.length,bytes=new Uint8Array(size);for(let k=0;k<size;k+=1)bytes[k]=decodedData.charCodeAt(k);return bytes.buffer};var readModel=function(){const model=JSON.parse(JSON.stringify(originalModel));var packing=model.packing,featuresData=model.features,pos=model.pos;model.lexicon=new Uint32Array(bufferFromBase64(model.lexicon)),model.xpansions=new Uint32Array(bufferFromBase64(model.xpansions));for(const f in model.packing.layout)if(0===packing.layout[f][3]){featuresData[f].hash=Object.create(null);for(let k=0;k<featuresData[f].list.length;k+=1)featuresData[f].hash[featuresData[f].list[k]]=k}featuresData.lexeme.hash=Object.create(null);for(let k=0;k<featuresData.lexeme.list.length;k+=1)featuresData.lexeme.hash[featuresData.lexeme.list[k]]=k;const clusters=featuresData.posClusters.list;for(let k=0;k<clusters.length;k+=1)clusters[k]=new Set(clusters[k].split(\"_\").map((e=>pos.hash[e]||0)));return model};module.exports=readModel;","var readModel=require(\"./read-core-model.js\"),loadModel=function(){var model=readModel();model.packing.efList=[];for(const f in model.packing.layout)0===model.packing.layout[f][3]&&(model.features[f].intrinsicSize=model.features[f].list.length,model.features[f].index=model.features[f].list.length,model.features[f].maxIndex=model.packing.layout[f][1]>>>model.packing.layout[f][2]),1===model.packing.layout[f][4]&&model.packing.efList.push(f);return model.features.lexeme.intrinsicSize=model.features.lexeme.list.length,model.features.lexeme.index=model.features.lexeme.list.length,model};module.exports=loadModel;","const hintDelta=108e4,transformers=new Array(3),$numeric_year=45,$numeric_value=46,$ordinal_value=47,$time=48,$date=49,$tab_crlf=50,$time_hh_mm=51,$email=52,$emoji=53,$emoticon=54,$hashtag=55,$mention=56,$url=57;var rgxDDMMYY=/^(?:0?[1-9]|[12]\\d|30|31)[/.-](?:0?[1-9]|1[0-2])(?:[/.-]([12]\\d)?\\d\\d)$/,rgxMMDDYY=/^(?:0?[1-9]|1[0-2])[/.-](?:0?[1-9]|[12]\\d|30|31)(?:[/.-]([12]\\d)?\\d\\d)$/,rgxISODate=/^(?:[12]\\d\\d\\d)[/.-](?:0?[1-9]|1[0-2])[/.-](?:0?[1-9]|[12]\\d|30|31)$/,rgxHHMM=/^(?:\\d|[01]\\d|2[0-3]):(?:\\d|[0-5][0-9])$/,rgxPeriodComma=/[,.]/g,rgxCommaB4Period=/,(?=.*?\\.)/g,rgxComma=/,/g,rgxPeriod=/\\./,transformNumber=function(tv,token){var num=+(rgxPeriod.test(tv)?tv.replace(rgxCommaB4Period,\"\"):tv.replace(rgxComma,\"\"));if(isNaN(num)){const splitTV=tv.split(\"/\");return 2!==splitTV.length||isNaN(splitTV[0])||isNaN(splitTV[1])?rgxDDMMYY.test(tv)||rgxMMDDYY.test(tv)||rgxISODate.test(tv)?1080049:rgxHHMM.test(tv)?1080051:token:1080046}return num>=1200&&num<=2100&&tv==num?1080045:1080046};transformers[0]=function(token,cache){const tv=cache.value(token);if(void 0===tv)return token;if(\"\\n\"===tv||\"\\n\\n\"===tv||\"\"===tv.replace(rgxPeriodComma,\"\"))return token;var mapped=cache.property(token,\"nerHint\");if(mapped)return mapped+108e4;switch(cache.property(token,\"tokenType\")){case\"number\":return transformNumber(tv,token);case\"ordinal\":return 1080047;case\"time\":return 1080048;case\"tabCRLF\":return 1080050;case\"email\":return 1080052;case\"emoji\":return 1080053;case\"emoticon\":return 1080054;case\"hashtag\":return 1080055;case\"mention\":return 1080056;case\"url\":return 1080057;default:return token}},transformers[1]=void 0,transformers[2]=void 0,module.exports=transformers;","var transformers=require(\"./ner-transformers.js\"),machines=require(\"./languages/cur/models/eng-ner-model.json\"),loadNERModel=function(){return{machines:machines,transformers:transformers}};module.exports=loadNERModel;","const hintDelta=108e4,$right_spc_amb_qt=6,$right_amb_qt=4,$likely_eos=7,$non_eos=8,transformers=new Array(1),psMask=65535;transformers[0]=function(token,cache,rawTokens,i){var mapped=cache.property(token,\"sbdHint\")||cache.property(rawTokens[4*i],\"sbdHint\");return 4===mapped&&(mapped=65535&rawTokens[4*i+1]?6:4),mapped?mapped+108e4:cache.property(token,\"isAbbrev\")?108e4+(2===cache.value(token).length?8:7):token},module.exports=transformers;","var setter=function(px,rdd){var numOfTokens=rdd.numOfTokens,si=[0,numOfTokens-1,0,0];for(let i=0;i<px.length;i+=1)si[1]=px[i][0],i<px.length-1&&(rdd.sentences.push(si),si=[px[i][0]+1,numOfTokens-1,0,0]);rdd.sentences.push(si),si[1]<numOfTokens-1&&rdd.sentences.push([si[1]+1,numOfTokens-1,0,0])};module.exports=setter;","var transformers=require(\"./sbd-transformers.js\"),setter=require(\"./sbd-setter.js\"),machines=require(\"./languages/cur/models/eng-sbd-model.json\"),loadNERModel=function(){return{machines:machines,setter:setter,transformers:transformers}};module.exports=loadNERModel;","const hintDelta=108e4,transformers=new Array(2);transformers[0]=function(pos,cache,rawTokens,i){var mapped=cache.property(rawTokens[4*i],\"posHint\");return mapped?mapped+108e4:pos},transformers[1]=transformers[0],module.exports=transformers;","var setter=function(rdd,posTags,tkSize,bits4lemma){let pk=0;for(let i=0;i<rdd.tokens.length;i+=tkSize,pk+=1)0===rdd.tokens[i+2]&&(rdd.tokens[i+2]=posTags[pk]<<bits4lemma)};module.exports=setter;","var updater=function(px,cache,posTags,normalizedTokens){for(let j=0;j<px.length;j+=1){const targetPOS=px[j][2],tokenIdx=px[j][0];targetPOS<0?posTags[tokenIdx]=Math.abs(targetPOS):cache.isMemberPOS(normalizedTokens[tokenIdx],targetPOS)&&(posTags[tokenIdx]=targetPOS)}};module.exports=updater;","var transformers=require(\"./pos-transformers.js\"),setter=require(\"./pos-setter.js\"),updater=require(\"./pos-updater.js\"),machines=require(\"./languages/cur/models/eng-pos-model.json\"),loadNERModel=function(){return{machines:machines,setter:setter,updater:updater,transformers:transformers}};module.exports=loadNERModel;","var setter=function(px,dd,constants,search){const getProperty=dd.cache.property;let dnf=0,k=0;for(;k<px.length;)if(\"2\"===px[k][2])k+=1;else{const snf=px[k][1]+1,negSId=search(px[k][1],dd.sentences);let tna=dd.sentences[negSId][1];dd.sentences[negSId][2]=1,dnf=1,k+=1,k<px.length?tna=tna<px[k][0]?tna:px[k][0]:tna+=1;for(let i=snf;i<tna;i+=1){const tt=getProperty(dd.tokens[i*constants.tkSize],\"tokenType\");\"punctuation\"!==tt&&\"emoji\"!==tt&&\"emoticon\"!==tt&&(dd.tokens[i*constants.tkSize+3]=constants.negationFlag)}}dd.document[2]=dnf};module.exports=setter;","var setter=require(\"./negation-setter.js\"),machines=require(\"./languages/cur/models/eng-negation-model.json\"),loadNERModel=function(){return{machines:machines,setter:setter}};module.exports=loadNERModel;","var setter=function(px,rdd,constants,locate){const tkSize=constants.tkSize;let dss=0,k=0;for(;k<px.length;){const sid=Math.ceil(locate(px[k][0],rdd.sentences)),kend=Math.floor(locate(rdd.sentences[sid][1],px));let sss=0;for(let i=k;i<=kend;i+=1)px[i][2]=+px[i][2]/1e3,rdd.tokens[px[i][0]*tkSize+3]>=constants.negationFlag?sss-=px[i][2]:sss+=px[i][2];rdd.sentences[sid][3]=sss/(kend-k+1),dss+=rdd.sentences[sid][3],k=kend+1}rdd.document[3]=dss/rdd.numOfSentences};module.exports=setter;","var setter=require(\"./sa-setter.js\"),machines=require(\"./languages/cur/models/eng-sa-model.json\"),loadSAModel=function(){return{machines:machines,setter:setter}};module.exports=loadSAModel;","var consts=Object.create(null);consts.UNK=0,consts.bits4PrecedingSpace=16,consts.bits4lemma=20,consts.posMask=66060288,consts.psMask=65535,consts.xnMask=1073676288,consts.tkSize=4,consts.xpSize=4,consts.xcMask=31,consts.bits4xpPointer=14,consts.negationFlag=Math.pow(2,31),module.exports=consts;","const transformers=new Array(1),constants=require(\"./constants.js\");var tkSize=constants.tkSize,bits4lemma=constants.bits4lemma,posMask=constants.posMask;transformers[0]=function(t,itsUndefined,config,index){var normal,cache=config.rdd.cache,tokens=config.rdd.tokens,preserve=config.preserve,value=cache.value(tokens[index*tkSize]);return\"string\"==typeof t?t:preserve[value]?preserve[value]:!config.matchValue&&preserve[normal=cache.value(t)]?preserve[normal]:config.usePOS?cache.valueOf(\"pos\",(tokens[index*tkSize+2]&posMask)>>>bits4lemma):config.matchValue?value:normal},module.exports=transformers;","var transformers=require(\"./cer-transformers.js\"),machines=require(\"./languages/cur/models/eng-cer-meta-model.json\"),loadNERModel=function(){return{machines:machines=JSON.stringify(machines),transformers:transformers}};module.exports=loadNERModel;","const tcat=Object.create(null);tcat.hash=Object.create(null),tcat.list=[\"unk\",\"word\",\"number\",\"url\",\"email\",\"mention\",\"hashtag\",\"emoji\",\"emoticon\",\"time\",\"ordinal\",\"currency\",\"punctuation\",\"symbol\",\"tabCRLF\",\"wordRP\",\"alpha\",\"apos\",\"decade\",\"shortForm\"],tcat.hash.unk=0,tcat.hash.word=1,tcat.hash.number=2,tcat.hash.url=3,tcat.hash.email=4,tcat.hash.mention=5,tcat.hash.hashtag=6,tcat.hash.emoji=7,tcat.hash.emoticon=8,tcat.hash.time=9,tcat.hash.ordinal=10,tcat.hash.currency=11,tcat.hash.punctuation=12,tcat.hash.symbol=13,tcat.hash.tabCRLF=14,tcat.hash.wordRP=15,tcat.hash.alpha=16,tcat.hash.apos=17,tcat.hash.decade=18,tcat.hash.shortForm=19,module.exports=tcat;","var tcat=require(\"./token-categories.js\"),tcat2pos=new Array(tcat.list.length);tcat2pos.fill(0),tcat2pos[0]=17,tcat2pos[2]=9,tcat2pos[3]=15,tcat2pos[4]=15,tcat2pos[4]=15,tcat2pos[5]=12,tcat2pos[6]=15,tcat2pos[7]=15,tcat2pos[8]=15,tcat2pos[9]=15,tcat2pos[10]=11,tcat2pos[11]=15,tcat2pos[12]=13,tcat2pos[13]=15,tcat2pos[14]=14,tcat2pos[18]=9;var suffix2pos=Object.create(null);suffix2pos.ing=16,suffix2pos.ed=16,suffix2pos.ly=3,suffix2pos.able=1,suffix2pos.tish=1,suffix2pos.like=1,suffix2pos.ous=1,suffix2pos.ful=1,suffix2pos.ary=1,suffix2pos.less=1,suffix2pos.ier=1,suffix2pos.est=1,suffix2pos.fy=1,suffix2pos.ky=1,suffix2pos.es=8,suffix2pos.er=8,suffix2pos.or=8,suffix2pos.ity=8,suffix2pos.ion=8,suffix2pos.llah=12,suffix2pos.stan=12,suffix2pos.gton=12,suffix2pos.abad=12,suffix2pos.land=12,suffix2pos.pur=12,suffix2pos.tnam=12;var prefix2pos=Object.create(null);prefix2pos.anti=1,prefix2pos.post=1,prefix2pos.non=1,prefix2pos.cross=8;var feature=function(config,lang,featuresData,isLexicographer){const rgxLC=/^[a-z][a-z\\-\\â\\â\\.]*$/,rgxUC=/^[A-Z][A-Z\\-\\â\\â\\.]*$/,rgxTC=/^[A-Z][a-z\\-\\â\\â\\.]*$/;var i,rgxCatDetectors=[],regexes=lang?lang.trex.lex:null,imax=lang?regexes.length:0;const fd=featuresData;var methods=Object.create(null);let prevWord=null;for(i=0;i<imax;i+=1)rgxCatDetectors.push([new RegExp(regexes[i][0],regexes[i][1]),regexes[i][2]]);return methods.shape=function(word){return word.replace(/[A-Z]{4,}/g,\"XXXX\").replace(/[A-Z]/g,\"X\").replace(/[a-z]{4,}/g,\"xxxx\").replace(/[a-z]/g,\"x\").replace(/\\d{4,}/g,\"dddd\").replace(/\\d/g,\"d\")},methods.suffix=function(word){return word.slice(-config.suffix)},methods.prefix=function(word){return word.slice(0,config.prefix)},methods.lexeme=function(word){return word},methods.lexemeCID=function(word){return word},methods.isAbbrev=function(word){return/[a-z].*\\.$/i.test(word)?1:0},methods.normal=function(word){const lcwHash=fd.lexeme.hash[word.toLowerCase()];if(void 0===lcwHash)return console.log(\"\u001b[41m%s\u001b[0m entry is missing! (feature.normal)\",JSON.stringify(word.toLowerCase())),0;const offset=lcwHash-fd.lexeme.hash[word];if(offset<0||offset>3)throw new Error(\"feature.normal: offset of \"+offset+\" for \"+JSON.stringify(word));return offset},methods.tokenType=function(word){var cat;for(cat=0;cat<rgxCatDetectors.length;cat+=1)if(rgxCatDetectors[cat][0].test(word))return rgxCatDetectors[cat][1];return console.log(\"\u001b[41m%s\u001b[0m has unknown token type! (feature.tokenType)\",JSON.stringify(word)),tcat.hash.word},methods.pos=function(word,category,cache){if(isLexicographer){const tags=fd.pos.hash[word];return tags?lang.xpos.hash[tags&&1===tags.length?tags[0]:\"UNK\"]:lang.xpos.hash.UNK}var pos,wordInLC;if(category===tcat.hash.word){wordInLC=word.toLowerCase();const hash=cache.lookup(wordInLC)[0];if(hash<cache.intrinsicSize()){const posOfWLC=cache.posOf(hash),isFirstToken=null===prevWord||/^[\\t\\r\\n.?!]+$/.test(prevWord);pos=!rgxTC.test(word)&&!rgxUC.test(word)||isFirstToken?posOfWLC:12}else pos=function(word){if(!rgxLC.test(word))return 12;var wlc=word.toLowerCase();return suffix2pos[wlc.slice(-4)]||suffix2pos[wlc.slice(-3)]||suffix2pos[wlc.slice(-2)]||prefix2pos[wlc.slice(0,5)]||prefix2pos[wlc.slice(0,4)]||prefix2pos[wlc.slice(0,3)]||prefix2pos[wlc.slice(0,2)]||8}(word)}return prevWord=word,pos||tcat2pos[category]||(rgxTC.test(word)?12:8)},methods.isSPoS=function(word){const tags=fd.pos.hash[word];return tags&&1===tags.length?1:0},methods.lemma=function(word){if(0===fd.lexeme.hash[word])return 0;const lmh=fd.lemma.hash[word];return void 0===lmh||void 0===fd.lexeme.hash[lmh[0]]?(console.log(\"\u001b[41m%s\u001b[0m entry is missing! (feature.lemma)\",JSON.stringify(lmh[0])),0):fd.lexeme.hash[lmh[0]]},methods.isSLemma=function(word){if(0===fd.lexeme.hash[word])return 0;const lmh=fd.lemma.hash[word];return lmh&&fd.lexeme.hash[lmh[0]]&&1===lmh.length?1:0},methods.lutCase=function(word){return rgxLC.test(word)?1:rgxUC.test(word)?2:rgxTC.test(word)?3:0},methods};module.exports=feature;","var rgxDouble=/(bb|dd|ff|gg|mm|nn|pp|rr|tt)$/,rgxSFXsses=/(.+)(sses)$/,rgxSFXiedORies2=/(.{2,})(ied|ies)$/,rgxSFXiedORies1=/(.{1})(ied|ies)$/,rgxSFXusORss=/(.+)(us|ss)$/,rgxSFXs=/(.+)(s)$/,rgxSFXeedlyOReed=/(.*)(eedly|eed)$/,rgxSFXedORedlyORinglyORing=/([aeiouy].*)(ed|edly|ingly|ing)$/,rgxSFXatORblORiz=/(at|bl|iz)$/,rgxSFXyOR3=/(.+[^aeiouy])([y3])$/,rgxSFXstep2=/(ization|ational|fulness|ousness|iveness|tional|biliti|lessli|entli|ation|alism|aliti|ousli|iviti|fulli|enci|anci|abli|izer|ator|alli|bli|ogi|li)$/,rgxSFXstep2WithReplacements=[{rgx:/ational$/,replacement:\"ate\"},{rgx:/ization$/,replacement:\"ize\"},{rgx:/fulness$/,replacement:\"ful\"},{rgx:/ousness$/,replacement:\"ous\"},{rgx:/iveness$/,replacement:\"ive\"},{rgx:/tional$/,replacement:\"tion\"},{rgx:/biliti$/,replacement:\"ble\"},{rgx:/lessli$/,replacement:\"less\"},{rgx:/iviti$/,replacement:\"ive\"},{rgx:/ousli$/,replacement:\"ous\"},{rgx:/ation$/,replacement:\"ate\"},{rgx:/entli$/,replacement:\"ent\"},{rgx:/(.*)(alism|aliti)$/,replacement:\"$1al\"},{rgx:/fulli$/,replacement:\"ful\"},{rgx:/alli$/,replacement:\"al\"},{rgx:/ator$/,replacement:\"ate\"},{rgx:/izer$/,replacement:\"ize\"},{rgx:/enci$/,replacement:\"ence\"},{rgx:/anci$/,replacement:\"ance\"},{rgx:/abli$/,replacement:\"able\"},{rgx:/bli$/,replacement:\"ble\"},{rgx:/(.*)(l)(ogi)$/,replacement:\"$1$2og\"},{rgx:/(.*)([cdeghkmnrt])(li)$/,replacement:\"$1$2\"}],rgxSFXstep3=/(ational|tional|alize|icate|iciti|ative|ical|ness|ful)$/,rgxSFXstep3WithReplacements=[{rgx:/ational$/,replacement:\"ate\"},{rgx:/tional$/,replacement:\"tion\"},{rgx:/alize$/,replacement:\"al\"},{rgx:/(.*)(icate|iciti|ical)$/,replacement:\"$1ic\"},{rgx:/(ness|ful)$/,replacement:\"\"}],rgxSFXstep4=/(ement|ance|ence|able|ible|ment|ant|ent|ism|ate|iti|ous|ive|ize|al|er|ic)$/,rgxSFXstep4Full=/(ement|ance|ence|able|ible|ment|ant|ent|ism|ate|iti|ous|ive|ize|ion|al|er|ic)$/,rgxSFXstep4ion=/(.*)(s|t)(ion)$/,exceptions1=Object.create(null);exceptions1.skis=\"ski\",exceptions1.skies=\"sky\",exceptions1.dying=\"die\",exceptions1.lying=\"lie\",exceptions1.tying=\"tie\",exceptions1.idly=\"idl\",exceptions1.gently=\"gentl\",exceptions1.ugly=\"ugli\",exceptions1.early=\"earli\",exceptions1.only=\"onli\",exceptions1.singly=\"singl\",exceptions1.sky=\"sky\",exceptions1.news=\"news\",exceptions1.atlas=\"atlas\",exceptions1.cosmos=\"cosmos\",exceptions1.bias=\"bias\",exceptions1.andes=\"andes\";var rgxException2=/^(inning|outing|canning|herring|proceed|exceed|succeed|earring)$/,prelude=function(s){return s.replace(/^y/,\"3\").replace(/([aeiou])y/,\"$13\").replace(/\\âs$|\\'s$/,\"\").replace(/s\\â$|s\\'$/,\"\").replace(/[\\â\\']$/,\"\")},isShort=function(s){return/[^aeiouy][aeiouy][^aeiouywx3]$/.test(s)||/^[aeiouy][^aeiouy]{0,1}$/.test(s)},markRegions=function(s){var m1,m2,rgxRegions=/[aeiouy]+([^aeiouy]{1}.+)/;return(m1=rgxRegions.exec(s))?(m1=m1[1].slice(1),m1=/^(gener|commun|arsen)/.test(s)?s.replace(/^(gener|commun|arsen)(.*)/,\"$2\"):m1,(m2=rgxRegions.exec(m1))?{r1:m1,r2:m2=m2[1].slice(1)}:{r1:m1,r2:\"\"}):{r1:\"\",r2:\"\"}},step1a=function(s){var wordPart;return rgxSFXsses.test(s)?s.replace(rgxSFXsses,\"$1ss\"):rgxSFXiedORies2.test(s)?s.replace(rgxSFXiedORies2,\"$1i\"):rgxSFXiedORies1.test(s)?s.replace(rgxSFXiedORies1,\"$1ie\"):rgxSFXusORss.test(s)?s:(wordPart=s.replace(rgxSFXs,\"$1\"),/[aeiuouy](.+)$/.test(wordPart)?s.replace(rgxSFXs,\"$1\"):s)},step1b=function(s){var sd,rgn=markRegions(s);return rgxSFXeedlyOReed.test(s)?rgxSFXeedlyOReed.test(rgn.r1)?s.replace(rgxSFXeedlyOReed,\"$1ee\"):s:rgxSFXedORedlyORinglyORing.test(s)?(sd=s.replace(rgxSFXedORedlyORinglyORing,\"$1\"),rgn=markRegions(sd),rgxSFXatORblORiz.test(sd)?sd+\"e\":rgxDouble.test(sd)?sd.replace(/.$/,\"\"):isShort(sd)&&\"\"===rgn.r1?sd+\"e\":sd):s},step1c=function(s){return s.replace(rgxSFXyOR3,\"$1i\")},step2=function(s){var i,imax,us,rgn=markRegions(s),match=s.match(rgxSFXstep2);if(match=null===match?\"$$$$$\":match[1],-1!==rgn.r1.indexOf(match))for(i=0,imax=rgxSFXstep2WithReplacements.length;i<imax;i+=1)if(us=s.replace(rgxSFXstep2WithReplacements[i].rgx,rgxSFXstep2WithReplacements[i].replacement),s!==us)return us;return s},step3=function(s){var i,imax,us,rgn=markRegions(s),match=s.match(rgxSFXstep3);if(match=null===match?\"$$$$$\":match[1],-1!==rgn.r1.indexOf(match)){for(i=0,imax=rgxSFXstep3WithReplacements.length;i<imax;i+=1)if(us=s.replace(rgxSFXstep3WithReplacements[i].rgx,rgxSFXstep3WithReplacements[i].replacement),s!==us)return us;if(/ative/.test(rgn.r2))return s.replace(/ative$/,\"\")}return s},step4=function(s){var rgn=markRegions(s),match=s.match(rgxSFXstep4Full);return match=null===match?\"$$$$$\":match[1],rgxSFXstep4Full.test(s)&&-1!==rgn.r2.indexOf(match)?rgxSFXstep4.test(s)?s.replace(rgxSFXstep4,\"\"):rgxSFXstep4ion.test(s)?s.replace(rgxSFXstep4ion,\"$1$2\"):s:s},step5=function(s){var preceding,rgn;return rgn=markRegions(s),/e$/i.test(s)?(preceding=s.replace(/e$/,\"\"),/e/.test(rgn.r2)||/e/.test(rgn.r1)&&!isShort(preceding)?preceding:s):/l$/.test(s)&&(rgn=markRegions(s)).r2&&/l$/.test(rgn.r2)?s.replace(/ll$/,\"l\"):s},stem=function(word){var str=word.toLowerCase();return str.length<3?str:exceptions1[str]?exceptions1[str]:(str=prelude(str),str=step1a(str),rgxException2.test(str)||(str=step1b(str),str=step1c(str),str=step2(str),str=step3(str),str=step4(str),str=step5(str)),str=str.replace(/3/g,\"y\"))};module.exports=stem;","const exceptions=Object.create(null),acer=\"acer\",after=\"after\",airy=\"airy\",angry=\"angry\",archer=\"archer\",arty=\"arty\",ashy=\"ashy\",assaulter=\"assaulter\",attacker=\"attacker\",backer=\"backer\",baggy=\"baggy\",balky=\"balky\",balmy=\"balmy\",bandy=\"bandy\",bargainer=\"bargainer\",barmy=\"barmy\",batty=\"batty\",baulky=\"baulky\",bawdy=\"bawdy\",bayer=\"bayer\",beady=\"beady\",beastly=\"beastly\",beater=\"beater\",beefy=\"beefy\",beery=\"beery\",bendy=\"bendy\",good=\"good\",big=\"big\",bitchy=\"bitchy\",biter=\"biter\",bitty=\"bitty\",bleary=\"bleary\",bloody=\"bloody\",bloodthirsty=\"bloodthirsty\",blowy=\"blowy\",blowsy=\"blowsy\",blowzy=\"blowzy\",blue=\"blue\",boner=\"boner\",bony=\"bony\",bonny=\"bonny\",boozy=\"boozy\",bosky=\"bosky\",bossy=\"bossy\",botchy=\"botchy\",bother=\"bother\",bouncy=\"bouncy\",bounder=\"bounder\",bower=\"bower\",brainy=\"brainy\",brashy=\"brashy\",brassy=\"brassy\",brawny=\"brawny\",breathy=\"breathy\",breezy=\"breezy\",briny=\"briny\",britisher=\"britisher\",broadcaster=\"broadcaster\",brooder=\"brooder\",broody=\"broody\",bubbly=\"bubbly\",buggy=\"buggy\",bulky=\"bulky\",bumpy=\"bumpy\",bunchy=\"bunchy\",burly=\"burly\",burry=\"burry\",burster=\"burster\",bushy=\"bushy\",busy=\"busy\",buster=\"buster\",busty=\"busty\",cagey=\"cagey\",camper=\"camper\",canny=\"canny\",canter=\"canter\",canty=\"canty\",caster=\"caster\",catchy=\"catchy\",catty=\"catty\",cer=\"cer\",chancy=\"chancy\",chary=\"chary\",chatty=\"chatty\",cheeky=\"cheeky\",cheery=\"cheery\",cheesy=\"cheesy\",chesty=\"chesty\",chewy=\"chewy\",chilly=\"chilly\",chintzy=\"chintzy\",chippy=\"chippy\",choosy=\"choosy\",choppy=\"choppy\",chubby=\"chubby\",chuffy=\"chuffy\",chummy=\"chummy\",chunky=\"chunky\",churchy=\"churchy\",clammy=\"clammy\",classy=\"classy\",cleanly=\"cleanly\",clerkly=\"clerkly\",cloudy=\"cloudy\",clubby=\"clubby\",clumsy=\"clumsy\",cocky=\"cocky\",coder=\"coder\",colly=\"colly\",comely=\"comely\",comfy=\"comfy\",corny=\"corny\",cosy=\"cosy\",costly=\"costly\",costumer=\"costumer\",counterfeiter=\"counterfeiter\",courtly=\"courtly\",cozy=\"cozy\",crabby=\"crabby\",cracker=\"cracker\",crafty=\"crafty\",craggy=\"craggy\",cranky=\"cranky\",crasher=\"crasher\",crawly=\"crawly\",crazy=\"crazy\",creamer=\"creamer\",creamy=\"creamy\",creepy=\"creepy\",crispy=\"crispy\",crumby=\"crumby\",crumbly=\"crumbly\",crummy=\"crummy\",crusty=\"crusty\",curly=\"curly\",customer=\"customer\",cute=\"cute\",daffy=\"daffy\",dainty=\"dainty\",dandy=\"dandy\",deadly=\"deadly\",dealer=\"dealer\",deserter=\"deserter\",dewy=\"dewy\",dicey=\"dicey\",dimer=\"dimer\",dim=\"dim\",dingy=\"dingy\",dinky=\"dinky\",dippy=\"dippy\",dirty=\"dirty\",dishy=\"dishy\",dizzy=\"dizzy\",dodgy=\"dodgy\",dopey=\"dopey\",dotty=\"dotty\",doughy=\"doughy\",doughty=\"doughty\",dowdy=\"dowdy\",dowie=\"dowie\",downer=\"downer\",downy=\"downy\",dozy=\"dozy\",drab=\"drab\",drafty=\"drafty\",draggy=\"draggy\",draughty=\"draughty\",dreamy=\"dreamy\",dreary=\"dreary\",dreggy=\"dreggy\",dresser=\"dresser\",dressy=\"dressy\",dry=\"dry\",drippy=\"drippy\",drowsy=\"drowsy\",dumpy=\"dumpy\",dun=\"dun\",dusky=\"dusky\",dusty=\"dusty\",early=\"early\",earthy=\"earthy\",earthly=\"earthly\",easy=\"easy\",easter=\"easter\",eastsider=\"eastsider\",edger=\"edger\",edgy=\"edgy\",eerie=\"eerie\",empty=\"empty\",faker=\"faker\",fancy=\"fancy\",far=\"far\",fat=\"fat\",fatty=\"fatty\",faulty=\"faulty\",feisty=\"feisty\",feller=\"feller\",fiddly=\"fiddly\",filmy=\"filmy\",filthy=\"filthy\",finny=\"finny\",fishy=\"fishy\",fit=\"fit\",flabby=\"flabby\",flaggy=\"flaggy\",flaky=\"flaky\",flasher=\"flasher\",flashy=\"flashy\",flat=\"flat\",flaunty=\"flaunty\",fledgy=\"fledgy\",fleecy=\"fleecy\",fleshy=\"fleshy\",fleshly=\"fleshly\",flighty=\"flighty\",flimsy=\"flimsy\",flinty=\"flinty\",floaty=\"floaty\",floppy=\"floppy\",flossy=\"flossy\",fluffy=\"fluffy\",fluky=\"fluky\",foamy=\"foamy\",foggy=\"foggy\",folder=\"folder\",folksy=\"folksy\",foolhardy=\"foolhardy\",foreigner=\"foreigner\",forest=\"forest\",founder=\"founder\",foxy=\"foxy\",fratchy=\"fratchy\",freaky=\"freaky\",free=\"free\",frenchy=\"frenchy\",friendly=\"friendly\",frisky=\"frisky\",frizzy=\"frizzy\",frizzly=\"frizzly\",frosty=\"frosty\",frouzy=\"frouzy\",frowsy=\"frowsy\",frowzy=\"frowzy\",fruity=\"fruity\",funky=\"funky\",funny=\"funny\",furry=\"furry\",fussy=\"fussy\",fusty=\"fusty\",fuzzy=\"fuzzy\",gabby=\"gabby\",gamy=\"gamy\",gammy=\"gammy\",gassy=\"gassy\",gaudy=\"gaudy\",gauzy=\"gauzy\",gawky=\"gawky\",ghastly=\"ghastly\",ghostly=\"ghostly\",giddy=\"giddy\",glad=\"glad\",glassy=\"glassy\",glib=\"glib\",gloomy=\"gloomy\",glossy=\"glossy\",glum=\"glum\",godly=\"godly\",goer=\"goer\",goner=\"goner\",goodly=\"goodly\",goofy=\"goofy\",gooey=\"gooey\",goosy=\"goosy\",gory=\"gory\",gradely=\"gradely\",grader=\"grader\",grainy=\"grainy\",grassy=\"grassy\",greasy=\"greasy\",greedy=\"greedy\",grim=\"grim\",grisly=\"grisly\",gritty=\"gritty\",grizzly=\"grizzly\",groggy=\"groggy\",groovy=\"groovy\",grotty=\"grotty\",grounder=\"grounder\",grouper=\"grouper\",grouty=\"grouty\",grubby=\"grubby\",grumpy=\"grumpy\",guest=\"guest\",guilty=\"guilty\",gummy=\"gummy\",gushy=\"gushy\",gusty=\"gusty\",gutsy=\"gutsy\",hairy=\"hairy\",halfway=\"halfway\",halter=\"halter\",hammy=\"hammy\",handy=\"handy\",happy=\"happy\",hardy=\"hardy\",hasty=\"hasty\",haughty=\"haughty\",hazy=\"hazy\",header=\"header\",heady=\"heady\",healthy=\"healthy\",hearty=\"hearty\",heavy=\"heavy\",hefty=\"hefty\",hep=\"hep\",herby=\"herby\",hind=\"hind\",hip=\"hip\",hippy=\"hippy\",hoary=\"hoary\",holy=\"holy\",homely=\"homely\",homer=\"homer\",homey=\"homey\",horny=\"horny\",horsy=\"horsy\",hot=\"hot\",humpy=\"humpy\",hunger=\"hunger\",hungry=\"hungry\",husky=\"husky\",icy=\"icy\",inky=\"inky\",insider=\"insider\",interest=\"interest\",jaggy=\"jaggy\",jammy=\"jammy\",jaunty=\"jaunty\",jazzy=\"jazzy\",jerky=\"jerky\",jointer=\"jointer\",jolly=\"jolly\",juicy=\"juicy\",jumpy=\"jumpy\",kindly=\"kindly\",kinky=\"kinky\",knotty=\"knotty\",knurly=\"knurly\",kooky=\"kooky\",lacy=\"lacy\",lairy=\"lairy\",laky=\"laky\",lander=\"lander\",lanky=\"lanky\",lathy=\"lathy\",layer=\"layer\",lazy=\"lazy\",leafy=\"leafy\",leaky=\"leaky\",leary=\"leary\",leer=\"leer\",leery=\"leery\",leggy=\"leggy\",lengthy=\"lengthy\",ler=\"ler\",leveler=\"leveler\",limy=\"limy\",lippy=\"lippy\",liter=\"liter\",lively=\"lively\",liver=\"liver\",loather=\"loather\",lofty=\"lofty\",logy=\"logy\",lonely=\"lonely\",loner=\"loner\",loony=\"loony\",loopy=\"loopy\",lordly=\"lordly\",lousy=\"lousy\",lovely=\"lovely\",lowlander=\"lowlander\",lowly=\"lowly\",lucky=\"lucky\",lumpy=\"lumpy\",luny=\"luny\",lusty=\"lusty\",mad=\"mad\",mainer=\"mainer\",maligner=\"maligner\",malty=\"malty\",mangy=\"mangy\",manky=\"manky\",manly=\"manly\",mariner=\"mariner\",marshy=\"marshy\",massy=\"massy\",matter=\"matter\",maungy=\"maungy\",mazy=\"mazy\",mealy=\"mealy\",measly=\"measly\",meaty=\"meaty\",meeter=\"meeter\",merry=\"merry\",messy=\"messy\",miffy=\"miffy\",mighty=\"mighty\",milcher=\"milcher\",milker=\"milker\",milky=\"milky\",mingy=\"mingy\",minter=\"minter\",mirky=\"mirky\",miser=\"miser\",misty=\"misty\",mocker=\"mocker\",modeler=\"modeler\",modest=\"modest\",moldy=\"moldy\",moody=\"moody\",moony=\"moony\",mothy=\"mothy\",mouldy=\"mouldy\",mousy=\"mousy\",mouthy=\"mouthy\",mucky=\"mucky\",muddy=\"muddy\",muggy=\"muggy\",multiplexer=\"multiplexer\",murky=\"murky\",mushy=\"mushy\",musky=\"musky\",muster=\"muster\",musty=\"musty\",muzzy=\"muzzy\",nappy=\"nappy\",nasty=\"nasty\",natty=\"natty\",naughty=\"naughty\",needy=\"needy\",nervy=\"nervy\",newsy=\"newsy\",nifty=\"nifty\",nippy=\"nippy\",nitty=\"nitty\",noisy=\"noisy\",northeasterner=\"northeasterner\",norther=\"norther\",northerner=\"northerner\",nosy=\"nosy\",number=\"number\",nutty=\"nutty\",offer=\"offer\",oily=\"oily\",oliver=\"oliver\",oozy=\"oozy\",opener=\"opener\",outsider=\"outsider\",overcomer=\"overcomer\",overnighter=\"overnighter\",owner=\"owner\",pally=\"pally\",palmy=\"palmy\",paltry=\"paltry\",pappy=\"pappy\",parky=\"parky\",passer=\"passer\",paster=\"paster\",pasty=\"pasty\",patchy=\"patchy\",pater=\"pater\",pawky=\"pawky\",peachy=\"peachy\",pearler=\"pearler\",pearly=\"pearly\",pedaler=\"pedaler\",peppy=\"peppy\",perky=\"perky\",pesky=\"pesky\",peter=\"peter\",petty=\"petty\",phony=\"phony\",picky=\"picky\",piggy=\"piggy\",piny=\"piny\",pitchy=\"pitchy\",pithy=\"pithy\",planer=\"planer\",plashy=\"plashy\",platy=\"platy\",player=\"player\",plucky=\"plucky\",plumber=\"plumber\",plumy=\"plumy\",plummy=\"plummy\",podgy=\"podgy\",poky=\"poky\",polisher=\"polisher\",porky=\"porky\",porter=\"porter\",portly=\"portly\",poster=\"poster\",potty=\"potty\",preachy=\"preachy\",presenter=\"presenter\",pretender=\"pretender\",pretty=\"pretty\",pricy=\"pricy\",prickly=\"prickly\",priestly=\"priestly\",primer=\"primer\",prim=\"prim\",princely=\"princely\",printer=\"printer\",prissy=\"prissy\",privateer=\"privateer\",privy=\"privy\",prompter=\"prompter\",prosy=\"prosy\",pudgy=\"pudgy\",puffer=\"puffer\",puffy=\"puffy\",pulpy=\"pulpy\",punchy=\"punchy\",puny=\"puny\",pushy=\"pushy\",pussy=\"pussy\",quaggy=\"quaggy\",quaky=\"quaky\",queasy=\"queasy\",queenly=\"queenly\",racy=\"racy\",rainy=\"rainy\",randy=\"randy\",rangy=\"rangy\",ranker=\"ranker\",ratty=\"ratty\",rattly=\"rattly\",raunchy=\"raunchy\",ready=\"ready\",recorder=\"recorder\",red=\"red\",reedy=\"reedy\",renter=\"renter\",retailer=\"retailer\",rimy=\"rimy\",risky=\"risky\",ritzy=\"ritzy\",roaster=\"roaster\",rocky=\"rocky\",roily=\"roily\",rooky=\"rooky\",roomy=\"roomy\",ropy=\"ropy\",rosy=\"rosy\",rowdy=\"rowdy\",ruddy=\"ruddy\",runny=\"runny\",rusher=\"rusher\",rushy=\"rushy\",rusty=\"rusty\",rutty=\"rutty\",sad=\"sad\",salter=\"salter\",salty=\"salty\",sampler=\"sampler\",sandy=\"sandy\",sappy=\"sappy\",sassy=\"sassy\",saucy=\"saucy\",savvy=\"savvy\",scabby=\"scabby\",scaly=\"scaly\",scanty=\"scanty\",scary=\"scary\",scraggy=\"scraggy\",scraggly=\"scraggly\",scraper=\"scraper\",scrappy=\"scrappy\",scrawny=\"scrawny\",screwy=\"screwy\",scrubby=\"scrubby\",scruffy=\"scruffy\",scungy=\"scungy\",scurvy=\"scurvy\",seamy=\"seamy\",seconder=\"seconder\",seedy=\"seedy\",seemly=\"seemly\",serer=\"serer\",sexy=\"sexy\",shabby=\"shabby\",shady=\"shady\",shaggy=\"shaggy\",shaky=\"shaky\",shapely=\"shapely\",shy=\"shy\",shifty=\"shifty\",shiny=\"shiny\",shirty=\"shirty\",shoddy=\"shoddy\",showy=\"showy\",shrubby=\"shrubby\",sickly=\"sickly\",sightly=\"sightly\",signaler=\"signaler\",signer=\"signer\",silky=\"silky\",silly=\"silly\",sketchy=\"sketchy\",skewer=\"skewer\",skimpy=\"skimpy\",skinny=\"skinny\",slaphappy=\"slaphappy\",slaty=\"slaty\",slaver=\"slaver\",sleazy=\"sleazy\",sleepy=\"sleepy\",sly=\"sly\",slimy=\"slimy\",slim=\"slim\",slimsy=\"slimsy\",slinky=\"slinky\",slippy=\"slippy\",sloppy=\"sloppy\",smarmy=\"smarmy\",smelly=\"smelly\",smoky=\"smoky\",smug=\"smug\",snaky=\"snaky\",snappy=\"snappy\",snatchy=\"snatchy\",snazzy=\"snazzy\",sneaker=\"sneaker\",sniffy=\"sniffy\",snooty=\"snooty\",snotty=\"snotty\",snowy=\"snowy\",snuffer=\"snuffer\",snuffy=\"snuffy\",snug=\"snug\",soapy=\"soapy\",soggy=\"soggy\",solder=\"solder\",sonsy=\"sonsy\",sooty=\"sooty\",soppy=\"soppy\",sorry=\"sorry\",soupy=\"soupy\",souther=\"souther\",southerner=\"southerner\",speedy=\"speedy\",spicy=\"spicy\",spiffy=\"spiffy\",spiky=\"spiky\",spindly=\"spindly\",spiny=\"spiny\",splashy=\"splashy\",spongy=\"spongy\",spooky=\"spooky\",spoony=\"spoony\",sporty=\"sporty\",spotty=\"spotty\",spreader=\"spreader\",spry=\"spry\",sprightly=\"sprightly\",springer=\"springer\",springy=\"springy\",squashy=\"squashy\",squat=\"squat\",squatty=\"squatty\",squiffy=\"squiffy\",stagy=\"stagy\",stalky=\"stalky\",stapler=\"stapler\",starchy=\"starchy\",starer=\"starer\",starest=\"starest\",starry=\"starry\",stately=\"stately\",steady=\"steady\",stealthy=\"stealthy\",steamy=\"steamy\",stingy=\"stingy\",striper=\"striper\",stocker=\"stocker\",stocky=\"stocky\",stodgy=\"stodgy\",stony=\"stony\",stormy=\"stormy\",streaky=\"streaky\",streamy=\"streamy\",stretcher=\"stretcher\",stretchy=\"stretchy\",stringy=\"stringy\",stripy=\"stripy\",strong=\"strong\",stroppy=\"stroppy\",stuffy=\"stuffy\",stumpy=\"stumpy\",sturdy=\"sturdy\",submariner=\"submariner\",sulky=\"sulky\",sultry=\"sultry\",sunny=\"sunny\",surly=\"surly\",swagger=\"swagger\",swanky=\"swanky\",swarthy=\"swarthy\",sweaty=\"sweaty\",tacky=\"tacky\",talky=\"talky\",tangy=\"tangy\",tan=\"tan\",tardy=\"tardy\",tasty=\"tasty\",tatty=\"tatty\",tawdry=\"tawdry\",techy=\"techy\",teenager=\"teenager\",teeny=\"teeny\",teetotaler=\"teetotaler\",tester=\"tester\",testy=\"testy\",tetchy=\"tetchy\",thin=\"thin\",thirsty=\"thirsty\",thorny=\"thorny\",thready=\"thready\",thrifty=\"thrifty\",throaty=\"throaty\",tidy=\"tidy\",timely=\"timely\",tiny=\"tiny\",tinny=\"tinny\",tipsy=\"tipsy\",tony=\"tony\",toothy=\"toothy\",toper=\"toper\",touchy=\"touchy\",trader=\"trader\",trashy=\"trashy\",trendy=\"trendy\",tricky=\"tricky\",tricksy=\"tricksy\",trimer=\"trimer\",trim=\"trim\",true1=\"true\",trusty=\"trusty\",tubby=\"tubby\",turfy=\"turfy\",tweedy=\"tweedy\",twiggy=\"twiggy\",ugly=\"ugly\",unfriendly=\"unfriendly\",ungainly=\"ungainly\",ungodly=\"ungodly\",unhappy=\"unhappy\",unhealthy=\"unhealthy\",unholy=\"unholy\",unruly=\"unruly\",untidy=\"untidy\",vasty=\"vasty\",vest=\"vest\",viewy=\"viewy\",wacky=\"wacky\",wan=\"wan\",wary=\"wary\",washy=\"washy\",waster=\"waster\",wavy=\"wavy\",waxy=\"waxy\",weakly=\"weakly\",wealthy=\"wealthy\",weary=\"weary\",webby=\"webby\",weedy=\"weedy\",weeny=\"weeny\",weensy=\"weensy\",weepy=\"weepy\",weighty=\"weighty\",welsher=\"welsher\",wet=\"wet\",whacky=\"whacky\",whimsy=\"whimsy\",wholesaler=\"wholesaler\",wieldy=\"wieldy\",wily=\"wily\",windy=\"windy\",winy=\"winy\",wintery=\"wintery\",wintry=\"wintry\",wiry=\"wiry\",wispy=\"wispy\",witty=\"witty\",wonky=\"wonky\",woody=\"woody\",woodsy=\"woodsy\",woolly=\"woolly\",woozy=\"woozy\",wordy=\"wordy\",worldly=\"worldly\",wormy=\"wormy\",bad=\"bad\",worthy=\"worthy\",wry=\"wry\",yare=\"yare\",yeasty=\"yeasty\",young=\"young\",yummy=\"yummy\",zany=\"zany\",zippy=\"zippy\";exceptions.acer=acer,exceptions.after=after,exceptions.airier=airy,exceptions.airiest=airy,exceptions.angrier=angry,exceptions.angriest=angry,exceptions.archer=archer,exceptions.artier=arty,exceptions.artiest=arty,exceptions.ashier=ashy,exceptions.ashiest=ashy,exceptions.assaulter=assaulter,exceptions.attacker=attacker,exceptions.backer=backer,exceptions.baggier=baggy,exceptions.baggiest=baggy,exceptions.balkier=balky,exceptions.balkiest=balky,exceptions.balmier=balmy,exceptions.balmiest=balmy,exceptions.bandier=bandy,exceptions.bandiest=bandy,exceptions.bargainer=bargainer,exceptions.barmier=barmy,exceptions.barmiest=barmy,exceptions.battier=batty,exceptions.battiest=batty,exceptions.baulkier=baulky,exceptions.baulkiest=baulky,exceptions.bawdier=bawdy,exceptions.bawdiest=bawdy,exceptions.bayer=bayer,exceptions.beadier=beady,exceptions.beadiest=beady,exceptions.beastlier=beastly,exceptions.beastliest=beastly,exceptions.beater=beater,exceptions.beefier=beefy,exceptions.beefiest=beefy,exceptions.beerier=beery,exceptions.beeriest=beery,exceptions.bendier=bendy,exceptions.bendiest=bendy,exceptions.best=good,exceptions.better=good,exceptions.bigger=big,exceptions.biggest=big,exceptions.bitchier=bitchy,exceptions.bitchiest=bitchy,exceptions.biter=biter,exceptions.bittier=bitty,exceptions.bittiest=bitty,exceptions.blearier=bleary,exceptions.bleariest=bleary,exceptions.bloodier=bloody,exceptions.bloodiest=bloody,exceptions.bloodthirstier=bloodthirsty,exceptions.bloodthirstiest=bloodthirsty,exceptions.blowier=blowy,exceptions.blowiest=blowy,exceptions.blowsier=blowsy,exceptions.blowsiest=blowsy,exceptions.blowzier=blowzy,exceptions.blowziest=blowzy,exceptions.bluer=blue,exceptions.bluest=blue,exceptions.boner=boner,exceptions.bonier=bony,exceptions.boniest=bony,exceptions.bonnier=bonny,exceptions.bonniest=bonny,exceptions.boozier=boozy,exceptions.booziest=boozy,exceptions.boskier=bosky,exceptions.boskiest=bosky,exceptions.bossier=bossy,exceptions.bossiest=bossy,exceptions.botchier=botchy,exceptions.botchiest=botchy,exceptions.bother=bother,exceptions.bouncier=bouncy,exceptions.bounciest=bouncy,exceptions.bounder=bounder,exceptions.bower=bower,exceptions.brainier=brainy,exceptions.brainiest=brainy,exceptions.brashier=brashy,exceptions.brashiest=brashy,exceptions.brassier=brassy,exceptions.brassiest=brassy,exceptions.brawnier=brawny,exceptions.brawniest=brawny,exceptions.breathier=breathy,exceptions.breathiest=breathy,exceptions.breezier=breezy,exceptions.breeziest=breezy,exceptions.brinier=briny,exceptions.briniest=briny,exceptions.britisher=britisher,exceptions.broadcaster=broadcaster,exceptions.brooder=brooder,exceptions.broodier=broody,exceptions.broodiest=broody,exceptions.bubblier=bubbly,exceptions.bubbliest=bubbly,exceptions.buggier=buggy,exceptions.buggiest=buggy,exceptions.bulkier=bulky,exceptions.bulkiest=bulky,exceptions.bumpier=bumpy,exceptions.bumpiest=bumpy,exceptions.bunchier=bunchy,exceptions.bunchiest=bunchy,exceptions.burlier=burly,exceptions.burliest=burly,exceptions.burrier=burry,exceptions.burriest=burry,exceptions.burster=burster,exceptions.bushier=bushy,exceptions.bushiest=bushy,exceptions.busier=busy,exceptions.busiest=busy,exceptions.buster=buster,exceptions.bustier=busty,exceptions.bustiest=busty,exceptions.cagier=cagey,exceptions.cagiest=cagey,exceptions.camper=camper,exceptions.cannier=canny,exceptions.canniest=canny,exceptions.canter=canter,exceptions.cantier=canty,exceptions.cantiest=canty,exceptions.caster=caster,exceptions.catchier=catchy,exceptions.catchiest=catchy,exceptions.cattier=catty,exceptions.cattiest=catty,exceptions.cer=cer,exceptions.chancier=chancy,exceptions.chanciest=chancy,exceptions.charier=chary,exceptions.chariest=chary,exceptions.chattier=chatty,exceptions.chattiest=chatty,exceptions.cheekier=cheeky,exceptions.cheekiest=cheeky,exceptions.cheerier=cheery,exceptions.cheeriest=cheery,exceptions.cheesier=cheesy,exceptions.cheesiest=cheesy,exceptions.chestier=chesty,exceptions.chestiest=chesty,exceptions.chewier=chewy,exceptions.chewiest=chewy,exceptions.chillier=chilly,exceptions.chilliest=chilly,exceptions.chintzier=chintzy,exceptions.chintziest=chintzy,exceptions.chippier=chippy,exceptions.chippiest=chippy,exceptions.choosier=choosy,exceptions.choosiest=choosy,exceptions.choppier=choppy,exceptions.choppiest=choppy,exceptions.chubbier=chubby,exceptions.chubbiest=chubby,exceptions.chuffier=chuffy,exceptions.chuffiest=chuffy,exceptions.chummier=chummy,exceptions.chummiest=chummy,exceptions.chunkier=chunky,exceptions.chunkiest=chunky,exceptions.churchier=churchy,exceptions.churchiest=churchy,exceptions.clammier=clammy,exceptions.clammiest=clammy,exceptions.classier=classy,exceptions.classiest=classy,exceptions.cleanlier=cleanly,exceptions.cleanliest=cleanly,exceptions.clerklier=clerkly,exceptions.clerkliest=clerkly,exceptions.cloudier=cloudy,exceptions.cloudiest=cloudy,exceptions.clubbier=clubby,exceptions.clubbiest=clubby,exceptions.clumsier=clumsy,exceptions.clumsiest=clumsy,exceptions.cockier=cocky,exceptions.cockiest=cocky,exceptions.coder=coder,exceptions.collier=colly,exceptions.colliest=colly,exceptions.comelier=comely,exceptions.comeliest=comely,exceptions.comfier=comfy,exceptions.comfiest=comfy,exceptions.cornier=corny,exceptions.corniest=corny,exceptions.cosier=cosy,exceptions.cosiest=cosy,exceptions.costlier=costly,exceptions.costliest=costly,exceptions.costumer=costumer,exceptions.counterfeiter=counterfeiter,exceptions.courtlier=courtly,exceptions.courtliest=courtly,exceptions.cozier=cozy,exceptions.coziest=cozy,exceptions.crabbier=crabby,exceptions.crabbiest=crabby,exceptions.cracker=cracker,exceptions.craftier=crafty,exceptions.craftiest=crafty,exceptions.craggier=craggy,exceptions.craggiest=craggy,exceptions.crankier=cranky,exceptions.crankiest=cranky,exceptions.crasher=crasher,exceptions.crawlier=crawly,exceptions.crawliest=crawly,exceptions.crazier=crazy,exceptions.craziest=crazy,exceptions.creamer=creamer,exceptions.creamier=creamy,exceptions.creamiest=creamy,exceptions.creepier=creepy,exceptions.creepiest=creepy,exceptions.crispier=crispy,exceptions.crispiest=crispy,exceptions.crumbier=crumby,exceptions.crumbiest=crumby,exceptions.crumblier=crumbly,exceptions.crumbliest=crumbly,exceptions.crummier=crummy,exceptions.crummiest=crummy,exceptions.crustier=crusty,exceptions.crustiest=crusty,exceptions.curlier=curly,exceptions.curliest=curly,exceptions.customer=customer,exceptions.cuter=cute,exceptions.daffier=daffy,exceptions.daffiest=daffy,exceptions.daintier=dainty,exceptions.daintiest=dainty,exceptions.dandier=dandy,exceptions.dandiest=dandy,exceptions.deadlier=deadly,exceptions.deadliest=deadly,exceptions.dealer=dealer,exceptions.deserter=deserter,exceptions.dewier=dewy,exceptions.dewiest=dewy,exceptions.dicier=dicey,exceptions.diciest=dicey,exceptions.dimer=dimer,exceptions.dimmer=dim,exceptions.dimmest=dim,exceptions.dingier=dingy,exceptions.dingiest=dingy,exceptions.dinkier=dinky,exceptions.dinkiest=dinky,exceptions.dippier=dippy,exceptions.dippiest=dippy,exceptions.dirtier=dirty,exceptions.dirtiest=dirty,exceptions.dishier=dishy,exceptions.dishiest=dishy,exceptions.dizzier=dizzy,exceptions.dizziest=dizzy,exceptions.dodgier=dodgy,exceptions.dodgiest=dodgy,exceptions.dopier=dopey,exceptions.dopiest=dopey,exceptions.dottier=dotty,exceptions.dottiest=dotty,exceptions.doughier=doughy,exceptions.doughiest=doughy,exceptions.doughtier=doughty,exceptions.doughtiest=doughty,exceptions.dowdier=dowdy,exceptions.dowdiest=dowdy,exceptions.dowier=dowie,exceptions.dowiest=dowie,exceptions.downer=downer,exceptions.downier=downy,exceptions.downiest=downy,exceptions.dozier=dozy,exceptions.doziest=dozy,exceptions.drabber=drab,exceptions.drabbest=drab,exceptions.draftier=drafty,exceptions.draftiest=drafty,exceptions.draggier=draggy,exceptions.draggiest=draggy,exceptions.draughtier=draughty,exceptions.draughtiest=draughty,exceptions.dreamier=dreamy,exceptions.dreamiest=dreamy,exceptions.drearier=dreary,exceptions.dreariest=dreary,exceptions.dreggier=dreggy,exceptions.dreggiest=dreggy,exceptions.dresser=dresser,exceptions.dressier=dressy,exceptions.dressiest=dressy,exceptions.drier=dry,exceptions.driest=dry,exceptions.drippier=drippy,exceptions.drippiest=drippy,exceptions.drowsier=drowsy,exceptions.drowsiest=drowsy,exceptions.dryer=dry,exceptions.dryest=dry,exceptions.dumpier=dumpy,exceptions.dumpiest=dumpy,exceptions.dunner=dun,exceptions.dunnest=dun,exceptions.duskier=dusky,exceptions.duskiest=dusky,exceptions.dustier=dusty,exceptions.dustiest=dusty,exceptions.earlier=early,exceptions.earliest=early,exceptions.earthier=earthy,exceptions.earthiest=earthy,exceptions.earthlier=earthly,exceptions.earthliest=earthly,exceptions.easier=easy,exceptions.easiest=easy,exceptions.easter=easter,exceptions.eastsider=eastsider,exceptions.edger=edger,exceptions.edgier=edgy,exceptions.edgiest=edgy,exceptions.eerier=eerie,exceptions.eeriest=eerie,exceptions.emptier=empty,exceptions.emptiest=empty,exceptions.faker=faker,exceptions.fancier=fancy,exceptions.fanciest=fancy,exceptions.furthest=far,exceptions.farthest=far,exceptions.fatter=fat,exceptions.fattest=fat,exceptions.fattier=fatty,exceptions.fattiest=fatty,exceptions.faultier=faulty,exceptions.faultiest=faulty,exceptions.feistier=feisty,exceptions.feistiest=feisty,exceptions.feller=feller,exceptions.fiddlier=fiddly,exceptions.fiddliest=fiddly,exceptions.filmier=filmy,exceptions.filmiest=filmy,exceptions.filthier=filthy,exceptions.filthiest=filthy,exceptions.finnier=finny,exceptions.finniest=finny,exceptions.fishier=fishy,exceptions.fishiest=fishy,exceptions.fitter=fit,exceptions.fittest=fit,exceptions.flabbier=flabby,exceptions.flabbiest=flabby,exceptions.flaggier=flaggy,exceptions.flaggiest=flaggy,exceptions.flakier=flaky,exceptions.flakiest=flaky,exceptions.flasher=flasher,exceptions.flashier=flashy,exceptions.flashiest=flashy,exceptions.flatter=flat,exceptions.flattest=flat,exceptions.flauntier=flaunty,exceptions.flauntiest=flaunty,exceptions.fledgier=fledgy,exceptions.fledgiest=fledgy,exceptions.fleecier=fleecy,exceptions.fleeciest=fleecy,exceptions.fleshier=fleshy,exceptions.fleshiest=fleshy,exceptions.fleshlier=fleshly,exceptions.fleshliest=fleshly,exceptions.flightier=flighty,exceptions.flightiest=flighty,exceptions.flimsier=flimsy,exceptions.flimsiest=flimsy,exceptions.flintier=flinty,exceptions.flintiest=flinty,exceptions.floatier=floaty,exceptions.floatiest=floaty,exceptions.floppier=floppy,exceptions.floppiest=floppy,exceptions.flossier=flossy,exceptions.flossiest=flossy,exceptions.fluffier=fluffy,exceptions.fluffiest=fluffy,exceptions.flukier=fluky,exceptions.flukiest=fluky,exceptions.foamier=foamy,exceptions.foamiest=foamy,exceptions.foggier=foggy,exceptions.foggiest=foggy,exceptions.folder=folder,exceptions.folksier=folksy,exceptions.folksiest=folksy,exceptions.foolhardier=foolhardy,exceptions.foolhardiest=foolhardy,exceptions.foreigner=foreigner,exceptions.forest=forest,exceptions.founder=founder,exceptions.foxier=foxy,exceptions.foxiest=foxy,exceptions.fratchier=fratchy,exceptions.fratchiest=fratchy,exceptions.freakier=freaky,exceptions.freakiest=freaky,exceptions.freer=free,exceptions.freest=free,exceptions.frenchier=frenchy,exceptions.frenchiest=frenchy,exceptions.friendlier=friendly,exceptions.friendliest=friendly,exceptions.friskier=frisky,exceptions.friskiest=frisky,exceptions.frizzier=frizzy,exceptions.frizziest=frizzy,exceptions.frizzlier=frizzly,exceptions.frizzliest=frizzly,exceptions.frostier=frosty,exceptions.frostiest=frosty,exceptions.frouzier=frouzy,exceptions.frouziest=frouzy,exceptions.frowsier=frowsy,exceptions.frowsiest=frowsy,exceptions.frowzier=frowzy,exceptions.frowziest=frowzy,exceptions.fruitier=fruity,exceptions.fruitiest=fruity,exceptions.funkier=funky,exceptions.funkiest=funky,exceptions.funnier=funny,exceptions.funniest=funny,exceptions.furrier=furry,exceptions.furriest=furry,exceptions.fussier=fussy,exceptions.fussiest=fussy,exceptions.fustier=fusty,exceptions.fustiest=fusty,exceptions.fuzzier=fuzzy,exceptions.fuzziest=fuzzy,exceptions.gabbier=gabby,exceptions.gabbiest=gabby,exceptions.gamier=gamy,exceptions.gamiest=gamy,exceptions.gammier=gammy,exceptions.gammiest=gammy,exceptions.gassier=gassy,exceptions.gassiest=gassy,exceptions.gaudier=gaudy,exceptions.gaudiest=gaudy,exceptions.gauzier=gauzy,exceptions.gauziest=gauzy,exceptions.gawkier=gawky,exceptions.gawkiest=gawky,exceptions.ghastlier=ghastly,exceptions.ghastliest=ghastly,exceptions.ghostlier=ghostly,exceptions.ghostliest=ghostly,exceptions.giddier=giddy,exceptions.giddiest=giddy,exceptions.gladder=glad,exceptions.gladdest=glad,exceptions.glassier=glassy,exceptions.glassiest=glassy,exceptions.glibber=glib,exceptions.glibbest=glib,exceptions.gloomier=gloomy,exceptions.gloomiest=gloomy,exceptions.glossier=glossy,exceptions.glossiest=glossy,exceptions.glummer=glum,exceptions.glummest=glum,exceptions.godlier=godly,exceptions.godliest=godly,exceptions.goer=goer,exceptions.goner=goner,exceptions.goodlier=goodly,exceptions.goodliest=goodly,exceptions.goofier=goofy,exceptions.goofiest=goofy,exceptions.gooier=gooey,exceptions.gooiest=gooey,exceptions.goosier=goosy,exceptions.goosiest=goosy,exceptions.gorier=gory,exceptions.goriest=gory,exceptions.gradelier=gradely,exceptions.gradeliest=gradely,exceptions.grader=grader,exceptions.grainier=grainy,exceptions.grainiest=grainy,exceptions.grassier=grassy,exceptions.grassiest=grassy,exceptions.greasier=greasy,exceptions.greasiest=greasy,exceptions.greedier=greedy,exceptions.greediest=greedy,exceptions.grimmer=grim,exceptions.grimmest=grim,exceptions.grislier=grisly,exceptions.grisliest=grisly,exceptions.grittier=gritty,exceptions.grittiest=gritty,exceptions.grizzlier=grizzly,exceptions.grizzliest=grizzly,exceptions.groggier=groggy,exceptions.groggiest=groggy,exceptions.groovier=groovy,exceptions.grooviest=groovy,exceptions.grottier=grotty,exceptions.grottiest=grotty,exceptions.grounder=grounder,exceptions.grouper=grouper,exceptions.groutier=grouty,exceptions.groutiest=grouty,exceptions.grubbier=grubby,exceptions.grubbiest=grubby,exceptions.grumpier=grumpy,exceptions.grumpiest=grumpy,exceptions.guest=guest,exceptions.guiltier=guilty,exceptions.guiltiest=guilty,exceptions.gummier=gummy,exceptions.gummiest=gummy,exceptions.gushier=gushy,exceptions.gushiest=gushy,exceptions.gustier=gusty,exceptions.gustiest=gusty,exceptions.gutsier=gutsy,exceptions.gutsiest=gutsy,exceptions.hairier=hairy,exceptions.hairiest=hairy,exceptions.halfways=halfway,exceptions.halter=halter,exceptions.hammier=hammy,exceptions.hammiest=hammy,exceptions.handier=handy,exceptions.handiest=handy,exceptions.happier=happy,exceptions.happiest=happy,exceptions.hardier=hardy,exceptions.hardiest=hardy,exceptions.hastier=hasty,exceptions.hastiest=hasty,exceptions.haughtier=haughty,exceptions.haughtiest=haughty,exceptions.hazier=hazy,exceptions.haziest=hazy,exceptions.header=header,exceptions.headier=heady,exceptions.headiest=heady,exceptions.healthier=healthy,exceptions.healthiest=healthy,exceptions.heartier=hearty,exceptions.heartiest=hearty,exceptions.heavier=heavy,exceptions.heaviest=heavy,exceptions.heftier=hefty,exceptions.heftiest=hefty,exceptions.hepper=hep,exceptions.heppest=hep,exceptions.herbier=herby,exceptions.herbiest=herby,exceptions.hinder=hind,exceptions.hipper=hip,exceptions.hippest=hip,exceptions.hippier=hippy,exceptions.hippiest=hippy,exceptions.hoarier=hoary,exceptions.hoariest=hoary,exceptions.holier=holy,exceptions.holiest=holy,exceptions.homelier=homely,exceptions.homeliest=homely,exceptions.homer=homer,exceptions.homier=homey,exceptions.homiest=homey,exceptions.hornier=horny,exceptions.horniest=horny,exceptions.horsier=horsy,exceptions.horsiest=horsy,exceptions.hotter=hot,exceptions.hottest=hot,exceptions.humpier=humpy,exceptions.humpiest=humpy,exceptions.hunger=hunger,exceptions.hungrier=hungry,exceptions.hungriest=hungry,exceptions.huskier=husky,exceptions.huskiest=husky,exceptions.icier=icy,exceptions.iciest=icy,exceptions.inkier=inky,exceptions.inkiest=inky,exceptions.insider=insider,exceptions.interest=interest,exceptions.jaggier=jaggy,exceptions.jaggiest=jaggy,exceptions.jammier=jammy,exceptions.jammiest=jammy,exceptions.jauntier=jaunty,exceptions.jauntiest=jaunty,exceptions.jazzier=jazzy,exceptions.jazziest=jazzy,exceptions.jerkier=jerky,exceptions.jerkiest=jerky,exceptions.jointer=jointer,exceptions.jollier=jolly,exceptions.jolliest=jolly,exceptions.juicier=juicy,exceptions.juiciest=juicy,exceptions.jumpier=jumpy,exceptions.jumpiest=jumpy,exceptions.kindlier=kindly,exceptions.kindliest=kindly,exceptions.kinkier=kinky,exceptions.kinkiest=kinky,exceptions.knottier=knotty,exceptions.knottiest=knotty,exceptions.knurlier=knurly,exceptions.knurliest=knurly,exceptions.kookier=kooky,exceptions.kookiest=kooky,exceptions.lacier=lacy,exceptions.laciest=lacy,exceptions.lairier=lairy,exceptions.lairiest=lairy,exceptions.lakier=laky,exceptions.lakiest=laky,exceptions.lander=lander,exceptions.lankier=lanky,exceptions.lankiest=lanky,exceptions.lathier=lathy,exceptions.lathiest=lathy,exceptions.layer=layer,exceptions.lazier=lazy,exceptions.laziest=lazy,exceptions.leafier=leafy,exceptions.leafiest=leafy,exceptions.leakier=leaky,exceptions.leakiest=leaky,exceptions.learier=leary,exceptions.leariest=leary,exceptions.leer=leer,exceptions.leerier=leery,exceptions.leeriest=leery,exceptions.leggier=leggy,exceptions.leggiest=leggy,exceptions.lengthier=lengthy,exceptions.lengthiest=lengthy,exceptions.ler=ler,exceptions.leveler=leveler,exceptions.limier=limy,exceptions.limiest=limy,exceptions.lippier=lippy,exceptions.lippiest=lippy,exceptions.liter=liter,exceptions.livelier=lively,exceptions.liveliest=lively,exceptions.liver=liver,exceptions.loather=loather,exceptions.loftier=lofty,exceptions.loftiest=lofty,exceptions.logier=logy,exceptions.logiest=logy,exceptions.lonelier=lonely,exceptions.loneliest=lonely,exceptions.loner=loner,exceptions.loonier=loony,exceptions.looniest=loony,exceptions.loopier=loopy,exceptions.loopiest=loopy,exceptions.lordlier=lordly,exceptions.lordliest=lordly,exceptions.lousier=lousy,exceptions.lousiest=lousy,exceptions.lovelier=lovely,exceptions.loveliest=lovely,exceptions.lowlander=lowlander,exceptions.lowlier=lowly,exceptions.lowliest=lowly,exceptions.luckier=lucky,exceptions.luckiest=lucky,exceptions.lumpier=lumpy,exceptions.lumpiest=lumpy,exceptions.lunier=luny,exceptions.luniest=luny,exceptions.lustier=lusty,exceptions.lustiest=lusty,exceptions.madder=mad,exceptions.maddest=mad,exceptions.mainer=mainer,exceptions.maligner=maligner,exceptions.maltier=malty,exceptions.maltiest=malty,exceptions.mangier=mangy,exceptions.mangiest=mangy,exceptions.mankier=manky,exceptions.mankiest=manky,exceptions.manlier=manly,exceptions.manliest=manly,exceptions.mariner=mariner,exceptions.marshier=marshy,exceptions.marshiest=marshy,exceptions.massier=massy,exceptions.massiest=massy,exceptions.matter=matter,exceptions.maungier=maungy,exceptions.maungiest=maungy,exceptions.mazier=mazy,exceptions.maziest=mazy,exceptions.mealier=mealy,exceptions.mealiest=mealy,exceptions.measlier=measly,exceptions.measliest=measly,exceptions.meatier=meaty,exceptions.meatiest=meaty,exceptions.meeter=meeter,exceptions.merrier=merry,exceptions.merriest=merry,exceptions.messier=messy,exceptions.messiest=messy,exceptions.miffier=miffy,exceptions.miffiest=miffy,exceptions.mightier=mighty,exceptions.mightiest=mighty,exceptions.milcher=milcher,exceptions.milker=milker,exceptions.milkier=milky,exceptions.milkiest=milky,exceptions.mingier=mingy,exceptions.mingiest=mingy,exceptions.minter=minter,exceptions.mirkier=mirky,exceptions.mirkiest=mirky,exceptions.miser=miser,exceptions.mistier=misty,exceptions.mistiest=misty,exceptions.mocker=mocker,exceptions.modeler=modeler,exceptions.modest=modest,exceptions.moldier=moldy,exceptions.moldiest=moldy,exceptions.moodier=moody,exceptions.moodiest=moody,exceptions.moonier=moony,exceptions.mooniest=moony,exceptions.mothier=mothy,exceptions.mothiest=mothy,exceptions.mouldier=mouldy,exceptions.mouldiest=mouldy,exceptions.mousier=mousy,exceptions.mousiest=mousy,exceptions.mouthier=mouthy,exceptions.mouthiest=mouthy,exceptions.muckier=mucky,exceptions.muckiest=mucky,exceptions.muddier=muddy,exceptions.muddiest=muddy,exceptions.muggier=muggy,exceptions.muggiest=muggy,exceptions.multiplexer=multiplexer,exceptions.murkier=murky,exceptions.murkiest=murky,exceptions.mushier=mushy,exceptions.mushiest=mushy,exceptions.muskier=musky,exceptions.muskiest=musky,exceptions.muster=muster,exceptions.mustier=musty,exceptions.mustiest=musty,exceptions.muzzier=muzzy,exceptions.muzziest=muzzy,exceptions.nappier=nappy,exceptions.nappiest=nappy,exceptions.nastier=nasty,exceptions.nastiest=nasty,exceptions.nattier=natty,exceptions.nattiest=natty,exceptions.naughtier=naughty,exceptions.naughtiest=naughty,exceptions.needier=needy,exceptions.neediest=needy,exceptions.nervier=nervy;exceptions.nerviest=nervy,exceptions.newsier=newsy,exceptions.newsiest=newsy,exceptions.niftier=nifty,exceptions.niftiest=nifty,exceptions.nippier=nippy,exceptions.nippiest=nippy,exceptions.nittier=nitty,exceptions.nittiest=nitty,exceptions.noisier=noisy,exceptions.noisiest=noisy,exceptions.northeasterner=northeasterner,exceptions.norther=norther,exceptions.northerner=northerner,exceptions.nosier=nosy,exceptions.nosiest=nosy,exceptions.number=number,exceptions.nuttier=nutty,exceptions.nuttiest=nutty,exceptions.offer=offer,exceptions.oilier=oily,exceptions.oiliest=oily,exceptions.oliver=oliver,exceptions.oozier=oozy,exceptions.ooziest=oozy,exceptions.opener=opener,exceptions.outsider=outsider,exceptions.overcomer=overcomer,exceptions.overnighter=overnighter,exceptions.owner=owner,exceptions.pallier=pally,exceptions.palliest=pally,exceptions.palmier=palmy,exceptions.palmiest=palmy,exceptions.paltrier=paltry,exceptions.paltriest=paltry,exceptions.pappier=pappy,exceptions.pappiest=pappy,exceptions.parkier=parky,exceptions.parkiest=parky,exceptions.passer=passer,exceptions.paster=paster,exceptions.pastier=pasty,exceptions.pastiest=pasty,exceptions.patchier=patchy,exceptions.patchiest=patchy,exceptions.pater=pater,exceptions.pawkier=pawky,exceptions.pawkiest=pawky,exceptions.peachier=peachy,exceptions.peachiest=peachy,exceptions.pearler=pearler,exceptions.pearlier=pearly,exceptions.pearliest=pearly,exceptions.pedaler=pedaler,exceptions.peppier=peppy,exceptions.peppiest=peppy,exceptions.perkier=perky,exceptions.perkiest=perky,exceptions.peskier=pesky,exceptions.peskiest=pesky,exceptions.peter=peter,exceptions.pettier=petty,exceptions.pettiest=petty,exceptions.phonier=phony,exceptions.phoniest=phony,exceptions.pickier=picky,exceptions.pickiest=picky,exceptions.piggier=piggy,exceptions.piggiest=piggy,exceptions.pinier=piny,exceptions.piniest=piny,exceptions.pitchier=pitchy,exceptions.pitchiest=pitchy,exceptions.pithier=pithy,exceptions.pithiest=pithy,exceptions.planer=planer,exceptions.plashier=plashy,exceptions.plashiest=plashy,exceptions.platier=platy,exceptions.platiest=platy,exceptions.player=player,exceptions.pluckier=plucky,exceptions.pluckiest=plucky,exceptions.plumber=plumber,exceptions.plumier=plumy,exceptions.plumiest=plumy,exceptions.plummier=plummy,exceptions.plummiest=plummy,exceptions.podgier=podgy,exceptions.podgiest=podgy,exceptions.pokier=poky,exceptions.pokiest=poky,exceptions.polisher=polisher,exceptions.porkier=porky,exceptions.porkiest=porky,exceptions.porter=porter,exceptions.portlier=portly,exceptions.portliest=portly,exceptions.poster=poster,exceptions.pottier=potty,exceptions.pottiest=potty,exceptions.preachier=preachy,exceptions.preachiest=preachy,exceptions.presenter=presenter,exceptions.pretender=pretender,exceptions.prettier=pretty,exceptions.prettiest=pretty,exceptions.pricier=pricy,exceptions.priciest=pricy,exceptions.pricklier=prickly,exceptions.prickliest=prickly,exceptions.priestlier=priestly,exceptions.priestliest=priestly,exceptions.primer=primer,exceptions.primmer=prim,exceptions.primmest=prim,exceptions.princelier=princely,exceptions.princeliest=princely,exceptions.printer=printer,exceptions.prissier=prissy,exceptions.prissiest=prissy,exceptions.privateer=privateer,exceptions.privier=privy,exceptions.priviest=privy,exceptions.prompter=prompter,exceptions.prosier=prosy,exceptions.prosiest=prosy,exceptions.pudgier=pudgy,exceptions.pudgiest=pudgy,exceptions.puffer=puffer,exceptions.puffier=puffy,exceptions.puffiest=puffy,exceptions.pulpier=pulpy,exceptions.pulpiest=pulpy,exceptions.punchier=punchy,exceptions.punchiest=punchy,exceptions.punier=puny,exceptions.puniest=puny,exceptions.pushier=pushy,exceptions.pushiest=pushy,exceptions.pussier=pussy,exceptions.pussiest=pussy,exceptions.quaggier=quaggy,exceptions.quaggiest=quaggy,exceptions.quakier=quaky,exceptions.quakiest=quaky,exceptions.queasier=queasy,exceptions.queasiest=queasy,exceptions.queenlier=queenly,exceptions.queenliest=queenly,exceptions.racier=racy,exceptions.raciest=racy,exceptions.rainier=rainy,exceptions.rainiest=rainy,exceptions.randier=randy,exceptions.randiest=randy,exceptions.rangier=rangy,exceptions.rangiest=rangy,exceptions.ranker=ranker,exceptions.rattier=ratty,exceptions.rattiest=ratty,exceptions.rattlier=rattly,exceptions.rattliest=rattly,exceptions.raunchier=raunchy,exceptions.raunchiest=raunchy,exceptions.readier=ready,exceptions.readiest=ready,exceptions.recorder=recorder,exceptions.redder=red,exceptions.reddest=red,exceptions.reedier=reedy,exceptions.reediest=reedy,exceptions.renter=renter,exceptions.retailer=retailer,exceptions.rimier=rimy,exceptions.rimiest=rimy,exceptions.riskier=risky,exceptions.riskiest=risky,exceptions.ritzier=ritzy,exceptions.ritziest=ritzy,exceptions.roaster=roaster,exceptions.rockier=rocky,exceptions.rockiest=rocky,exceptions.roilier=roily,exceptions.roiliest=roily,exceptions.rookier=rooky,exceptions.rookiest=rooky,exceptions.roomier=roomy,exceptions.roomiest=roomy,exceptions.ropier=ropy,exceptions.ropiest=ropy,exceptions.rosier=rosy,exceptions.rosiest=rosy,exceptions.rowdier=rowdy,exceptions.rowdiest=rowdy,exceptions.ruddier=ruddy,exceptions.ruddiest=ruddy,exceptions.runnier=runny,exceptions.runniest=runny,exceptions.rusher=rusher,exceptions.rushier=rushy,exceptions.rushiest=rushy,exceptions.rustier=rusty,exceptions.rustiest=rusty,exceptions.ruttier=rutty,exceptions.ruttiest=rutty,exceptions.sadder=sad,exceptions.saddest=sad,exceptions.salter=salter,exceptions.saltier=salty,exceptions.saltiest=salty,exceptions.sampler=sampler,exceptions.sandier=sandy,exceptions.sandiest=sandy,exceptions.sappier=sappy,exceptions.sappiest=sappy,exceptions.sassier=sassy,exceptions.sassiest=sassy,exceptions.saucier=saucy,exceptions.sauciest=saucy,exceptions.savvier=savvy,exceptions.savviest=savvy,exceptions.scabbier=scabby,exceptions.scabbiest=scabby,exceptions.scalier=scaly,exceptions.scaliest=scaly,exceptions.scantier=scanty,exceptions.scantiest=scanty,exceptions.scarier=scary,exceptions.scariest=scary,exceptions.scraggier=scraggy,exceptions.scraggiest=scraggy,exceptions.scragglier=scraggly,exceptions.scraggliest=scraggly,exceptions.scraper=scraper,exceptions.scrappier=scrappy,exceptions.scrappiest=scrappy,exceptions.scrawnier=scrawny,exceptions.scrawniest=scrawny,exceptions.screwier=screwy,exceptions.screwiest=screwy,exceptions.scrubbier=scrubby,exceptions.scrubbiest=scrubby,exceptions.scruffier=scruffy,exceptions.scruffiest=scruffy,exceptions.scungier=scungy,exceptions.scungiest=scungy,exceptions.scurvier=scurvy,exceptions.scurviest=scurvy,exceptions.seamier=seamy,exceptions.seamiest=seamy,exceptions.seconder=seconder,exceptions.seedier=seedy,exceptions.seediest=seedy,exceptions.seemlier=seemly,exceptions.seemliest=seemly,exceptions.serer=serer,exceptions.sexier=sexy,exceptions.sexiest=sexy,exceptions.shabbier=shabby,exceptions.shabbiest=shabby,exceptions.shadier=shady,exceptions.shadiest=shady,exceptions.shaggier=shaggy,exceptions.shaggiest=shaggy,exceptions.shakier=shaky,exceptions.shakiest=shaky,exceptions.shapelier=shapely,exceptions.shapeliest=shapely,exceptions.shier=shy,exceptions.shiest=shy,exceptions.shiftier=shifty,exceptions.shiftiest=shifty,exceptions.shinier=shiny,exceptions.shiniest=shiny,exceptions.shirtier=shirty,exceptions.shirtiest=shirty,exceptions.shoddier=shoddy,exceptions.shoddiest=shoddy,exceptions.showier=showy,exceptions.showiest=showy,exceptions.shrubbier=shrubby,exceptions.shrubbiest=shrubby,exceptions.shyer=shy,exceptions.shyest=shy,exceptions.sicklier=sickly,exceptions.sickliest=sickly,exceptions.sightlier=sightly,exceptions.sightliest=sightly,exceptions.signaler=signaler,exceptions.signer=signer,exceptions.silkier=silky,exceptions.silkiest=silky,exceptions.sillier=silly,exceptions.silliest=silly,exceptions.sketchier=sketchy,exceptions.sketchiest=sketchy,exceptions.skewer=skewer,exceptions.skimpier=skimpy,exceptions.skimpiest=skimpy,exceptions.skinnier=skinny,exceptions.skinniest=skinny,exceptions.slaphappier=slaphappy,exceptions.slaphappiest=slaphappy,exceptions.slatier=slaty,exceptions.slatiest=slaty,exceptions.slaver=slaver,exceptions.sleazier=sleazy,exceptions.sleaziest=sleazy,exceptions.sleepier=sleepy,exceptions.sleepiest=sleepy,exceptions.slier=sly,exceptions.sliest=sly,exceptions.slimier=slimy,exceptions.slimiest=slimy,exceptions.slimmer=slim,exceptions.slimmest=slim,exceptions.slimsier=slimsy,exceptions.slimsiest=slimsy,exceptions.slinkier=slinky,exceptions.slinkiest=slinky,exceptions.slippier=slippy,exceptions.slippiest=slippy,exceptions.sloppier=sloppy,exceptions.sloppiest=sloppy,exceptions.slyer=sly,exceptions.slyest=sly,exceptions.smarmier=smarmy,exceptions.smarmiest=smarmy,exceptions.smellier=smelly,exceptions.smelliest=smelly,exceptions.smokier=smoky,exceptions.smokiest=smoky,exceptions.smugger=smug,exceptions.smuggest=smug,exceptions.snakier=snaky,exceptions.snakiest=snaky,exceptions.snappier=snappy,exceptions.snappiest=snappy,exceptions.snatchier=snatchy,exceptions.snatchiest=snatchy,exceptions.snazzier=snazzy,exceptions.snazziest=snazzy,exceptions.sneaker=sneaker,exceptions.sniffier=sniffy,exceptions.sniffiest=sniffy,exceptions.snootier=snooty,exceptions.snootiest=snooty,exceptions.snottier=snotty,exceptions.snottiest=snotty,exceptions.snowier=snowy,exceptions.snowiest=snowy,exceptions.snuffer=snuffer,exceptions.snuffier=snuffy,exceptions.snuffiest=snuffy,exceptions.snugger=snug,exceptions.snuggest=snug,exceptions.soapier=soapy,exceptions.soapiest=soapy,exceptions.soggier=soggy,exceptions.soggiest=soggy,exceptions.solder=solder,exceptions.sonsier=sonsy,exceptions.sonsiest=sonsy,exceptions.sootier=sooty,exceptions.sootiest=sooty,exceptions.soppier=soppy,exceptions.soppiest=soppy,exceptions.sorrier=sorry,exceptions.sorriest=sorry,exceptions.soupier=soupy,exceptions.soupiest=soupy,exceptions.souther=souther,exceptions.southerner=southerner,exceptions.speedier=speedy,exceptions.speediest=speedy,exceptions.spicier=spicy,exceptions.spiciest=spicy,exceptions.spiffier=spiffy,exceptions.spiffiest=spiffy,exceptions.spikier=spiky,exceptions.spikiest=spiky,exceptions.spindlier=spindly,exceptions.spindliest=spindly,exceptions.spinier=spiny,exceptions.spiniest=spiny,exceptions.splashier=splashy,exceptions.splashiest=splashy,exceptions.spongier=spongy,exceptions.spongiest=spongy,exceptions.spookier=spooky,exceptions.spookiest=spooky,exceptions.spoonier=spoony,exceptions.spooniest=spoony,exceptions.sportier=sporty,exceptions.sportiest=sporty,exceptions.spottier=spotty,exceptions.spottiest=spotty,exceptions.spreader=spreader,exceptions.sprier=spry,exceptions.spriest=spry,exceptions.sprightlier=sprightly,exceptions.sprightliest=sprightly,exceptions.springer=springer,exceptions.springier=springy,exceptions.springiest=springy,exceptions.squashier=squashy,exceptions.squashiest=squashy,exceptions.squatter=squat,exceptions.squattest=squat,exceptions.squattier=squatty,exceptions.squattiest=squatty,exceptions.squiffier=squiffy,exceptions.squiffiest=squiffy,exceptions.stagier=stagy,exceptions.stagiest=stagy,exceptions.stalkier=stalky,exceptions.stalkiest=stalky,exceptions.stapler=stapler,exceptions.starchier=starchy,exceptions.starchiest=starchy,exceptions.starer=starer,exceptions.starest=starest,exceptions.starrier=starry,exceptions.starriest=starry,exceptions.statelier=stately,exceptions.stateliest=stately,exceptions.steadier=steady,exceptions.steadiest=steady,exceptions.stealthier=stealthy,exceptions.stealthiest=stealthy,exceptions.steamier=steamy,exceptions.steamiest=steamy,exceptions.stingier=stingy,exceptions.stingiest=stingy,exceptions.stiper=striper,exceptions.stocker=stocker,exceptions.stockier=stocky,exceptions.stockiest=stocky,exceptions.stodgier=stodgy,exceptions.stodgiest=stodgy,exceptions.stonier=stony,exceptions.stoniest=stony,exceptions.stormier=stormy,exceptions.stormiest=stormy,exceptions.streakier=streaky,exceptions.streakiest=streaky,exceptions.streamier=streamy,exceptions.streamiest=streamy,exceptions.stretcher=stretcher,exceptions.stretchier=stretchy,exceptions.stretchiest=stretchy,exceptions.stringier=stringy,exceptions.stringiest=stringy,exceptions.stripier=stripy,exceptions.stripiest=stripy,exceptions.stronger=strong,exceptions.strongest=strong,exceptions.stroppier=stroppy,exceptions.stroppiest=stroppy,exceptions.stuffier=stuffy,exceptions.stuffiest=stuffy,exceptions.stumpier=stumpy,exceptions.stumpiest=stumpy,exceptions.sturdier=sturdy,exceptions.sturdiest=sturdy,exceptions.submariner=submariner,exceptions.sulkier=sulky,exceptions.sulkiest=sulky,exceptions.sultrier=sultry,exceptions.sultriest=sultry,exceptions.sunnier=sunny,exceptions.sunniest=sunny,exceptions.surlier=surly,exceptions.surliest=surly,exceptions.swagger=swagger,exceptions.swankier=swanky,exceptions.swankiest=swanky,exceptions.swarthier=swarthy,exceptions.swarthiest=swarthy,exceptions.sweatier=sweaty,exceptions.sweatiest=sweaty,exceptions.tackier=tacky,exceptions.tackiest=tacky,exceptions.talkier=talky,exceptions.talkiest=talky,exceptions.tangier=tangy,exceptions.tangiest=tangy,exceptions.tanner=tan,exceptions.tannest=tan,exceptions.tardier=tardy,exceptions.tardiest=tardy,exceptions.tastier=tasty,exceptions.tastiest=tasty,exceptions.tattier=tatty,exceptions.tattiest=tatty,exceptions.tawdrier=tawdry,exceptions.tawdriest=tawdry,exceptions.techier=techy,exceptions.techiest=techy,exceptions.teenager=teenager,exceptions.teenier=teeny,exceptions.teeniest=teeny,exceptions.teetotaler=teetotaler,exceptions.tester=tester,exceptions.testier=testy,exceptions.testiest=testy,exceptions.tetchier=tetchy,exceptions.tetchiest=tetchy,exceptions.thinner=thin,exceptions.thinnest=thin,exceptions.thirstier=thirsty,exceptions.thirstiest=thirsty,exceptions.thornier=thorny,exceptions.thorniest=thorny,exceptions.threadier=thready,exceptions.threadiest=thready,exceptions.thriftier=thrifty,exceptions.thriftiest=thrifty,exceptions.throatier=throaty,exceptions.throatiest=throaty,exceptions.tidier=tidy,exceptions.tidiest=tidy,exceptions.timelier=timely,exceptions.timeliest=timely,exceptions.tinier=tiny,exceptions.tiniest=tiny,exceptions.tinnier=tinny,exceptions.tinniest=tinny,exceptions.tipsier=tipsy,exceptions.tipsiest=tipsy,exceptions.tonier=tony,exceptions.toniest=tony,exceptions.toothier=toothy,exceptions.toothiest=toothy,exceptions.toper=toper,exceptions.touchier=touchy,exceptions.touchiest=touchy,exceptions.trader=trader,exceptions.trashier=trashy,exceptions.trashiest=trashy,exceptions.trendier=trendy,exceptions.trendiest=trendy,exceptions.trickier=tricky,exceptions.trickiest=tricky,exceptions.tricksier=tricksy,exceptions.tricksiest=tricksy,exceptions.trimer=trimer,exceptions.trimmer=trim,exceptions.trimmest=trim,exceptions.truer=true1,exceptions.truest=true1,exceptions.trustier=trusty,exceptions.trustiest=trusty,exceptions.tubbier=tubby,exceptions.tubbiest=tubby,exceptions.turfier=turfy,exceptions.turfiest=turfy,exceptions.tweedier=tweedy,exceptions.tweediest=tweedy,exceptions.twiggier=twiggy,exceptions.twiggiest=twiggy,exceptions.uglier=ugly,exceptions.ugliest=ugly,exceptions.unfriendlier=unfriendly,exceptions.unfriendliest=unfriendly,exceptions.ungainlier=ungainly,exceptions.ungainliest=ungainly,exceptions.ungodlier=ungodly,exceptions.ungodliest=ungodly,exceptions.unhappier=unhappy,exceptions.unhappiest=unhappy,exceptions.unhealthier=unhealthy,exceptions.unhealthiest=unhealthy,exceptions.unholier=unholy,exceptions.unholiest=unholy,exceptions.unrulier=unruly,exceptions.unruliest=unruly,exceptions.untidier=untidy,exceptions.untidiest=untidy,exceptions.vastier=vasty,exceptions.vastiest=vasty,exceptions.vest=vest,exceptions.viewier=viewy,exceptions.viewiest=viewy,exceptions.wackier=wacky,exceptions.wackiest=wacky,exceptions.wanner=wan,exceptions.wannest=wan,exceptions.warier=wary,exceptions.wariest=wary,exceptions.washier=washy,exceptions.washiest=washy,exceptions.waster=waster,exceptions.wavier=wavy,exceptions.waviest=wavy,exceptions.waxier=waxy,exceptions.waxiest=waxy,exceptions.weaklier=weakly,exceptions.weakliest=weakly,exceptions.wealthier=wealthy,exceptions.wealthiest=wealthy,exceptions.wearier=weary,exceptions.weariest=weary,exceptions.webbier=webby,exceptions.webbiest=webby,exceptions.weedier=weedy,exceptions.weediest=weedy,exceptions.weenier=weeny,exceptions.weeniest=weeny,exceptions.weensier=weensy,exceptions.weensiest=weensy,exceptions.weepier=weepy,exceptions.weepiest=weepy,exceptions.weightier=weighty,exceptions.weightiest=weighty,exceptions.welsher=welsher,exceptions.wetter=wet,exceptions.wettest=wet,exceptions.whackier=whacky,exceptions.whackiest=whacky,exceptions.whimsier=whimsy,exceptions.whimsiest=whimsy,exceptions.wholesaler=wholesaler,exceptions.wieldier=wieldy,exceptions.wieldiest=wieldy,exceptions.wilier=wily,exceptions.wiliest=wily,exceptions.windier=windy,exceptions.windiest=windy,exceptions.winier=winy,exceptions.winiest=winy,exceptions.winterier=wintery,exceptions.winteriest=wintery,exceptions.wintrier=wintry,exceptions.wintriest=wintry,exceptions.wirier=wiry,exceptions.wiriest=wiry,exceptions.wispier=wispy,exceptions.wispiest=wispy,exceptions.wittier=witty,exceptions.wittiest=witty,exceptions.wonkier=wonky,exceptions.wonkiest=wonky,exceptions.woodier=woody,exceptions.woodiest=woody,exceptions.woodsier=woodsy,exceptions.woodsiest=woodsy,exceptions.woollier=woolly,exceptions.woolliest=woolly,exceptions.woozier=woozy,exceptions.wooziest=woozy,exceptions.wordier=wordy,exceptions.wordiest=wordy,exceptions.worldlier=worldly,exceptions.worldliest=worldly,exceptions.wormier=wormy,exceptions.wormiest=wormy,exceptions.worse=bad,exceptions.worst=bad,exceptions.worthier=worthy,exceptions.worthiest=worthy,exceptions.wrier=wry,exceptions.wriest=wry,exceptions.wryer=wry,exceptions.wryest=wry,exceptions.yarer=yare,exceptions.yarest=yare,exceptions.yeastier=yeasty,exceptions.yeastiest=yeasty,exceptions.younger=young,exceptions.youngest=young,exceptions.yummier=yummy,exceptions.yummiest=yummy,exceptions.zanier=zany,exceptions.zaniest=zany,exceptions.zippier=zippy,exceptions.zippiest=zippy,module.exports=exceptions;","const exceptions=Object.create(null),aardwolf=\"aardwolf\",abacus=\"abacus\",aboideau=\"aboideau\",aboiteau=\"aboiteau\",abscissa=\"abscissa\",acanthus=\"acanthus\",acarus=\"acarus\",acciaccatura=\"acciaccatura\",acetabulum=\"acetabulum\",achaemenid=\"achaemenid\",aciculum=\"aciculum\",acicula=\"acicula\",acinus=\"acinus\",acromion=\"acromion\",actinia=\"actinia\",actinozoan=\"actinozoan\",addendum=\"addendum\",adenocarcinoma=\"adenocarcinoma\",adenoma=\"adenoma\",adieu=\"adieu\",adytum=\"adytum\",aecium=\"aecium\",aecidium=\"aecidium\",aerobium=\"aerobium\",aggiornamento=\"aggiornamento\",agnomen=\"agnomen\",agon=\"agon\",agora=\"agora\",agouti=\"agouti\",ala=\"ala\",alewife=\"alewife\",alkali=\"alkali\",allodium=\"allodium\",alluvium=\"alluvium\",alodium=\"alodium\",altocumulus=\"altocumulus\",altostratus=\"altostratus\",alula=\"alula\",alumna=\"alumna\",alumnus=\"alumnus\",alveolus=\"alveolus\",amanuensis=\"amanuensis\",ambulacrum=\"ambulacrum\",ameba=\"ameba\",amnion=\"amnion\",amniocentesis=\"amniocentesis\",amoeba=\"amoeba\",amoebiasis=\"amoebiasis\",amora=\"amora\",amoretto=\"amoretto\",amorino=\"amorino\",amphiarthrosis=\"amphiarthrosis\",amphithecium=\"amphithecium\",amphimixis=\"amphimixis\",amphioxus=\"amphioxus\",amphisbaena=\"amphisbaena\",amphora=\"amphora\",ampulla=\"ampulla\",amygdala=\"amygdala\",anabasis=\"anabasis\",anacoluthon=\"anacoluthon\",anacrusis=\"anacrusis\",anaerobium=\"anaerobium\",anagnorisis=\"anagnorisis\",analemma=\"analemma\",analysis=\"analysis\",anamnesis=\"anamnesis\",anamorphosis=\"anamorphosis\",anastomosis=\"anastomosis\",anaptyxis=\"anaptyxis\",ancon=\"ancon\",androclinium=\"androclinium\",androecium=\"androecium\",androsphinx=\"androsphinx\",antheridium=\"antheridium\",angelfish=\"angelfish\",angioma=\"angioma\",animalculum=\"animalculum\",anlage=\"anlage\",annatto=\"annatto\",annulus=\"annulus\",anta=\"anta\",antalkali=\"antalkali\",antefix=\"antefix\",antenna=\"antenna\",antependium=\"antependium\",anthelion=\"anthelion\",anthelix=\"anthelix\",anthemion=\"anthemion\",anthodium=\"anthodium\",anthozoan=\"anthozoan\",anthrax=\"anthrax\",anticlinorium=\"anticlinorium\",antihelix=\"antihelix\",antihero=\"antihero\",antiserum=\"antiserum\",antithesis=\"antithesis\",antitragus=\"antitragus\",antrum=\"antrum\",anus=\"anus\",aorta=\"aorta\",aphelion=\"aphelion\",aphis=\"aphis\",apex=\"apex\",apodosis=\"apodosis\",apomixis=\"apomixis\",aponeurosis=\"aponeurosis\",apophysis=\"apophysis\",aposiopesis=\"aposiopesis\",apothecium=\"apothecium\",apotheosis=\"apotheosis\",apparatus=\"apparatus\",appendix=\"appendix\",appoggiatura=\"appoggiatura\",apsis=\"apsis\",aqua=\"aqua\",aquarium=\"aquarium\",argali=\"argali\",arboretum=\"arboretum\",arcanum=\"arcanum\",archegonium=\"archegonium\",archerfish=\"archerfish\",archesporium=\"archesporium\",archipelago=\"archipelago\",areola=\"areola\",argumentum=\"argumentum\",arietta=\"arietta\",arista=\"arista\",armamentarium=\"armamentarium\",arsis=\"arsis\",rotl=\"rotl\",arteriosclerosis=\"arteriosclerosis\",aruspex=\"aruspex\",ascesis=\"ascesis\",ascus=\"ascus\",ascidium=\"ascidium\",ascogonium=\"ascogonium\",ash=\"ash\",ashkenazi=\"ashkenazi\",aspergillum=\"aspergillum\",aspergillus=\"aspergillus\",aspergillosis=\"aspergillosis\",aspersorium=\"aspersorium\",assegai=\"assegai\",astragalus=\"astragalus\",asyndeton=\"asyndeton\",atheroma=\"atheroma\",atherosclerosis=\"atherosclerosis\",atmolysis=\"atmolysis\",atrium=\"atrium\",auditorium=\"auditorium\",aura=\"aura\",eyrir=\"eyrir\",aureus=\"aureus\",auricula=\"auricula\",aurora=\"aurora\",auspice=\"auspice\",autocatalysis=\"autocatalysis\",autochthon=\"autochthon\",automaton=\"automaton\",avitaminosis=\"avitaminosis\",ax=\"ax\",axilla=\"axilla\",bacchante=\"bacchante\",bacchius=\"bacchius\",bacillus=\"bacillus\",bacteriostasis=\"bacteriostasis\",baculum=\"baculum\",ballista=\"ballista\",bambino=\"bambino\",bandeau=\"bandeau\",bandit=\"bandit\",ban=\"ban\",banjo=\"banjo\",barklouse=\"barklouse\",barramundi=\"barramundi\",base=\"base\",basidium=\"basidium\",basileus=\"basileus\",basso=\"basso\",bastinado=\"bastinado\",bateau=\"bateau\",batfish=\"batfish\",beadsman=\"beadsman\",beau=\"beau\",beef=\"beef\",behoof=\"behoof\",bersagliere=\"bersagliere\",bhishti=\"bhishti\",bibliotheca=\"bibliotheca\",bicentenary=\"bicentenary\",bijou=\"bijou\",bilbo=\"bilbo\",billfish=\"billfish\",bimbo=\"bimbo\",bisectrix=\"bisectrix\",blackfoot=\"blackfoot\",blackfish=\"blackfish\",blastema=\"blastema\",blastula=\"blastula\",blindfish=\"blindfish\",blowfish=\"blowfish\",bluefish=\"bluefish\",boarfish=\"boarfish\",boschbok=\"boschbok\",boletus=\"boletus\",bolivar=\"bolivar\",bolshevik=\"bolshevik\",bonefish=\"bonefish\",bongo=\"bongo\",bonito=\"bonito\",booklouse=\"booklouse\",bookshelf=\"bookshelf\",borax=\"borax\",borborygmus=\"borborygmus\",bordereau=\"bordereau\",botargo=\"botargo\",boxfish=\"boxfish\",brachium=\"brachium\",brainchild=\"brainchild\",branchia=\"branchia\",brant=\"brant\",bravado=\"bravado\",bravo=\"bravo\",bregma=\"bregma\",brother=\"brother\",broadleaf=\"broadleaf\",bronchus=\"bronchus\",bryozoan=\"bryozoan\",bubo=\"bubo\",bucko=\"bucko\",bucktooth=\"bucktooth\",buffalo=\"buffalo\",bulla=\"bulla\",bund=\"bund\",bureau=\"bureau\",bursa=\"bursa\",bus=\"bus\",butterfish=\"butterfish\",byssus=\"byssus\",cactus=\"cactus\",caduceus=\"caduceus\",caecum=\"caecum\",caesura=\"caesura\",calamus=\"calamus\",calathus=\"calathus\",calcaneum=\"calcaneum\",calx=\"calx\",calculus=\"calculus\",caldarium=\"caldarium\",calix=\"calix\",calico=\"calico\",callus=\"callus\",calf=\"calf\",calyx=\"calyx\",cambium=\"cambium\",camera=\"camera\",canaliculus=\"canaliculus\",candelabrum=\"candelabrum\",candlefish=\"candlefish\",canthus=\"canthus\",canula=\"canula\",canzone=\"canzone\",caput=\"caput\",capitulum=\"capitulum\",capriccio=\"capriccio\",carabiniere=\"carabiniere\",carbonado=\"carbonado\",carcinoma=\"carcinoma\",cargo=\"cargo\",caryatid=\"caryatid\",carina=\"carina\",carolus=\"carolus\",carpus=\"carpus\",carpogonium=\"carpogonium\",caryopsis=\"caryopsis\",castrato=\"castrato\",catabasis=\"catabasis\",cataclasis=\"cataclasis\",catalo=\"catalo\",catalysis=\"catalysis\",catena=\"catena\",catfish=\"catfish\",cathar=\"cathar\",cathexis=\"cathexis\",cattalo=\"cattalo\",caudex=\"caudex\",caulis=\"caulis\",cavatina=\"cavatina\",cavefish=\"cavefish\",cavetto=\"cavetto\",cecum=\"cecum\",cella=\"cella\",cembalo=\"cembalo\",centesimo=\"centesimo\",centrum=\"centrum\",cephalothorax=\"cephalothorax\",cercaria=\"cercaria\",cercus=\"cercus\",cerebellum=\"cerebellum\",cerebrum=\"cerebrum\",cervix=\"cervix\",caestus=\"caestus\",cesura=\"cesura\",cheder=\"cheder\",chaeta=\"chaeta\",chalaza=\"chalaza\",hallah=\"hallah\",chalutz=\"chalutz\",chapati=\"chapati\",chapatti=\"chapatti\",chapeau=\"chapeau\",chasid=\"chasid\",chassid=\"chassid\",chateau=\"chateau\",chazan=\"chazan\",chela=\"chela\",chelicera=\"chelicera\",cherub=\"cherub\",chiasma=\"chiasma\",chiasmus=\"chiasmus\",child=\"child\",chilli=\"chilli\",chitarrone=\"chitarrone\",chlamys=\"chlamys\",chondroma=\"chondroma\",choragus=\"choragus\",choriambus=\"choriambus\",chou=\"chou\",chromonema=\"chromonema\",chrysalis=\"chrysalis\",chuvash=\"chuvash\",ciborium=\"ciborium\",cicada=\"cicada\",cicala=\"cicala\",cicatrix=\"cicatrix\",cicerone=\"cicerone\",cicisbeo=\"cicisbeo\",cilium=\"cilium\",cimex=\"cimex\",cinerarium=\"cinerarium\",cingulum=\"cingulum\",cirrus=\"cirrus\",cirrocumulus=\"cirrocumulus\",cirrostratus=\"cirrostratus\",cisco=\"cisco\",cisterna=\"cisterna\",clarino=\"clarino\",claro=\"claro\",clepsydra=\"clepsydra\",clinandrium=\"clinandrium\",clingfish=\"clingfish\",clitellum=\"clitellum\",cloaca=\"cloaca\",clostridium=\"clostridium\",cloverleaf=\"cloverleaf\",clypeus=\"clypeus\",coagulum=\"coagulum\",coalfish=\"coalfish\",coccus=\"coccus\",coccyx=\"coccyx\",cochlea=\"cochlea\",codfish=\"codfish\",codex=\"codex\",coelenteron=\"coelenteron\",coenurus=\"coenurus\",cognomen=\"cognomen\",cognosente=\"cognosente\",colon=\"colon\",coleorhiza=\"coleorhiza\",collegium=\"collegium\",colloquium=\"colloquium\",colluvium=\"colluvium\",collyrium=\"collyrium\",colossus=\"colossus\",columbarium=\"columbarium\",columella=\"columella\",coma=\"coma\",comatula=\"comatula\",comedo=\"comedo\",comic=\"comic\",commando=\"commando\",concertante=\"concertante\",concerto=\"concerto\",concertino=\"concertino\",concha=\"concha\",condottiere=\"condottiere\",condyloma=\"condyloma\",conferva=\"conferva\",congius=\"congius\",conidium=\"conidium\",conjunctiva=\"conjunctiva\",conquistador=\"conquistador\",consortium=\"consortium\",contagium=\"contagium\",continuum=\"continuum\",contralto=\"contralto\",conversazione=\"conversazione\",convolvulus=\"convolvulus\",copula=\"copula\",corbicula=\"corbicula\",corium=\"corium\",cornea=\"cornea\",cornu=\"cornu\",corona=\"corona\",corpus=\"corpus\",corrigendum=\"corrigendum\",cortex=\"cortex\",cortina=\"cortina\",corybant=\"corybant\",coryphaeus=\"coryphaeus\",costa=\"costa\",cothurnus=\"cothurnus\",couteau=\"couteau\",cowfish=\"cowfish\",coxa=\"coxa\",crambo=\"crambo\",cranium=\"cranium\",crasis=\"crasis\",crawfish=\"crawfish\",crayfish=\"crayfish\",credendum=\"credendum\",crematorium=\"crematorium\",crescendo=\"crescendo\",cribellum=\"cribellum\",crisis=\"crisis\",crissum=\"crissum\",crista=\"crista\",criterion=\"criterion\",crux=\"crux\",crus=\"crus\",crusado=\"crusado\",cruzado=\"cruzado\",cry=\"cry\",ctenidium=\"ctenidium\",cubiculum=\"cubiculum\",culex=\"culex\",culpa=\"culpa\",cultus=\"cultus\",cumulus=\"cumulus\",cumulonimbus=\"cumulonimbus\",cumulostratus=\"cumulostratus\",curia=\"curia\",curriculum=\"curriculum\",custos=\"custos\",cutis=\"cutis\",cuticula=\"cuticula\",cuttlefish=\"cuttlefish\",cyclops=\"cyclops\",cyclosis=\"cyclosis\",cylix=\"cylix\",cyma=\"cyma\",cymatium=\"cymatium\",cypsela=\"cypsela\",cysticercus=\"cysticercus\",dado=\"dado\",dago=\"dago\",damselfish=\"damselfish\",datum=\"datum\",daimio=\"daimio\",dealfish=\"dealfish\",decemvir=\"decemvir\",decennium=\"decennium\",decidua=\"decidua\",definiendum=\"definiendum\",definiens=\"definiens\",delphinium=\"delphinium\",denarius=\"denarius\",dentalium=\"dentalium\",dermatosis=\"dermatosis\",desideratum=\"desideratum\",desperado=\"desperado\",devilfish=\"devilfish\",diaeresis=\"diaeresis\",diagnosis=\"diagnosis\",dialysis=\"dialysis\",diaphysis=\"diaphysis\",diapophysis=\"diapophysis\",diarthrosis=\"diarthrosis\",diastalsis=\"diastalsis\",diastasis=\"diastasis\",diastema=\"diastema\",diathesis=\"diathesis\",diazo=\"diazo\",dibbuk=\"dibbuk\",dichasium=\"dichasium\",dictum=\"dictum\",dido=\"dido\",dieresis=\"dieresis\",diesis=\"diesis\",differentia=\"differentia\",dilettante=\"dilettante\",diluvium=\"diluvium\",dingo=\"dingo\",diplococcus=\"diplococcus\",discus=\"discus\",discobolus=\"discobolus\",diva=\"diva\",diverticulum=\"diverticulum\",divertimento=\"divertimento\",djinny=\"djinny\",dodo=\"dodo\",dogfish=\"dogfish\",dogma=\"dogma\",dogtooth=\"dogtooth\",dollarfish=\"dollarfish\",domatium=\"domatium\",domino=\"domino\",dormouse=\"dormouse\",dorsum=\"dorsum\",drachma=\"drachma\",drawknife=\"drawknife\",drosophila=\"drosophila\",drumfish=\"drumfish\",dryad=\"dryad\",duo=\"duo\",duodenum=\"duodenum\",dupondius=\"dupondius\",duumvir=\"duumvir\",dwarf=\"dwarf\",dybbuk=\"dybbuk\",ecchymosis=\"ecchymosis\",ecclesia=\"ecclesia\",ecdysis=\"ecdysis\",echidna=\"echidna\",echinus=\"echinus\",echinococcus=\"echinococcus\",echo=\"echo\",ectozoan=\"ectozoan\",eddo=\"eddo\",edema=\"edema\",effluvium=\"effluvium\",eidolon=\"eidolon\",eisegesis=\"eisegesis\",eisteddfod=\"eisteddfod\",elenchus=\"elenchus\",ellipsis=\"ellipsis\",eluvium=\"eluvium\",elf=\"elf\",elytrum=\"elytrum\",embargo=\"embargo\",embolus=\"embolus\",emphasis=\"emphasis\",emporium=\"emporium\",enarthrosis=\"enarthrosis\",encephalon=\"encephalon\",encephalitis=\"encephalitis\",encephaloma=\"encephaloma\",enchiridion=\"enchiridion\",enchondroma=\"enchondroma\",encomium=\"encomium\",endameba=\"endameba\",endamoeba=\"endamoeba\",endocardium=\"endocardium\",endocranium=\"endocranium\",endometrium=\"endometrium\",endosteum=\"endosteum\",endostosis=\"endostosis\",endothecium=\"endothecium\",endothelium=\"endothelium\",endothelioma=\"endothelioma\",endozoan=\"endozoan\",enema=\"enema\",enneahedron=\"enneahedron\",entameba=\"entameba\",entamoeba=\"entamoeba\",entasis=\"entasis\",enteron=\"enteron\",ens=\"ens\",entozoan=\"entozoan\",epencephalon=\"epencephalon\",epenthesis=\"epenthesis\",epexegesis=\"epexegesis\",ephemeron=\"ephemeron\",ephemera=\"ephemera\",ephemeris=\"ephemeris\",ephor=\"ephor\",epicalyx=\"epicalyx\",epicanthus=\"epicanthus\",epicardium=\"epicardium\",epicedium=\"epicedium\",epiclesis=\"epiclesis\",epididymis=\"epididymis\",epigastrium=\"epigastrium\",epiglottis=\"epiglottis\",epimysium=\"epimysium\",epiphenomenon=\"epiphenomenon\",epiphysis=\"epiphysis\",episternum=\"episternum\",epithalamium=\"epithalamium\",epithelium=\"epithelium\",epithelioma=\"epithelioma\",epizoan=\"epizoan\",epyllion=\"epyllion\",equilibrium=\"equilibrium\",equisetum=\"equisetum\",eringo=\"eringo\",erratum=\"erratum\",eryngo=\"eryngo\",esophagus=\"esophagus\",etymon=\"etymon\",eucalyptus=\"eucalyptus\",eupatrid=\"eupatrid\",euripus=\"euripus\",exanthema=\"exanthema\",executrix=\"executrix\",exegesis=\"exegesis\",exemplum=\"exemplum\",exordium=\"exordium\",exostosis=\"exostosis\",extremum=\"extremum\",eyetooth=\"eyetooth\",fabliau=\"fabliau\",facia=\"facia\",facula=\"facula\",faeroese=\"faeroese\",fallfish=\"fallfish\",famulus=\"famulus\",faroese=\"faroese\",farrago=\"farrago\",fascia=\"fascia\",fasciculus=\"fasciculus\",fatso=\"fatso\",fauna=\"fauna\",fecula=\"fecula\",fedayee=\"fedayee\",foot=\"foot\",fellah=\"fellah\",femur=\"femur\",fenestella=\"fenestella\",fenestra=\"fenestra\",feria=\"feria\",fermata=\"fermata\",ferula=\"ferula\",festschrift=\"festschrift\",fetial=\"fetial\",fez=\"fez\",fiasco=\"fiasco\",fibrilla=\"fibrilla\",fibroma=\"fibroma\",fibula=\"fibula\",fico=\"fico\",fideicommissum=\"fideicommissum\",fieldmouse=\"fieldmouse\",fig=\"fig\",filum=\"filum\",filaria=\"filaria\",filefish=\"filefish\",fimbria=\"fimbria\",fish=\"fish\",fishwife=\"fishwife\",fistula=\"fistula\",flabellum=\"flabellum\",flagellum=\"flagellum\",flagstaff=\"flagstaff\",flambeau=\"flambeau\",flamen=\"flamen\",flamingo=\"flamingo\",flatfoot=\"flatfoot\",flatfish=\"flatfish\",flittermouse=\"flittermouse\",floccus=\"floccus\",flocculus=\"flocculus\",flora=\"flora\",floreat=\"floreat\",florilegium=\"florilegium\",flyleaf=\"flyleaf\",focus=\"focus\",folium=\"folium\",forum=\"forum\",foramen=\"foramen\",forceps=\"forceps\",forefoot=\"forefoot\",foretooth=\"foretooth\",formicarium=\"formicarium\",formula=\"formula\",fornix=\"fornix\",fortis=\"fortis\",fossa=\"fossa\",fovea=\"fovea\",foveola=\"foveola\",fractocumulus=\"fractocumulus\",fractostratus=\"fractostratus\",fraenum=\"fraenum\",frau=\"frau\",frenum=\"frenum\",frenulum=\"frenulum\",fresco=\"fresco\",fricandeau=\"fricandeau\",fricando=\"fricando\",frijol=\"frijol\",frogfish=\"frogfish\",frons=\"frons\",frustum=\"frustum\",fucus=\"fucus\",fulcrum=\"fulcrum\",fumatorium=\"fumatorium\",fundus=\"fundus\",fungus=\"fungus\",funiculus=\"funiculus\",furculum=\"furculum\",furcula=\"furcula\",furfur=\"furfur\",galea=\"galea\",gambado=\"gambado\",gametangium=\"gametangium\",gametoecium=\"gametoecium\",gammadion=\"gammadion\",ganglion=\"ganglion\",garfish=\"garfish\",gas=\"gas\",gastrula=\"gastrula\",gateau=\"gateau\",gazebo=\"gazebo\",gecko=\"gecko\",goose=\"goose\",gelsemium=\"gelsemium\",gemsbok=\"gemsbok\",gemsbuck=\"gemsbuck\",gemeinschaft=\"gemeinschaft\",gemma=\"gemma\",genus=\"genus\",generatrix=\"generatrix\",genesis=\"genesis\",genius=\"genius\",gens=\"gens\",genu=\"genu\",germen=\"germen\",gesellschaft=\"gesellschaft\",gestalt=\"gestalt\",ghetto=\"ghetto\",gingiva=\"gingiva\",gingko=\"gingko\",ginglymus=\"ginglymus\",ginkgo=\"ginkgo\",gippo=\"gippo\",glabella=\"glabella\",gladiolus=\"gladiolus\",glans=\"glans\",glioma=\"glioma\",glissando=\"glissando\",globefish=\"globefish\",globigerina=\"globigerina\",glochidium=\"glochidium\",glomerulus=\"glomerulus\",glossa=\"glossa\",glottis=\"glottis\",glutaeus=\"glutaeus\",gluteus=\"gluteus\",gnosis=\"gnosis\",goatfish=\"goatfish\",gobo=\"gobo\",godchild=\"godchild\",go=\"go\",goldfish=\"goldfish\",gomphosis=\"gomphosis\",gonion=\"gonion\",gonidium=\"gonidium\",gonococcus=\"gonococcus\",goodwife=\"goodwife\",goosefish=\"goosefish\",gorgoneion=\"gorgoneion\",gospodin=\"gospodin\",goy=\"goy\",gps=\"gps\",graf=\"graf\",graffito=\"graffito\",grandchild=\"grandchild\",granuloma=\"granuloma\",gravamen=\"gravamen\",grosz=\"grosz\",grotto=\"grotto\",guilde=\"guilde\",guitarfish=\"guitarfish\",gumma=\"gumma\",gurnar=\"gurnar\",gutta=\"gutta\",gymnasium=\"gymnasium\",gynaeceum=\"gynaeceum\",gynaecium=\"gynaecium\",gynecium=\"gynecium\",gynoecium=\"gynoecium\",gyrus=\"gyrus\",heder=\"heder\",hadj=\"hadj\",haematolysis=\"haematolysis\",haematoma=\"haematoma\",haematozoon=\"haematozoon\",haemodialysis=\"haemodialysis\",haemolysis=\"haemolysis\",haemoptysis=\"haemoptysis\",haeres=\"haeres\",haftarah=\"haftarah\",hagfish=\"hagfish\",haggadah=\"haggadah\",haggada=\"haggada\",hajj=\"hajj\",haler=\"haler\",halfpenny=\"halfpenny\",hallux=\"hallux\",halo=\"halo\",halter=\"halter\",half=\"half\",hamulus=\"hamulus\",haphtarah=\"haphtarah\",haredi=\"haredi\",haruspex=\"haruspex\",hasid=\"hasid\",hassid=\"hassid\",haustellum=\"haustellum\",haustorium=\"haustorium\",hazzan=\"hazzan\",hectocotylus=\"hectocotylus\",heldentenor=\"heldentenor\",helix=\"helix\",heliozoan=\"heliozoan\",hematolysis=\"hematolysis\",hematoma=\"hematoma\",hematozoon=\"hematozoon\",hemelytron=\"hemelytron\",hemielytron=\"hemielytron\",hemodialysis=\"hemodialysis\",hemolysis=\"hemolysis\",hemoptysis=\"hemoptysis\",hendecahedron=\"hendecahedron\",heraclid=\"heraclid\",heraklid=\"heraklid\",herbarium=\"herbarium\",herma=\"herma\",hernia=\"hernia\",hero=\"hero\",herr=\"herr\",hetaera=\"hetaera\",hetaira=\"hetaira\",hibernaculum=\"hibernaculum\",hieracosphinx=\"hieracosphinx\",hilum=\"hilum\",hilus=\"hilus\",himation=\"himation\",hippocampus=\"hippocampus\",hippopotamus=\"hippopotamus\",his=\"his\",hobo=\"hobo\",hogfish=\"hogfish\",homunculus=\"homunculus\",honorarium=\"honorarium\",hoof=\"hoof\",horologium=\"horologium\",housewife=\"housewife\",humerus=\"humerus\",hydra=\"hydra\",hydromedusa=\"hydromedusa\",hydrozoan=\"hydrozoan\",hymenopteran=\"hymenopteran\",hymenium=\"hymenium\",hypanthium=\"hypanthium\",hyperostosis=\"hyperostosis\",hypha=\"hypha\",hypnosis=\"hypnosis\",hypochondrium=\"hypochondrium\",hypogastrium=\"hypogastrium\",hypogeum=\"hypogeum\",hypophysis=\"hypophysis\",hypostasis=\"hypostasis\",hypothalamus=\"hypothalamus\",hypothesis=\"hypothesis\",hyrax=\"hyrax\",iamb=\"iamb\",ibex=\"ibex\",igbo=\"igbo\",ichthyosaurus=\"ichthyosaurus\",ichthyosaur=\"ichthyosaur\",iconostas=\"iconostas\",icosahedron=\"icosahedron\",ideatum=\"ideatum\",igorrote=\"igorrote\",ilium=\"ilium\",imago=\"imago\",imperium=\"imperium\",impi=\"impi\",incubus=\"incubus\",incus=\"incus\",index=\"index\",indigo=\"indigo\",indumentum=\"indumentum\",indusium=\"indusium\",infundibulum=\"infundibulum\",ingush=\"ingush\",innuendo=\"innuendo\",inoculum=\"inoculum\",insectarium=\"insectarium\",insula=\"insula\",intaglio=\"intaglio\",interleaf=\"interleaf\",intermezzo=\"intermezzo\",interrex=\"interrex\",interregnum=\"interregnum\",intima=\"intima\",involucellum=\"involucellum\",involucrum=\"involucrum\",iris=\"iris\",irs=\"irs\",is=\"is\",ischium=\"ischium\",isthmus=\"isthmus\",jackeroo=\"jackeroo\",jackfish=\"jackfish\",jackknife=\"jackknife\",jambeau=\"jambeau\",jellyfish=\"jellyfish\",jewelfish=\"jewelfish\",jewfish=\"jewfish\",jingo=\"jingo\",jinni=\"jinni\",joe=\"joe\",jus=\"jus\",kaddish=\"kaddish\",kalmuc=\"kalmuc\",katabasis=\"katabasis\",keeshond=\"keeshond\",kibbutz=\"kibbutz\",killifish=\"killifish\",kingfish=\"kingfish\",knife=\"knife\",kohlrabi=\"kohlrabi\",krone=\"krone\",krona=\"krona\",kroon=\"kroon\",kylix=\"kylix\",labarum=\"labarum\",labellum=\"labellum\",labium=\"labium\",labrum=\"labrum\",lactobacillus=\"lactobacillus\",lacuna=\"lacuna\",lacunar=\"lacunar\",lamella=\"lamella\",lamia=\"lamia\",lamina=\"lamina\",lapillus=\"lapillus\",lapith=\"lapith\",larva=\"larva\",larynx=\"larynx\",lasso=\"lasso\",lat=\"lat\",latex=\"latex\",latifundium=\"latifundium\",lavabo=\"lavabo\",leaf=\"leaf\",lecythus=\"lecythus\",lex=\"lex\",leu=\"leu\",lemma=\"lemma\",lemniscus=\"lemniscus\",lenis=\"lenis\",lentigo=\"lentigo\",leonid=\"leonid\",lepidopteran=\"lepidopteran\",leprosarium=\"leprosarium\",lepton=\"lepton\",leptocephalus=\"leptocephalus\",leucocytozoan=\"leucocytozoan\",lev=\"lev\",libra=\"libra\",libretto=\"libretto\",louse=\"louse\",lied=\"lied\",ligula=\"ligula\",limbus=\"limbus\",limen=\"limen\",limes=\"limes\",limulus=\"limulus\",lingo=\"lingo\",lingua=\"lingua\",lionfish=\"lionfish\",lipoma=\"lipoma\",lira=\"lira\",liriodendron=\"liriodendron\",sente=\"sente\",litas=\"litas\",life=\"life\",lixivium=\"lixivium\",loaf=\"loaf\",locus=\"locus\",loculus=\"loculus\",loggia=\"loggia\",logion=\"logion\",lomentum=\"lomentum\",longobard=\"longobard\",lorica=\"lorica\",luba=\"luba\",lubritorium=\"lubritorium\",lumbus=\"lumbus\",lumen=\"lumen\",lumpfish=\"lumpfish\",lungfish=\"lungfish\",lunula=\"lunula\",lure=\"lure\",lustre=\"lustre\",lymphangitis=\"lymphangitis\",lymphoma=\"lymphoma\",lymphopoiesis=\"lymphopoiesis\",lysis=\"lysis\",lytta=\"lytta\",maar=\"maar\",macaroni=\"macaroni\",maccaroni=\"maccaroni\",machzor=\"machzor\",macronucleus=\"macronucleus\",macrosporangium=\"macrosporangium\",macula=\"macula\",madrono=\"madrono\",maestro=\"maestro\",mafioso=\"mafioso\",magus=\"magus\",magma=\"magma\",magnifico=\"magnifico\",mahzor=\"mahzor\",likuta=\"likuta\",malleus=\"malleus\",malleolus=\"malleolus\",loti=\"loti\",mamilla=\"mamilla\",mamma=\"mamma\",mammilla=\"mammilla\",mandingo=\"mandingo\",mango=\"mango\",manifesto=\"manifesto\",manteau=\"manteau\",mantis=\"mantis\",manubrium=\"manubrium\",marchesa=\"marchesa\",marchese=\"marchese\",maremma=\"maremma\",markka=\"markka\",marsupium=\"marsupium\",matrix=\"matrix\",matzo=\"matzo\",mausoleum=\"mausoleum\",maxilla=\"maxilla\",maximum=\"maximum\",medium=\"medium\",media=\"media\",mediastinum=\"mediastinum\",medulla=\"medulla\",medusa=\"medusa\",megaron=\"megaron\",megasporangium=\"megasporangium\",megillah=\"megillah\",meiosis=\"meiosis\",melanoma=\"melanoma\",melisma=\"melisma\",memento=\"memento\",memorandum=\"memorandum\",man=\"man\",meniscus=\"meniscus\",manservant=\"manservant\",menstruum=\"menstruum\",madame=\"madame\",mademoiselle=\"mademoiselle\",mesenteron=\"mesenteron\",mesothorax=\"mesothorax\",monseigneur=\"monseigneur\",monsieur=\"monsieur\",mestizo=\"mestizo\",metacarpus=\"metacarpus\",metamorphosis=\"metamorphosis\",metanephros=\"metanephros\",metastasis=\"metastasis\",metatarsus=\"metatarsus\",metathesis=\"metathesis\",metathorax=\"metathorax\",metazoan=\"metazoan\",metempsychosis=\"metempsychosis\",metencephalon=\"metencephalon\",mezuzah=\"mezuzah\",miasma=\"miasma\",mouse=\"mouse\",microanalysis=\"microanalysis\",micrococcus=\"micrococcus\",micronucleus=\"micronucleus\",microsporangium=\"microsporangium\",midrash=\"midrash\",midwife=\"midwife\",milium=\"milium\",milieu=\"milieu\",milkfish=\"milkfish\",millennium=\"millennium\",mina=\"mina\",minimum=\"minimum\",ministerium=\"ministerium\",minutia=\"minutia\",minyan=\"minyan\",miosis=\"miosis\",miracidium=\"miracidium\",mir=\"mir\",mitochondrion=\"mitochondrion\",mitzvah=\"mitzvah\",modiolus=\"modiolus\",modulus=\"modulus\",momentum=\"momentum\",momus=\"momus\",monad=\"monad\",monkfish=\"monkfish\",monochasium=\"monochasium\",monopodium=\"monopodium\",monopteron=\"monopteron\",monopteros=\"monopteros\",monsignor=\"monsignor\",mooncalf=\"mooncalf\",moonfish=\"moonfish\",mora=\"mora\",moratorium=\"moratorium\",morceau=\"morceau\",moresco=\"moresco\",morisco=\"morisco\",morphallaxis=\"morphallaxis\",morphosis=\"morphosis\",morula=\"morula\",mosasaurus=\"mosasaurus\",moshav=\"moshav\",moslem=\"moslem\",mosquito=\"mosquito\",motto=\"motto\",mucosa=\"mucosa\",mucro=\"mucro\",mudejar=\"mudejar\",mudfish=\"mudfish\",mulatto=\"mulatto\",multipara=\"multipara\",murex=\"murex\",muskellunge=\"muskellunge\",mycelium=\"mycelium\",mycetoma=\"mycetoma\",mycobacterium=\"mycobacterium\",mycorrhiza=\"mycorrhiza\",myelencephalon=\"myelencephalon\",myiasis=\"myiasis\",myocardium=\"myocardium\",myofibrilla=\"myofibrilla\",myoma=\"myoma\",myosis=\"myosis\",myrmidon=\"myrmidon\",mythos=\"mythos\",myxoma=\"myxoma\",naevus=\"naevus\",naiad=\"naiad\",naos=\"naos\",narcissus=\"narcissus\",naris=\"naris\",nasopharynx=\"nasopharynx\",natatorium=\"natatorium\",naumachia=\"naumachia\",nauplius=\"nauplius\",nautilus=\"nautilus\",navaho=\"navaho\",navajo=\"navajo\",nebula=\"nebula\",necropolis=\"necropolis\",needlefish=\"needlefish\",negrillo=\"negrillo\",negrito=\"negrito\",negro=\"negro\",nemesis=\"nemesis\",nephridium=\"nephridium\",nereid=\"nereid\",neurohypophysis=\"neurohypophysis\",neuroma=\"neuroma\",neuropteron=\"neuropteron\",neurosis=\"neurosis\",nevus=\"nevus\",nibelung=\"nibelung\",nidus=\"nidus\",niello=\"niello\",nilgai=\"nilgai\",nimbus=\"nimbus\",nimbostratus=\"nimbostratus\",noctiluca=\"noctiluca\",nodus=\"nodus\",no=\"no\",nomen=\"nomen\",notum=\"notum\",noumenon=\"noumenon\",nova=\"nova\",novella=\"novella\",novena=\"novena\",nubecula=\"nubecula\",nucellus=\"nucellus\",nucha=\"nucha\",nucleus=\"nucleus\",nucleolus=\"nucleolus\",nullipara=\"nullipara\",numbfish=\"numbfish\",numen=\"numen\",nympha=\"nympha\",oarfish=\"oarfish\",oasis=\"oasis\",obelus=\"obelus\",obligato=\"obligato\",obolus=\"obolus\",occiput=\"occiput\",oceanarium=\"oceanarium\",oceanid=\"oceanid\",ocellus=\"ocellus\",ochrea=\"ochrea\",ocrea=\"ocrea\",octahedron=\"octahedron\",octopus=\"octopus\",oculus=\"oculus\",odeum=\"odeum\",oedema=\"oedema\",oesophagus=\"oesophagus\",oldwife=\"oldwife\",oleum=\"oleum\",omasum=\"omasum\",omayyad=\"omayyad\",omentum=\"omentum\",ommatidium=\"ommatidium\",ommiad=\"ommiad\",onager=\"onager\",oogonium=\"oogonium\",ootheca=\"ootheca\",operculum=\"operculum\",optimum=\"optimum\",os=\"os\",organum=\"organum\",organa=\"organa\",orthopteron=\"orthopteron\",osculum=\"osculum\",osteoma=\"osteoma\",ostium=\"ostium\",ottoman=\"ottoman\",ovum=\"ovum\",ovolo=\"ovolo\",ovotestis=\"ovotestis\",ox=\"ox\",oxymoron=\"oxymoron\",paddlefish=\"paddlefish\",paisa=\"paisa\",palea=\"palea\",palestra=\"palestra\",palingenesis=\"palingenesis\",pallium=\"pallium\",palmetto=\"palmetto\",palpus=\"palpus\",pancratium=\"pancratium\",panettone=\"panettone\",paparazzo=\"paparazzo\",paperknife=\"paperknife\",papilla=\"papilla\",papilloma=\"papilloma\",pappus=\"pappus\",papula=\"papula\",papyrus=\"papyrus\",parabasis=\"parabasis\",paraleipsis=\"paraleipsis\",paralysis=\"paralysis\",paramecium=\"paramecium\",parament=\"parament\",paraphysis=\"paraphysis\",parapodium=\"parapodium\",parapraxis=\"parapraxis\",paraselene=\"paraselene\",parashah=\"parashah\",parasyntheton=\"parasyntheton\",parazoan=\"parazoan\",parenthesis=\"parenthesis\",parergon=\"parergon\",parhelion=\"parhelion\",paries=\"paries\",parrotfish=\"parrotfish\",parulis=\"parulis\",pastorale=\"pastorale\",patagium=\"patagium\",patella=\"patella\",patina=\"patina\",paterfamilias=\"paterfamilias\",pea=\"pea\",peccadillo=\"peccadillo\",pecten=\"pecten\",pedalo=\"pedalo\",pes=\"pes\",pekinese=\"pekinese\",pelvis=\"pelvis\",penny=\"penny\",penis=\"penis\",penetralium=\"penetralium\",penicillium=\"penicillium\",penknife=\"penknife\",penna=\"penna\",penni=\"penni\",pentahedron=\"pentahedron\",pentimento=\"pentimento\",penumbra=\"penumbra\",peplum=\"peplum\",pericardium=\"pericardium\",perichondrium=\"perichondrium\",pericranium=\"pericranium\",peridium=\"peridium\",perigonium=\"perigonium\",perihelion=\"perihelion\",perineum=\"perineum\",perinephrium=\"perinephrium\",perionychium=\"perionychium\",periosteum=\"periosteum\",periphrasis=\"periphrasis\",peristalsis=\"peristalsis\",perithecium=\"perithecium\",peritoneum=\"peritoneum\",persona=\"persona\",petechia=\"petechia\",pfennig=\"pfennig\",phalanx=\"phalanx\",phallus=\"phallus\",pharynx=\"pharynx\",phenomenon=\"phenomenon\",philodendron=\"philodendron\",phlyctena=\"phlyctena\",phylum=\"phylum\",phyle=\"phyle\",phyllotaxis=\"phyllotaxis\",phylloxera=\"phylloxera\",phylogenesis=\"phylogenesis\",pigfish=\"pigfish\",pileum=\"pileum\",pileus=\"pileus\",pinetum=\"pinetum\",pinfish=\"pinfish\",pinko=\"pinko\",pinna=\"pinna\",pinnula=\"pinnula\",pipefish=\"pipefish\",pirog=\"pirog\",piscina=\"piscina\",pithecanthropus=\"pithecanthropus\",pithos=\"pithos\",placebo=\"placebo\",placenta=\"placenta\",planetarium=\"planetarium\",planula=\"planula\",plasmodesma=\"plasmodesma\",plasmodium=\"plasmodium\",plateau=\"plateau\",plectrum=\"plectrum\",plenum=\"plenum\",pleuron=\"pleuron\",pleura=\"pleura\",plica=\"plica\",ploughman=\"ploughman\",pneumobacillus=\"pneumobacillus\",pneumococcus=\"pneumococcus\",pocketknife=\"pocketknife\",podetium=\"podetium\",podium=\"podium\",polis=\"polis\",pollex=\"pollex\",pollinium=\"pollinium\",polychasium=\"polychasium\",polyhedron=\"polyhedron\",polyparium=\"polyparium\",polypus=\"polypus\",polyzoan=\"polyzoan\",polyzoarium=\"polyzoarium\",pons=\"pons\",pontifex=\"pontifex\",portamento=\"portamento\",portico=\"portico\",portmanteau=\"portmanteau\",postliminium=\"postliminium\",potato=\"potato\",praenomen=\"praenomen\",praxis=\"praxis\",predella=\"predella\",premaxilla=\"premaxilla\",prenomen=\"prenomen\",presa=\"presa\",primo=\"primo\",primigravida=\"primigravida\",primipara=\"primipara\",primordium=\"primordium\",principium=\"principium\",proboscis=\"proboscis\",proglottis=\"proglottis\",prognosis=\"prognosis\",prolegomenon=\"prolegomenon\",prolepsis=\"prolepsis\",promycelium=\"promycelium\",pronephros=\"pronephros\",pronucleus=\"pronucleus\",propositus=\"propositus\",proptosis=\"proptosis\",propylon=\"propylon\",propylaeum=\"propylaeum\",proscenium=\"proscenium\",prosencephalon=\"prosencephalon\",prosthesis=\"prosthesis\",prostomium=\"prostomium\",protasis=\"protasis\",prothalamium=\"prothalamium\",prothallus=\"prothallus\",prothallium=\"prothallium\",prothorax=\"prothorax\",protonema=\"protonema\",protozoan=\"protozoan\",proventriculus=\"proventriculus\",proviso=\"proviso\",prytaneum=\"prytaneum\",psalterium=\"psalterium\",pseudopodium=\"pseudopodium\",psychoneurosis=\"psychoneurosis\",psychosis=\"psychosis\",pterygium=\"pterygium\",pteryla=\"pteryla\",ptosis=\"ptosis\",pubis=\"pubis\",pudendum=\"pudendum\",pul=\"pul\",pulvillus=\"pulvillus\",pulvinus=\"pulvinus\",punchinello=\"punchinello\",pupa=\"pupa\",puparium=\"puparium\",putamen=\"putamen\",putto=\"putto\",pycnidium=\"pycnidium\",pygidium=\"pygidium\",pylorus=\"pylorus\",pyxis=\"pyxis\",pyxidium=\"pyxidium\",qaddish=\"qaddish\",quadrennium=\"quadrennium\",quadriga=\"quadriga\",quale=\"quale\",quantum=\"quantum\",quarterstaff=\"quarterstaff\",quezal=\"quezal\",quinquennium=\"quinquennium\",quiz=\"quiz\",rabato=\"rabato\",rabbitfish=\"rabbitfish\",rhachis=\"rhachis\",radix=\"radix\",radius=\"radius\",radula=\"radula\",ramentum=\"ramentum\",ramus=\"ramus\",ranula=\"ranula\",ranunculus=\"ranunculus\",raphe=\"raphe\",raphide=\"raphide\",ratfish=\"ratfish\",real=\"real\",rearmouse=\"rearmouse\",rectum=\"rectum\",rectus=\"rectus\",rectrix=\"rectrix\",redfish=\"redfish\",redia=\"redia\",referendum=\"referendum\",refugium=\"refugium\",regulus=\"regulus\",relatum=\"relatum\",remex=\"remex\",reremouse=\"reremouse\",reseau=\"reseau\",residuum=\"residuum\",responsum=\"responsum\",rete=\"rete\",retiarius=\"retiarius\",reticulum=\"reticulum\",retinaculum=\"retinaculum\",retina=\"retina\",rhabdomyoma=\"rhabdomyoma\",rachis=\"rachis\",rhinencephalon=\"rhinencephalon\",rhizobium=\"rhizobium\",rhombus=\"rhombus\",rhonchus=\"rhonchus\",rhyton=\"rhyton\",ribbonfish=\"ribbonfish\",ricercare=\"ricercare\",rickettsia=\"rickettsia\",rilievo=\"rilievo\",rima=\"rima\",rockfish=\"rockfish\",rom=\"rom\",rondeau=\"rondeau\",rosarium=\"rosarium\",rosefish=\"rosefish\",rostellum=\"rostellum\",rostrum=\"rostrum\",rouleau=\"rouleau\",ruga=\"ruga\",rumen=\"rumen\",sacrum=\"sacrum\",sacrarium=\"sacrarium\",saguaro=\"saguaro\",sailfish=\"sailfish\",salesperson=\"salesperson\",salmonella=\"salmonella\",salpa=\"salpa\",salpinx=\"salpinx\",saltarello=\"saltarello\",salvo=\"salvo\",sanctum=\"sanctum\",sanitarium=\"sanitarium\",santims=\"santims\",saphena=\"saphena\",sarcophagus=\"sarcophagus\",sartorius=\"sartorius\",sassanid=\"sassanid\",sawfish=\"sawfish\",scaldfish=\"scaldfish\",scalenus=\"scalenus\",scapula=\"scapula\",scarabaeus=\"scarabaeus\",scarf=\"scarf\",schatchen=\"schatchen\",schema=\"schema\",scherzando=\"scherzando\",scherzo=\"scherzo\",schmo=\"schmo\",scholium=\"scholium\",schul=\"schul\",schutzstaffel=\"schutzstaffel\",scirrhus=\"scirrhus\",scleroma=\"scleroma\",sclerosis=\"sclerosis\",sclerotium=\"sclerotium\",scolex=\"scolex\",scopula=\"scopula\",scoria=\"scoria\",scotoma=\"scotoma\",scriptorium=\"scriptorium\",scrotum=\"scrotum\",scudo=\"scudo\",scutum=\"scutum\",scutellum=\"scutellum\",scyphus=\"scyphus\",scyphistoma=\"scyphistoma\",scyphozoan=\"scyphozoan\",secondo=\"secondo\",segno=\"segno\",seleucid=\"seleucid\",self=\"self\",senor=\"senor\",sensillum=\"sensillum\",sent=\"sent\",senussi=\"senussi\",separatrix=\"separatrix\",sephardi=\"sephardi\",septum=\"septum\",septarium=\"septarium\",septennium=\"septennium\",sequela=\"sequela\",sequestrum=\"sequestrum\",serum=\"serum\",seraph=\"seraph\",sestertium=\"sestertium\",seta=\"seta\",sgraffito=\"sgraffito\",shabbas=\"shabbas\",shabbat=\"shabbat\",shacko=\"shacko\",shadchan=\"shadchan\",shako=\"shako\",shammes=\"shammes\",sheatfish=\"sheatfish\",sheaf=\"sheaf\",shellfish=\"shellfish\",shelf=\"shelf\",shinleaf=\"shinleaf\",shittah=\"shittah\",shmo=\"shmo\",shophar=\"shophar\",shrewmouse=\"shrewmouse\",shul=\"shul\",siddur=\"siddur\",siglos=\"siglos\",signora=\"signora\",signore=\"signore\",signorina=\"signorina\",siliqua=\"siliqua\",silva=\"silva\",silverfish=\"silverfish\",simulacrum=\"simulacrum\",sinciput=\"sinciput\",sinfonia=\"sinfonia\",sistrum=\"sistrum\",situla=\"situla\",smalto=\"smalto\",snaggletooth=\"snaggletooth\",snailfish=\"snailfish\",snipefish=\"snipefish\",socman=\"socman\",solum=\"solum\",solarium=\"solarium\",solatium=\"solatium\",soldo=\"soldo\",sol=\"sol\",solfeggio=\"solfeggio\",solo=\"solo\",solidus=\"solidus\",soma=\"soma\",soprano=\"soprano\",sordino=\"sordino\",sorus=\"sorus\",sorosis=\"sorosis\",sovkhoz=\"sovkhoz\",spadefish=\"spadefish\",spadix=\"spadix\",spearfish=\"spearfish\",spectrum=\"spectrum\",speculum=\"speculum\",spermatium=\"spermatium\",spermatogonium=\"spermatogonium\",spermatozoon=\"spermatozoon\",spermogonium=\"spermogonium\",sphinx=\"sphinx\",spica=\"spica\",spiculum=\"spiculum\",spirillum=\"spirillum\",splayfoot=\"splayfoot\",splenius=\"splenius\",sporangium=\"sporangium\",sporogonium=\"sporogonium\",sporozoan=\"sporozoan\",springhaas=\"springhaas\",spumone=\"spumone\",sputum=\"sputum\",squama=\"squama\",squash=\"squash\",squilla=\"squilla\",squirrelfish=\"squirrelfish\",squiz=\"squiz\",stadium=\"stadium\",stamen=\"stamen\",staminodium=\"staminodium\",stapes=\"stapes\",staphylococcus=\"staphylococcus\",starets=\"starets\",starfish=\"starfish\",stele=\"stele\",stemma=\"stemma\",stenosis=\"stenosis\",stepchild=\"stepchild\",sternum=\"sternum\",stigma=\"stigma\",stimulus=\"stimulus\",stipes=\"stipes\",stirps=\"stirps\",stoa=\"stoa\",stockfish=\"stockfish\",stoma=\"stoma\",stomodaeum=\"stomodaeum\",stomodeum=\"stomodeum\",stonefish=\"stonefish\",stotinka=\"stotinka\",strappado=\"strappado\",stratum=\"stratum\",stratus=\"stratus\",stratocumulus=\"stratocumulus\",streptococcus=\"streptococcus\",stretto=\"stretto\",stria=\"stria\",strobilus=\"strobilus\",stroma=\"stroma\",struma=\"struma\",stucco=\"stucco\",stylus=\"stylus\",stylops=\"stylops\",stylopodium=\"stylopodium\",subcortex=\"subcortex\",subdelirium=\"subdelirium\",subgenus=\"subgenus\",subindex=\"subindex\",submucosa=\"submucosa\",subphylum=\"subphylum\",substratum=\"substratum\",succedaneum=\"succedaneum\",succubus=\"succubus\",suckerfish=\"suckerfish\",suckfish=\"suckfish\",sudarium=\"sudarium\",sudatorium=\"sudatorium\",sulcus=\"sulcus\",summa=\"summa\",sunfish=\"sunfish\",supercargo=\"supercargo\",superhero=\"superhero\",supernova=\"supernova\",superstratum=\"superstratum\",surgeonfish=\"surgeonfish\",swami=\"swami\",sweetiewife=\"sweetiewife\",swellfish=\"swellfish\",swordfish=\"swordfish\",syconium=\"syconium\",syllabus=\"syllabus\",syllepsis=\"syllepsis\",symphysis=\"symphysis\",sympodium=\"sympodium\",symposium=\"symposium\",synapsis=\"synapsis\",synarthrosis=\"synarthrosis\",synclinorium=\"synclinorium\",syncytium=\"syncytium\",syndesmosis=\"syndesmosis\",synopsis=\"synopsis\",syntagma=\"syntagma\",synthesis=\"synthesis\",syphiloma=\"syphiloma\",syrinx=\"syrinx\",syssarcosis=\"syssarcosis\",tableau=\"tableau\",taenia=\"taenia\",talus=\"talus\",tallith=\"tallith\",tapetum=\"tapetum\",tarantula=\"tarantula\",tarsus=\"tarsus\",tarsometatarsus=\"tarsometatarsus\",taxon=\"taxon\",tax=\"tax\",taxi=\"taxi\",tectrix=\"tectrix\",tooth=\"tooth\",tegmen=\"tegmen\",tela=\"tela\",telamon=\"telamon\",telangiectasia=\"telangiectasia\",telium=\"telium\",tempo=\"tempo\",tenaculum=\"tenaculum\",tenderfoot=\"tenderfoot\",tenia=\"tenia\",tenuis=\"tenuis\",teraph=\"teraph\",teras=\"teras\",teredo=\"teredo\",tergum=\"tergum\",terminus=\"terminus\",terrarium=\"terrarium\",terzetto=\"terzetto\",tessera=\"tessera\",testa=\"testa\",testis=\"testis\",testudo=\"testudo\",tetrahedron=\"tetrahedron\",tetraskelion=\"tetraskelion\",thalamencephalon=\"thalamencephalon\",thalamus=\"thalamus\",thallus=\"thallus\",theca=\"theca\",thyrse=\"thyrse\",thesaurus=\"thesaurus\",thesis=\"thesis\",thickleaf=\"thickleaf\",thief=\"thief\",tholos=\"tholos\",thorax=\"thorax\",thrombus=\"thrombus\",thymus=\"thymus\",thyrsus=\"thyrsus\",tibia=\"tibia\",tilefish=\"tilefish\",tintinnabulum=\"tintinnabulum\",titmouse=\"titmouse\",toadfish=\"toadfish\",tobacco=\"tobacco\",tomato=\"tomato\",tomentum=\"tomentum\",tondo=\"tondo\",tonneau=\"tonneau\",tophus=\"tophus\",topos=\"topos\",torus=\"torus\",tornado=\"tornado\",torpedo=\"torpedo\",torso=\"torso\",touraco=\"touraco\",trabecula=\"trabecula\",trachea=\"trachea\",traditor=\"traditor\",tragus=\"tragus\",trapezium=\"trapezium\",trapezohedron=\"trapezohedron\",trauma=\"trauma\",treponema=\"treponema\",trichina=\"trichina\",triclinium=\"triclinium\",triennium=\"triennium\",triforium=\"triforium\",triggerfish=\"triggerfish\",trihedron=\"trihedron\",triskelion=\"triskelion\",trisoctahedron=\"trisoctahedron\",triumvir=\"triumvir\",trivium=\"trivium\",trochlea=\"trochlea\",tropaeolum=\"tropaeolum\",trousseau=\"trousseau\",trunkfish=\"trunkfish\",tryma=\"tryma\",tuba=\"tuba\",turf=\"turf\",tympanum=\"tympanum\",tyro=\"tyro\",ubermensch=\"ubermensch\",ugli=\"ugli\",uighur=\"uighur\",ulna=\"ulna\",ultimatum=\"ultimatum\",umbilicus=\"umbilicus\",umbo=\"umbo\",umbra=\"umbra\",uncus=\"uncus\",uredium=\"uredium\",uredo=\"uredo\",uredinium=\"uredinium\",uredosorus=\"uredosorus\",urethra=\"urethra\",urinalysis=\"urinalysis\",uterus=\"uterus\",utriculus=\"utriculus\",uvula=\"uvula\",vacuum=\"vacuum\",vagus=\"vagus\",vagina=\"vagina\",vallecula=\"vallecula\",vaporetto=\"vaporetto\",varix=\"varix\",vas=\"vas\",vasculum=\"vasculum\",velum=\"velum\",velamen=\"velamen\",velarium=\"velarium\",vena=\"vena\",ventriculus=\"ventriculus\",vermis=\"vermis\",verruca=\"verruca\",vertebra=\"vertebra\",vertex=\"vertex\",vertigo=\"vertigo\",vesica=\"vesica\",veto=\"veto\",vexillum=\"vexillum\",viaticum=\"viaticum\",viator=\"viator\",vibraculum=\"vibraculum\",vibrissa=\"vibrissa\",villus=\"villus\",vimen=\"vimen\",vinculum=\"vinculum\",virago=\"virago\",vis=\"vis\",virtuoso=\"virtuoso\",vita=\"vita\",vitellus=\"vitellus\",vitta=\"vitta\",vivarium=\"vivarium\",vox=\"vox\",volcano=\"volcano\",volkslied=\"volkslied\",volta=\"volta\",volva=\"volva\",vorticella=\"vorticella\",vortex=\"vortex\",vulva=\"vulva\",wahhabi=\"wahhabi\",wanderjahr=\"wanderjahr\",weakfish=\"weakfish\",werewolf=\"werewolf\",wharf=\"wharf\",whitefish=\"whitefish\",wife=\"wife\",wolffish=\"wolffish\",wolf=\"wolf\",woman=\"woman\",woodlouse=\"woodlouse\",wreckfish=\"wreckfish\",wunderkind=\"wunderkind\",xiphisternum=\"xiphisternum\",yeshiva=\"yeshiva\",yogi=\"yogi\",yourself=\"yourself\",zamindari=\"zamindari\",zecchino=\"zecchino\",zero=\"zero\",zoon=\"zoon\",zoaea=\"zoaea\",zoea=\"zoea\",zoonosis=\"zoonosis\";exceptions.aardwolves=aardwolf,exceptions.abaci=abacus,exceptions.aboideaux=aboideau,exceptions.aboiteaux=aboiteau,exceptions.abscissae=abscissa,exceptions.acanthi=acanthus,exceptions.acari=acarus,exceptions.acciaccature=acciaccatura,exceptions.acetabula=acetabulum,exceptions.achaemenidae=achaemenid,exceptions.achaemenides=achaemenid,exceptions.acicula=aciculum,exceptions.aciculae=acicula,exceptions.acini=acinus,exceptions.acromia=acromion,exceptions.actiniae=actinia,exceptions.actinozoa=actinozoan,exceptions.addenda=addendum,exceptions.adenocarcinomata=adenocarcinoma,exceptions.adenomata=adenoma,exceptions.adieux=adieu,exceptions.adyta=adytum,exceptions.aecia=aecium,exceptions.aecidia=aecidium,exceptions.aerobia=aerobium,exceptions.aggiornamenti=aggiornamento,exceptions.agnomina=agnomen,exceptions.agones=agon,exceptions.agorae=agora,exceptions.agouties=agouti,exceptions.alae=ala,exceptions.alewives=alewife,exceptions.alkalies=alkali,exceptions.allodia=allodium,exceptions.alluvia=alluvium,exceptions.alodia=alodium,exceptions.altocumuli=altocumulus,exceptions.altostrati=altostratus,exceptions.alulae=alula,exceptions.alumnae=alumna,exceptions.alumni=alumnus,exceptions.alveoli=alveolus,exceptions.amanuenses=amanuensis,exceptions.ambulacra=ambulacrum,exceptions.amebae=ameba,exceptions.amnia=amnion,exceptions.amniocenteses=amniocentesis,exceptions.amoebae=amoeba,exceptions.amoebiases=amoebiasis,exceptions.amoraim=amora,exceptions.amoretti=amoretto,exceptions.amorini=amorino,exceptions.amphiarthroses=amphiarthrosis,exceptions.amphicia=amphithecium,exceptions.amphimixes=amphimixis,exceptions.amphioxi=amphioxus,exceptions.amphisbaenae=amphisbaena,exceptions.amphorae=amphora,exceptions.ampullae=ampulla,exceptions.amygdalae=amygdala,exceptions.anabases=anabasis,exceptions.anacolutha=anacoluthon,exceptions.anacruses=anacrusis,exceptions.anaerobia=anaerobium,exceptions.anagnorises=anagnorisis,exceptions.analemmata=analemma,exceptions.analyses=analysis,exceptions.anamneses=anamnesis,exceptions.anamorphoses=anamorphosis,exceptions.anastomoses=anastomosis,exceptions.anatyxes=anaptyxis,exceptions.ancones=ancon,exceptions.androclinia=androclinium,exceptions.androecia=androecium,exceptions.androsphinges=androsphinx,exceptions.andtheridia=antheridium,exceptions.angelfishes=angelfish,exceptions.angiomata=angioma,exceptions.animalcula=animalculum,exceptions.anlagen=anlage,exceptions.annattos=annatto,exceptions.annuli=annulus,exceptions.antae=anta,exceptions.antalkalies=antalkali,exceptions.antefixa=antefix,exceptions.antennae=antenna,exceptions.antependia=antependium,exceptions.anthelia=anthelion,exceptions.anthelices=anthelix,exceptions.anthemia=anthemion,exceptions.antheridia=antheridium,exceptions.anthodia=anthodium,exceptions.anthozoa=anthozoan,exceptions.anthraces=anthrax,exceptions.anticlinoria=anticlinorium,exceptions.antihelices=antihelix,exceptions.antiheroes=antihero,exceptions.antisera=antiserum,exceptions.antitheses=antithesis,exceptions.antitragi=antitragus,exceptions.antra=antrum,exceptions.anus=anus,exceptions.aortae=aorta,exceptions.aphelia=aphelion,exceptions.aphides=aphis,exceptions.apices=apex,exceptions.apodoses=apodosis,exceptions.apomixes=apomixis,exceptions.aponeuroses=aponeurosis,exceptions.apophyses=apophysis,exceptions.aposiopeses=aposiopesis,exceptions.apothecia=apothecium,exceptions.apotheoses=apotheosis,exceptions.apparatus=apparatus,exceptions.appendices=appendix,exceptions.appoggiature=appoggiatura,exceptions.apsides=apsis,exceptions.aquae=aqua,exceptions.aquaria=aquarium,exceptions.araglis=argali,exceptions.arboreta=arboretum,exceptions.arcana=arcanum,exceptions.archegonia=archegonium,exceptions.archerfishes=archerfish,exceptions.archesporia=archesporium,exceptions.archipelagoes=archipelago,exceptions.areolae=areola,exceptions.argali=argali,exceptions.argumenta=argumentum,exceptions.ariette=arietta,exceptions.aristae=arista,exceptions.armamentaria=armamentarium,exceptions.arses=arsis,exceptions.artal=rotl,exceptions.artel=rotl,exceptions.arterioscleroses=arteriosclerosis,exceptions.aruspices=aruspex,exceptions.asceses=ascesis,exceptions.asci=ascus,exceptions.ascidia=ascidium,exceptions.ascogonia=ascogonium,exceptions.ashes=ash,exceptions.ashkenazim=ashkenazi,exceptions.aspergilla=aspergillum,exceptions.aspergilli=aspergillus,exceptions.aspergilloses=aspergillosis,exceptions.aspersoria=aspersorium,exceptions.assegais=assegai,exceptions.astragali=astragalus,exceptions.asyndeta=asyndeton,exceptions.atheromata=atheroma,exceptions.atheroscleroses=atherosclerosis,exceptions.atmolyses=atmolysis,exceptions.atria=atrium,exceptions.auditoria=auditorium,exceptions.aurae=aura,exceptions.aurar=eyrir,exceptions.aurei=aureus,exceptions.auriculae=auricula,exceptions.aurorae=aurora,exceptions.auspices=auspice,exceptions.autocatalyses=autocatalysis,exceptions.autochthones=autochthon,exceptions.automata=automaton,exceptions.avitaminoses=avitaminosis,exceptions.axes=ax,exceptions.axillae=axilla,exceptions.bacchantes=bacchante,exceptions.bacchii=bacchius,exceptions.bacilli=bacillus,exceptions.bacteriostases=bacteriostasis,exceptions.bacula=baculum,exceptions.ballistae=ballista,exceptions.bambini=bambino,exceptions.bandeaux=bandeau,exceptions.banditti=bandit,exceptions.bani=ban,exceptions.banjoes=banjo,exceptions.barklice=barklouse,exceptions.barramundies=barramundi,exceptions.bases=base,exceptions.basidia=basidium,exceptions.basileis=basileus,exceptions.bassi=basso,exceptions.bastinadoes=bastinado,exceptions.bateaux=bateau,exceptions.batfishes=batfish,exceptions.beadsmen=beadsman,exceptions.beaux=beau,exceptions.beeves=beef,exceptions.behooves=behoof,exceptions.bersaglieri=bersagliere,exceptions.bhishties=bhishti,exceptions.bibliothecae=bibliotheca,exceptions.bicennaries=bicentenary,exceptions.bijoux=bijou,exceptions.bilboes=bilbo,exceptions.billfishes=billfish,exceptions.bimboes=bimbo,exceptions.bisectrices=bisectrix,exceptions.blackfeet=blackfoot,exceptions.blackfishes=blackfish,exceptions.blastemata=blastema,exceptions.blastulae=blastula,exceptions.blindfishes=blindfish,exceptions.blowfishes=blowfish,exceptions.bluefishes=bluefish,exceptions.boarfishes=boarfish,exceptions.bok=boschbok,exceptions.boleti=boletus,exceptions.bolivares=bolivar,exceptions.bolsheviki=bolshevik,exceptions.bonefishes=bonefish,exceptions.bongoes=bongo,exceptions.bonitoes=bonito,exceptions.booklice=booklouse,exceptions.bookshelves=bookshelf,exceptions.boraces=borax,exceptions.borborygmi=borborygmus,exceptions.bordereaux=bordereau,exceptions.botargoes=botargo,exceptions.boxfishes=boxfish,exceptions.brachia=brachium,exceptions.brainchildren=brainchild,exceptions.branchiae=branchia,exceptions.brants=brant,exceptions.bravadoes=bravado,exceptions.bravoes=bravo,exceptions.bregmata=bregma,exceptions.brethren=brother,exceptions.broadleaves=broadleaf,exceptions.bronchi=bronchus,exceptions.bryozoa=bryozoan,exceptions.buboes=bubo,exceptions.buckoes=bucko,exceptions.buckteeth=bucktooth,exceptions.buffaloes=buffalo,exceptions.bullae=bulla,exceptions.bunde=bund,exceptions.bureaux=bureau,exceptions.bursae=bursa,exceptions.bushbok=boschbok,exceptions.bushboks=boschbok,exceptions.busses=bus,exceptions.butterfishes=butterfish,exceptions.byssi=byssus,exceptions.cacti=cactus,exceptions.caducei=caduceus,exceptions.caeca=caecum,exceptions.caesurae=caesura,exceptions.calami=calamus,exceptions.calathi=calathus,exceptions.calcanei=calcaneum,exceptions.calces=calx,exceptions.calculi=calculus,exceptions.caldaria=caldarium,exceptions.calices=calix,exceptions.calicoes=calico,exceptions.calli=callus,exceptions.calves=calf,exceptions.calyces=calyx,exceptions.cambia=cambium,exceptions.camerae=camera,exceptions.canaliculi=canaliculus,exceptions.candelabra=candelabrum,exceptions.candlefishes=candlefish,exceptions.canthi=canthus,exceptions.canulae=canula,exceptions.canzoni=canzone,exceptions.capita=caput,exceptions.capitula=capitulum,exceptions.capricci=capriccio,exceptions.carabinieri=carabiniere,exceptions.carbonadoes=carbonado,exceptions.carcinomata=carcinoma,exceptions.cargoes=cargo,exceptions.carides=caryatid,exceptions.carinae=carina,exceptions.caroli=carolus,exceptions.carpi=carpus,exceptions.carpogonia=carpogonium,exceptions.caryopses=caryopsis,exceptions.caryopsides=caryopsis,exceptions.castrati=castrato,exceptions.catabases=catabasis,exceptions.cataclases=cataclasis,exceptions.cataloes=catalo,exceptions.catalyses=catalysis,exceptions.catenae=catena,exceptions.catfishes=catfish,exceptions.cathari=cathar,exceptions.cathexes=cathexis,exceptions.cattaloes=cattalo,exceptions.caudices=caudex,exceptions.caules=caulis,exceptions.cavatine=cavatina,exceptions.cavefishes=cavefish,exceptions.cavetti=cavetto,exceptions.ceca=cecum,exceptions.cellae=cella,exceptions.cembali=cembalo,exceptions.centesimi=centesimo,exceptions.centra=centrum,exceptions.cephalothoraces=cephalothorax,exceptions.cercariae=cercaria,exceptions.cercariiae=cercaria,exceptions.cerci=cercus,exceptions.cerebella=cerebellum,exceptions.cerebra=cerebrum,exceptions.cervices=cervix,exceptions.cestuses=caestus,exceptions.cesurae=cesura,exceptions.chadarim=cheder,exceptions.chaetae=chaeta,exceptions.chalazae=chalaza,exceptions.challoth=hallah,exceptions.chalutzim=chalutz,exceptions.chapaties=chapati,exceptions.chapatties=chapatti,exceptions.chapeaux=chapeau,exceptions.chasidim=chasid,exceptions.chassidim=chassid,exceptions.chateaux=chateau,exceptions.chazanim=chazan,exceptions.chedarim=cheder,exceptions.chelae=chela,exceptions.chelicerae=chelicera,exceptions.cherubim=cherub,exceptions.chiasmata=chiasma,exceptions.chiasmi=chiasmus,exceptions.children=child,exceptions.chillies=chilli,exceptions.chitarroni=chitarrone,exceptions.chlamydes=chlamys,exceptions.chlamyses=chlamys,exceptions.chondromata=chondroma,exceptions.choragi=choragus,exceptions.choriambi=choriambus,exceptions.choux=chou,exceptions.chromonemata=chromonema,exceptions.chrysalides=chrysalis,exceptions.chuvashes=chuvash,exceptions.ciboria=ciborium,exceptions.cicadae=cicada,exceptions.cicale=cicala,exceptions.cicatrices=cicatrix,exceptions.ciceroni=cicerone,exceptions.cicisbei=cicisbeo,exceptions.cilia=cilium,exceptions.cimices=cimex,exceptions.cineraria=cinerarium,exceptions.cingula=cingulum,exceptions.cirri=cirrus,exceptions.cirrocumuli=cirrocumulus,exceptions.cirrostrati=cirrostratus,exceptions.ciscoes=cisco,exceptions.cisternae=cisterna,exceptions.clani=clarino,exceptions.clanos=clarino,exceptions.claroes=claro,exceptions.clepsydrae=clepsydra,exceptions.clinandria=clinandrium,exceptions.clingfishes=clingfish,exceptions.clitella=clitellum,exceptions.cloacae=cloaca,exceptions.clostridia=clostridium,exceptions.cloverleaves=cloverleaf,exceptions.clypei=clypeus,exceptions.coagula=coagulum,exceptions.coalfishes=coalfish,exceptions.cocci=coccus,exceptions.coccyges=coccyx,exceptions.cochleae=cochlea,exceptions.codfishes=codfish,exceptions.codices=codex,exceptions.coelentera=coelenteron,exceptions.coenuri=coenurus,exceptions.cognomina=cognomen,exceptions.cognosenti=cognosente,exceptions.cola=colon,exceptions.coleorhizae=coleorhiza,exceptions.collegia=collegium,exceptions.colloquia=colloquium,exceptions.colluvia=colluvium,exceptions.collyria=collyrium,exceptions.colones=colon,exceptions.colossi=colossus,exceptions.columbaria=columbarium,exceptions.columellae=columella,exceptions.comae=coma,exceptions.comatulae=comatula,exceptions.comedones=comedo,exceptions.comics=comic,exceptions.commandoes=commando,exceptions.concertanti=concertante,exceptions.concerti=concerto,exceptions.concertini=concertino,exceptions.conchae=concha,exceptions.condottieri=condottiere,exceptions.condylomata=condyloma,exceptions.confervae=conferva,exceptions.congii=congius,exceptions.conidia=conidium,exceptions.conjunctivae=conjunctiva,exceptions.conquistadores=conquistador,exceptions.consortia=consortium,exceptions.contagia=contagium,exceptions.continua=continuum,exceptions.contralti=contralto,exceptions.conversazioni=conversazione,exceptions.convolvuli=convolvulus,exceptions.copulae=copula,exceptions.corbiculae=corbicula,exceptions.coria=corium,exceptions.corneae=cornea,exceptions.cornua=cornu,exceptions.coronae=corona,exceptions.corpora=corpus,exceptions.corrigenda=corrigendum,exceptions.cortices=cortex,exceptions.cortinae=cortina,exceptions.corybantes=corybant,exceptions.coryphaei=coryphaeus,exceptions.costae=costa,exceptions.cothurni=cothurnus,exceptions.couteaux=couteau,exceptions.cowfishes=cowfish,exceptions.coxae=coxa,exceptions.cramboes=crambo,exceptions.crania=cranium,exceptions.crases=crasis,exceptions.crawfishes=crawfish,exceptions.crayfishes=crayfish,exceptions.credenda=credendum,exceptions.crematoria=crematorium,exceptions.crescendi=crescendo,exceptions.cribella=cribellum,exceptions.crises=crisis,exceptions.crissa=crissum,exceptions.cristae=crista,exceptions.criteria=criterion,exceptions.cruces=crux,exceptions.crura=crus,exceptions.crusadoes=crusado,exceptions.cruzadoes=cruzado,exceptions.crying=cry,exceptions.cryings=cry,exceptions.ctenidia=ctenidium,exceptions.cubicula=cubiculum,exceptions.culices=culex,exceptions.culpae=culpa,exceptions.culti=cultus,exceptions.cumuli=cumulus,exceptions.cumulonimbi=cumulonimbus,exceptions.cumulostrati=cumulostratus,exceptions.curiae=curia,exceptions.curricula=curriculum,exceptions.custodes=custos,exceptions.cutes=cutis,exceptions.cuticulae=cuticula,exceptions.cuttlefishes=cuttlefish,exceptions.cyclopes=cyclops,exceptions.cycloses=cyclosis,exceptions.cylices=cylix,exceptions.cylikes=cylix,exceptions.cymae=cyma,exceptions.cymatia=cymatium,exceptions.cypselae=cypsela,exceptions.cysticerci=cysticercus,exceptions.dadoes=dado,exceptions.dagoes=dago,exceptions.damselfishes=damselfish,exceptions.data=datum,exceptions.daymio=daimio,exceptions.daymios=daimio,exceptions.dealfishes=dealfish,exceptions.decemviri=decemvir,exceptions.decennia=decennium,exceptions.deciduae=decidua,exceptions.definienda=definiendum,exceptions.definientia=definiens,exceptions.delphinia=delphinium,exceptions.denarii=denarius,exceptions.dentalia=dentalium,exceptions.dermatoses=dermatosis,exceptions.desiderata=desideratum,exceptions.desperadoes=desperado,exceptions.devilfishes=devilfish,exceptions.diaereses=diaeresis,exceptions.diaerses=diaeresis,exceptions.diagnoses=diagnosis,exceptions.dialyses=dialysis,exceptions.diaphyses=diaphysis,exceptions.diapophyses=diapophysis,exceptions.diarthroses=diarthrosis,exceptions.diastalses=diastalsis,exceptions.diastases=diastasis,exceptions.diastemata=diastema,exceptions.diastemata=diastema,exceptions.diathses=diathesis,exceptions.diazoes=diazo,exceptions.dibbukkim=dibbuk,exceptions.dichasia=dichasium,exceptions.dicta=dictum,exceptions.didoes=dido,exceptions.diereses=dieresis,exceptions.dieses=diesis,exceptions.differentiae=differentia,exceptions.dilettanti=dilettante,exceptions.diluvia=diluvium,exceptions.dingoes=dingo,exceptions.diplococci=diplococcus,exceptions.disci=discus,exceptions.discoboli=discobolus,exceptions.dive=diva,exceptions.diverticula=diverticulum,exceptions.divertimenti=divertimento,exceptions.djinn=djinny,exceptions.dodoes=dodo,exceptions.dogfishes=dogfish,exceptions.dogmata=dogma,exceptions.dogteeth=dogtooth,exceptions.dollarfishes=dollarfish,exceptions.domatia=domatium,exceptions.dominoes=domino,exceptions.dormice=dormouse,exceptions.dorsa=dorsum,exceptions.drachmae=drachma,exceptions.drawknives=drawknife,exceptions.drosophilae=drosophila,exceptions.drumfishes=drumfish,exceptions.dryades=dryad,exceptions.dui=duo,exceptions.duona=duodenum,exceptions.duonas=duodenum,exceptions.dupondii=dupondius,exceptions.duumviri=duumvir,exceptions.dwarves=dwarf,exceptions.dybbukkim=dybbuk,exceptions.ecchymoses=ecchymosis,exceptions.ecclesiae=ecclesia,exceptions.ecdyses=ecdysis,exceptions.echidnae=echidna,exceptions.echini=echinus,exceptions.echinococci=echinococcus,exceptions.echoes=echo,exceptions.ectozoa=ectozoan,exceptions.eddoes=eddo,exceptions.edemata=edema,exceptions.effluvia=effluvium,exceptions.eidola=eidolon,exceptions.eisegeses=eisegesis,exceptions.eisteddfodau=eisteddfod,exceptions.elenchi=elenchus,exceptions.ellipses=ellipsis,exceptions.eluvia=eluvium,exceptions.elves=elf,exceptions.elytra=elytrum,exceptions.embargoes=embargo,exceptions.emboli=embolus,exceptions.emphases=emphasis,exceptions.emporia=emporium,exceptions.enarthroses=enarthrosis,exceptions.encephala=encephalon,exceptions.encephalitides=encephalitis,exceptions.encephalomata=encephaloma,exceptions.enchiridia=enchiridion,exceptions.enchondromata=enchondroma,exceptions.encomia=encomium,exceptions.endamebae=endameba,exceptions.endamoebae=endamoeba,exceptions.endocardia=endocardium,exceptions.endocrania=endocranium,exceptions.endometria=endometrium,exceptions.endostea=endosteum,exceptions.endostoses=endostosis,exceptions.endothecia=endothecium,exceptions.endothelia=endothelium,exceptions.endotheliomata=endothelioma,exceptions.endozoa=endozoan,exceptions.enemata=enema,exceptions.enneahedra=enneahedron,exceptions.entamebae=entameba,exceptions.entamoebae=entamoeba,exceptions.entases=entasis,exceptions.entera=enteron,exceptions.entia=ens,exceptions.entozoa=entozoan,exceptions.epencephala=epencephalon,exceptions.epentheses=epenthesis,exceptions.epexegeses=epexegesis,exceptions.ephemera=ephemeron,exceptions.ephemerae=ephemera,exceptions.ephemerides=ephemeris,exceptions.ephori=ephor,exceptions.epicalyces=epicalyx,exceptions.epicanthi=epicanthus,exceptions.epicardia=epicardium,exceptions.epicedia=epicedium,exceptions.epicleses=epiclesis,exceptions.epididymides=epididymis,exceptions.epigastria=epigastrium,exceptions.epiglottides=epiglottis,exceptions.epimysia=epimysium,exceptions.epiphenomena=epiphenomenon,exceptions.epiphyses=epiphysis,exceptions.episterna=episternum,exceptions.epithalamia=epithalamium,exceptions.epithelia=epithelium,exceptions.epitheliomata=epithelioma,exceptions.epizoa=epizoan,exceptions.epyllia=epyllion,exceptions.equilibria=equilibrium,exceptions.equiseta=equisetum,exceptions.eringoes=eringo,exceptions.errata=erratum,exceptions.eryngoes=eryngo,exceptions.esophagi=esophagus,exceptions.etyma=etymon,exceptions.eucalypti=eucalyptus,exceptions.eupatridae=eupatrid,exceptions.euripi=euripus,exceptions.exanthemata=exanthema,exceptions.executrices=executrix,exceptions.exegeses=exegesis,exceptions.exempla=exemplum,exceptions.exordia=exordium,exceptions.exostoses=exostosis,exceptions.extrema=extremum,exceptions.eyeteeth=eyetooth,exceptions.fabliaux=fabliau,exceptions.faciae=facia,exceptions.faculae=facula,exceptions.faeroese=faeroese,exceptions.fallfishes=fallfish,exceptions.famuli=famulus,exceptions.faroese=faroese,exceptions.farragoes=farrago,exceptions.fasciae=fascia,exceptions.fasciculi=fasciculus,exceptions.fatsoes=fatso,exceptions.faunae=fauna,exceptions.feculae=fecula,exceptions.fedayeen=fedayee,exceptions.feet=foot,exceptions.fellaheen=fellah,exceptions.fellahin=fellah,exceptions.femora=femur,exceptions.fenestellae=fenestella,exceptions.fenestrae=fenestra,exceptions.feriae=feria,exceptions.fermate=fermata,exceptions.ferulae=ferula,exceptions.festschriften=festschrift,exceptions.fetiales=fetial,exceptions.fezzes=fez,exceptions.fiascoes=fiasco,exceptions.fibrillae=fibrilla,exceptions.fibromata=fibroma,exceptions.fibulae=fibula,exceptions.ficoes=fico,exceptions.fideicommissa=fideicommissum,exceptions.fieldmice=fieldmouse,exceptions.figs=fig,exceptions.fila=filum,exceptions.filariiae=filaria,exceptions.filefishes=filefish,exceptions.fimbriae=fimbria,exceptions.fishes=fish,exceptions.fishwives=fishwife,exceptions.fistulae=fistula,exceptions.flabella=flabellum,exceptions.flagella=flagellum,exceptions.flagstaves=flagstaff,exceptions.flambeaux=flambeau,exceptions.flamines=flamen,exceptions.flamingoes=flamingo,exceptions.flatfeet=flatfoot,exceptions.flatfishes=flatfish,exceptions.flittermice=flittermouse,exceptions.flocci=floccus,exceptions.flocculi=flocculus,exceptions.florae=flora,exceptions.floreant=floreat,exceptions.florilegia=florilegium,exceptions.flyleaves=flyleaf,exceptions.foci=focus,exceptions.folia=folium,exceptions.fora=forum,exceptions.foramina=foramen,exceptions.forceps=forceps,exceptions.forefeet=forefoot,exceptions.foreteeth=foretooth,exceptions.formicaria=formicarium,exceptions.formulae=formula,exceptions.fornices=fornix,exceptions.fortes=fortis,exceptions.fossae=fossa,exceptions.foveae=fovea,exceptions.foveolae=foveola,exceptions.fractocumuli=fractocumulus,exceptions.fractostrati=fractostratus,exceptions.fraena=fraenum,exceptions.frauen=frau,exceptions.frena=frenum,exceptions.frenula=frenulum,exceptions.frescoes=fresco,exceptions.fricandeaux=fricandeau,exceptions.fricandoes=fricando,exceptions.frijoles=frijol,exceptions.frogfishes=frogfish,exceptions.frontes=frons,exceptions.frusta=frustum,exceptions.fuci=fucus,exceptions.fulcra=fulcrum,exceptions.fumatoria=fumatorium,exceptions.fundi=fundus,exceptions.fungi=fungus,exceptions.funiculi=funiculus,exceptions.furcula=furculum,exceptions.furculae=furcula,exceptions.furfures=furfur,exceptions.galeae=galea,exceptions.gambadoes=gambado,exceptions.gametangia=gametangium,exceptions.gametoecia=gametoecium,exceptions.gammadia=gammadion,exceptions.ganglia=ganglion,exceptions.garfishes=garfish,exceptions.gas=gas,exceptions.gasses=gas,exceptions.gastrulae=gastrula,exceptions.gateaux=gateau,exceptions.gazeboes=gazebo,exceptions.geckoes=gecko,exceptions.geese=goose,exceptions.gelsemia=gelsemium,exceptions.gemboks=gemsbok,exceptions.gembucks=gemsbuck,exceptions.gemeinschaften=gemeinschaft,exceptions.gemmae=gemma,exceptions.genera=genus,exceptions.generatrices=generatrix,exceptions.geneses=genesis,exceptions.genii=genius,exceptions.gentes=gens,exceptions.genua=genu,exceptions.genus=genus,exceptions.germina=germen,exceptions.gesellschaften=gesellschaft,exceptions.gestalten=gestalt,exceptions.ghettoes=ghetto,exceptions.gingivae=gingiva,exceptions.gingkoes=gingko,exceptions.ginglymi=ginglymus,exceptions.ginkgoes=ginkgo,exceptions.gippoes=gippo,exceptions.glabellae=glabella,exceptions.gladioli=gladiolus,exceptions.glandes=glans,exceptions.gliomata=glioma,exceptions.glissandi=glissando,exceptions.globefishes=globefish,exceptions.globigerinae=globigerina,exceptions.glochidcia=glochidium,exceptions.glochidia=glochidium,exceptions.glomeruli=glomerulus,exceptions.glossae=glossa,exceptions.glottides=glottis,exceptions.glutaei=glutaeus,exceptions.glutei=gluteus,exceptions.gnoses=gnosis,exceptions.goatfishes=goatfish,exceptions.goboes=gobo,exceptions.godchildren=godchild,exceptions.goes=go,exceptions.goldfishes=goldfish,exceptions.gomphoses=gomphosis,exceptions.gonia=gonion,exceptions.gonidia=gonidium,exceptions.gonococci=gonococcus,exceptions.goodwives=goodwife,exceptions.goosefishes=goosefish,exceptions.gorgoneia=gorgoneion,exceptions.gospopoda=gospodin,exceptions.goyim=goy,exceptions.gps=gps,exceptions.grafen=graf,exceptions.graffiti=graffito,exceptions.grandchildren=grandchild,exceptions.granulomata=granuloma,exceptions.gravamina=gravamen,exceptions.groszy=grosz,exceptions.grottoes=grotto,exceptions.guilder=guilde,exceptions.guilders=guilde,exceptions.guitarfishes=guitarfish,exceptions.gummata=gumma,exceptions.gurnard=gurnar,exceptions.gurnards=gurnar;exceptions.guttae=gutta,exceptions.gymnasia=gymnasium,exceptions.gynaecea=gynaeceum,exceptions.gynaecia=gynaecium,exceptions.gynecea=gynecium,exceptions.gynecia=gynecium,exceptions.gynoecea=gynoecium,exceptions.gynoecia=gynoecium,exceptions.gyri=gyrus,exceptions.hadarim=heder,exceptions.hadjes=hadj,exceptions.haematolyses=haematolysis,exceptions.haematomata=haematoma,exceptions.haematozoa=haematozoon,exceptions.haemodialyses=haemodialysis,exceptions.haemolyses=haemolysis,exceptions.haemoptyses=haemoptysis,exceptions.haeredes=haeres,exceptions.haftaroth=haftarah,exceptions.hagfishes=hagfish,exceptions.haggadas=haggadah,exceptions.haggadoth=haggada,exceptions.hajjes=hajj,exceptions.haleru=haler,exceptions.halfpence=halfpenny,exceptions.hallot=hallah,exceptions.halloth=hallah,exceptions.halluces=hallux,exceptions.haloes=halo,exceptions.halteres=halter,exceptions.halves=half,exceptions.hamuli=hamulus,exceptions.haphtaroth=haphtarah,exceptions.haredim=haredi,exceptions.haruspices=haruspex,exceptions.hasidim=hasid,exceptions.hassidim=hassid,exceptions.haustella=haustellum,exceptions.haustoria=haustorium,exceptions.hazzanim=hazzan,exceptions.hectocotyli=hectocotylus,exceptions.heldentenore=heldentenor,exceptions.helices=helix,exceptions.heliozoa=heliozoan,exceptions.hematolyses=hematolysis,exceptions.hematomata=hematoma,exceptions.hematozoa=hematozoon,exceptions.hemelytra=hemelytron,exceptions.hemielytra=hemielytron,exceptions.hemodialyses=hemodialysis,exceptions.hemolyses=hemolysis,exceptions.hemoptyses=hemoptysis,exceptions.hendecahedra=hendecahedron,exceptions.heraclidae=heraclid,exceptions.heraklidae=heraklid,exceptions.herbaria=herbarium,exceptions.hermae=herma,exceptions.hermai=herma,exceptions.herniae=hernia,exceptions.heroes=hero,exceptions.herren=herr,exceptions.hetaerae=hetaera,exceptions.hetairai=hetaira,exceptions.hibernacula=hibernaculum,exceptions.hieracosphinges=hieracosphinx,exceptions.hila=hilum,exceptions.hili=hilus,exceptions.himatia=himation,exceptions.hippocampi=hippocampus,exceptions.hippopotami=hippopotamus,exceptions.his=his,exceptions.hoboes=hobo,exceptions.hogfishes=hogfish,exceptions.homunculi=homunculus,exceptions.honoraria=honorarium,exceptions.hooves=hoof,exceptions.horologia=horologium,exceptions.housewives=housewife,exceptions.humeri=humerus,exceptions.hydrae=hydra,exceptions.hydromedusae=hydromedusa,exceptions.hydrozoa=hydrozoan,exceptions.hymenoptera=hymenopteran,exceptions.hynia=hymenium,exceptions.hyniums=hymenium,exceptions.hypanthia=hypanthium,exceptions.hyperostoses=hyperostosis,exceptions.hyphae=hypha,exceptions.hypnoses=hypnosis,exceptions.hypochondria=hypochondrium,exceptions.hypogastria=hypogastrium,exceptions.hypogea=hypogeum,exceptions.hypophyses=hypophysis,exceptions.hypostases=hypostasis,exceptions.hypothalami=hypothalamus,exceptions.hypotheses=hypothesis,exceptions.hyraces=hyrax,exceptions.iambi=iamb,exceptions.ibices=ibex,exceptions.ibo=igbo,exceptions.ichthyosauri=ichthyosaurus,exceptions.ichthyosauruses=ichthyosaur,exceptions.iconostases=iconostas,exceptions.icosahedra=icosahedron,exceptions.ideata=ideatum,exceptions.igorrorote=igorrote,exceptions.ilia=ilium,exceptions.imagines=imago,exceptions.imagoes=imago,exceptions.imperia=imperium,exceptions.impies=impi,exceptions.incubi=incubus,exceptions.incudes=incus,exceptions.indices=index,exceptions.indigoes=indigo,exceptions.indumenta=indumentum,exceptions.indusia=indusium,exceptions.infundibula=infundibulum,exceptions.ingushes=ingush,exceptions.innuendoes=innuendo,exceptions.inocula=inoculum,exceptions.insectaria=insectarium,exceptions.insulae=insula,exceptions.intagli=intaglio,exceptions.interleaves=interleaf,exceptions.intermezzi=intermezzo,exceptions.interreges=interrex,exceptions.interregna=interregnum,exceptions.intimae=intima,exceptions.involucella=involucellum,exceptions.involucra=involucrum,exceptions.irides=iris,exceptions.irs=irs,exceptions.is=is,exceptions.ischia=ischium,exceptions.isthmi=isthmus,exceptions.jackeroos=jackeroo,exceptions.jackfishes=jackfish,exceptions.jackknives=jackknife,exceptions.jambeaux=jambeau,exceptions.jellyfishes=jellyfish,exceptions.jewelfishes=jewelfish,exceptions.jewfishes=jewfish,exceptions.jingoes=jingo,exceptions.jinn=jinni,exceptions.joes=joe,exceptions.jura=jus,exceptions.kaddishim=kaddish,exceptions.kalmuck=kalmuc,exceptions.kalmucks=kalmuc,exceptions.katabases=katabasis,exceptions.keeshonden=keeshond,exceptions.kibbutzim=kibbutz,exceptions.killifishes=killifish,exceptions.kingfishes=kingfish,exceptions.knives=knife,exceptions.kohlrabies=kohlrabi,exceptions.kronen=krone,exceptions.kroner=krone,exceptions.kronur=krona,exceptions.krooni=kroon,exceptions.kylikes=kylix,exceptions.labara=labarum,exceptions.labella=labellum,exceptions.labia=labium,exceptions.labra=labrum,exceptions.lactobacilli=lactobacillus,exceptions.lacunae=lacuna,exceptions.lacunaria=lacunar,exceptions.lamellae=lamella,exceptions.lamiae=lamia,exceptions.laminae=lamina,exceptions.lapilli=lapillus,exceptions.lapithae=lapith,exceptions.larvae=larva,exceptions.larynges=larynx,exceptions.lassoes=lasso,exceptions.lati=lat,exceptions.latices=latex,exceptions.latifundia=latifundium,exceptions.latu=lat,exceptions.lavaboes=lavabo,exceptions.leaves=leaf,exceptions.lecythi=lecythus,exceptions.leges=lex,exceptions.lei=leu,exceptions.lemmata=lemma,exceptions.lemnisci=lemniscus,exceptions.lenes=lenis,exceptions.lentigines=lentigo,exceptions.leonides=leonid,exceptions.lepidoptera=lepidopteran,exceptions.leprosaria=leprosarium,exceptions.lepta=lepton,exceptions.leptocephali=leptocephalus,exceptions.leucocytozoa=leucocytozoan,exceptions.leva=lev,exceptions.librae=libra,exceptions.libretti=libretto,exceptions.lice=louse,exceptions.lieder=lied,exceptions.ligulae=ligula,exceptions.limbi=limbus,exceptions.limina=limen,exceptions.limites=limes,exceptions.limuli=limulus,exceptions.lingoes=lingo,exceptions.linguae=lingua,exceptions.lionfishes=lionfish,exceptions.lipomata=lipoma,exceptions.lire=lira,exceptions.liriodendra=liriodendron,exceptions.lisente=sente,exceptions.listente=sente,exceptions.litai=litas,exceptions.litu=litas,exceptions.lives=life,exceptions.lixivia=lixivium,exceptions.loaves=loaf,exceptions.loci=locus,exceptions.loculi=loculus,exceptions.loggie=loggia,exceptions.logia=logion,exceptions.lomenta=lomentum,exceptions.longobardi=longobard,exceptions.loricae=lorica,exceptions.luba=luba,exceptions.lubritoria=lubritorium,exceptions.lumbi=lumbus,exceptions.lumina=lumen,exceptions.lumpfishes=lumpfish,exceptions.lungfishes=lungfish,exceptions.lunulae=lunula,exceptions.lures=lure,exceptions.lustra=lustre,exceptions.lymphangitides=lymphangitis,exceptions.lymphomata=lymphoma,exceptions.lymphopoieses=lymphopoiesis,exceptions.lyses=lysis,exceptions.lyttae=lytta,exceptions.maare=maar,exceptions.macaronies=macaroni,exceptions.maccaronies=maccaroni,exceptions.machzorim=machzor,exceptions.macronuclei=macronucleus,exceptions.macrosporangia=macrosporangium,exceptions.maculae=macula,exceptions.madornos=madrono,exceptions.maestri=maestro,exceptions.mafiosi=mafioso,exceptions.magi=magus,exceptions.magmata=magma,exceptions.magnificoes=magnifico,exceptions.mahzorim=mahzor,exceptions.makuta=likuta,exceptions.mallei=malleus,exceptions.malleoli=malleolus,exceptions.maloti=loti,exceptions.mamillae=mamilla,exceptions.mammae=mamma,exceptions.mammillae=mammilla,exceptions.mandingoes=mandingo,exceptions.mangoes=mango,exceptions.manifestoes=manifesto,exceptions.manteaux=manteau,exceptions.mantes=mantis,exceptions.manubria=manubrium,exceptions.marchese=marchesa,exceptions.marchesi=marchese,exceptions.maremme=maremma,exceptions.markkaa=markka,exceptions.marsupia=marsupium,exceptions.matrices=matrix,exceptions.matzoth=matzo,exceptions.mausolea=mausoleum,exceptions.maxillae=maxilla,exceptions.maxima=maximum,exceptions.media=medium,exceptions.mediae=media,exceptions.mediastina=mediastinum,exceptions.medullae=medulla,exceptions.medusae=medusa,exceptions.megara=megaron,exceptions.megasporangia=megasporangium,exceptions.megilloth=megillah,exceptions.meioses=meiosis,exceptions.melanomata=melanoma,exceptions.melismata=melisma,exceptions.mementoes=memento,exceptions.memoranda=memorandum,exceptions.men=man,exceptions.menisci=meniscus,exceptions.menservants=manservant,exceptions.menstrua=menstruum,exceptions.mesdames=madame,exceptions.mesdemoiselles=mademoiselle,exceptions.mesentera=mesenteron,exceptions.mesothoraces=mesothorax,exceptions.messeigneurs=monseigneur,exceptions.messieurs=monsieur,exceptions.mestizoes=mestizo,exceptions.metacarpi=metacarpus,exceptions.metamorphoses=metamorphosis,exceptions.metanephroi=metanephros,exceptions.metastases=metastasis,exceptions.metatarsi=metatarsus,exceptions.metatheses=metathesis,exceptions.metathoraces=metathorax,exceptions.metazoa=metazoan,exceptions.metempsychoses=metempsychosis,exceptions.metencephala=metencephalon,exceptions.mezuzoth=mezuzah,exceptions.miasmata=miasma,exceptions.mice=mouse,exceptions.microanalyses=microanalysis,exceptions.micrococci=micrococcus,exceptions.micronuclei=micronucleus,exceptions.microsporangia=microsporangium,exceptions.midrashim=midrash,exceptions.midwives=midwife,exceptions.milia=milium,exceptions.milieux=milieu,exceptions.milkfishes=milkfish,exceptions.millennia=millennium,exceptions.minae=mina,exceptions.minima=minimum,exceptions.ministeria=ministerium,exceptions.minutiae=minutia,exceptions.minyanim=minyan,exceptions.mioses=miosis,exceptions.miracidia=miracidium,exceptions.miri=mir,exceptions.mitochondria=mitochondrion,exceptions.mitzvoth=mitzvah,exceptions.modioli=modiolus,exceptions.moduli=modulus,exceptions.momenta=momentum,exceptions.momi=momus,exceptions.monades=monad,exceptions.monkfishes=monkfish,exceptions.monochasia=monochasium,exceptions.monopodia=monopodium,exceptions.monoptera=monopteron,exceptions.monopteroi=monopteros,exceptions.monsignori=monsignor,exceptions.mooncalves=mooncalf,exceptions.moonfishes=moonfish,exceptions.morae=mora,exceptions.moratoria=moratorium,exceptions.morceaux=morceau,exceptions.morescoes=moresco,exceptions.moriscoes=morisco,exceptions.morphallaxes=morphallaxis,exceptions.morphoses=morphosis,exceptions.morulae=morula,exceptions.mosasauri=mosasaurus,exceptions.moshavim=moshav,exceptions.moslim=moslem,exceptions.moslims=moslem,exceptions.mosquitoes=mosquito,exceptions.mottoes=motto,exceptions.mucosae=mucosa,exceptions.mucrones=mucro,exceptions.mudejares=mudejar,exceptions.mudfishes=mudfish,exceptions.mulattoes=mulatto,exceptions.multiparae=multipara,exceptions.murices=murex,exceptions.muskallunge=muskellunge,exceptions.mycelia=mycelium,exceptions.mycetomata=mycetoma,exceptions.mycobacteria=mycobacterium,exceptions.mycorrhizae=mycorrhiza,exceptions.myelencephala=myelencephalon,exceptions.myiases=myiasis,exceptions.myocardia=myocardium,exceptions.myofibrillae=myofibrilla,exceptions.myomata=myoma,exceptions.myoses=myosis,exceptions.myrmidones=myrmidon,exceptions.mythoi=mythos,exceptions.myxomata=myxoma,exceptions.naevi=naevus,exceptions.naiades=naiad,exceptions.naoi=naos,exceptions.narcissi=narcissus,exceptions.nares=naris,exceptions.nasopharynges=nasopharynx,exceptions.natatoria=natatorium,exceptions.naumachiae=naumachia,exceptions.nauplii=nauplius,exceptions.nautili=nautilus,exceptions.navahoes=navaho,exceptions.navajoes=navajo,exceptions.nebulae=nebula,exceptions.necropoleis=necropolis,exceptions.needlefishes=needlefish,exceptions.negrilloes=negrillo,exceptions.negritoes=negrito,exceptions.negroes=negro,exceptions.nemeses=nemesis,exceptions.nephridia=nephridium,exceptions.nereides=nereid,exceptions.neurohypophyses=neurohypophysis,exceptions.neuromata=neuroma,exceptions.neuroptera=neuropteron,exceptions.neuroses=neurosis,exceptions.nevi=nevus,exceptions.nibelungen=nibelung,exceptions.nidi=nidus,exceptions.nielli=niello,exceptions.nilgai=nilgai,exceptions.nimbi=nimbus,exceptions.nimbostrati=nimbostratus,exceptions.noctilucae=noctiluca,exceptions.nodi=nodus,exceptions.noes=no,exceptions.nomina=nomen,exceptions.nota=notum,exceptions.noumena=noumenon,exceptions.novae=nova,exceptions.novelle=novella,exceptions.novenae=novena,exceptions.nubeculae=nubecula,exceptions.nucelli=nucellus,exceptions.nuchae=nucha,exceptions.nuclei=nucleus,exceptions.nucleoli=nucleolus,exceptions.nulliparae=nullipara,exceptions.numbfishes=numbfish,exceptions.numina=numen,exceptions.nymphae=nympha,exceptions.oarfishes=oarfish,exceptions.oases=oasis,exceptions.obeli=obelus,exceptions.obligati=obligato,exceptions.oboli=obolus,exceptions.occipita=occiput,exceptions.oceanaria=oceanarium,exceptions.oceanides=oceanid,exceptions.ocelli=ocellus,exceptions.ochreae=ochrea,exceptions.ocreae=ocrea,exceptions.octahedra=octahedron,exceptions.octopi=octopus,exceptions.oculi=oculus,exceptions.odea=odeum,exceptions.oedemata=oedema,exceptions.oesophagi=oesophagus,exceptions.oldwives=oldwife,exceptions.olea=oleum,exceptions.omasa=omasum,exceptions.omayyades=omayyad,exceptions.omenta=omentum,exceptions.ommatidia=ommatidium,exceptions.ommiades=ommiad,exceptions.onagri=onager,exceptions.oogonia=oogonium,exceptions.oothecae=ootheca,exceptions.opercula=operculum,exceptions.optima=optimum,exceptions.ora=os,exceptions.organa=organum,exceptions.organums=organa,exceptions.orthoptera=orthopteron,exceptions.osar=os,exceptions.oscula=osculum,exceptions.ossa=os,exceptions.osteomata=osteoma,exceptions.ostia=ostium,exceptions.ottomans=ottoman,exceptions.ova=ovum,exceptions.ovoli=ovolo,exceptions.ovotestes=ovotestis,exceptions.oxen=ox,exceptions.oxymora=oxymoron,exceptions.paddlefishes=paddlefish,exceptions.paise=paisa,exceptions.paleae=palea,exceptions.palestrae=palestra,exceptions.palingeneses=palingenesis,exceptions.pallia=pallium,exceptions.palmettoes=palmetto,exceptions.palpi=palpus,exceptions.pancratia=pancratium,exceptions.panettoni=panettone,exceptions.paparazzi=paparazzo,exceptions.paperknives=paperknife,exceptions.papillae=papilla,exceptions.papillomata=papilloma,exceptions.pappi=pappus,exceptions.papulae=papula,exceptions.papyri=papyrus,exceptions.parabases=parabasis,exceptions.paraleipses=paraleipsis,exceptions.paralyses=paralysis,exceptions.paramecia=paramecium,exceptions.paramenta=parament,exceptions.paraphyses=paraphysis,exceptions.parapodia=parapodium,exceptions.parapraxes=parapraxis,exceptions.paraselenae=paraselene,exceptions.parashoth=parashah,exceptions.parasyntheta=parasyntheton,exceptions.parazoa=parazoan,exceptions.parentheses=parenthesis,exceptions.parerga=parergon,exceptions.parhelia=parhelion,exceptions.parietes=paries,exceptions.parrotfishes=parrotfish,exceptions.parulides=parulis,exceptions.pastorali=pastorale,exceptions.patagia=patagium,exceptions.patellae=patella,exceptions.patinae=patina,exceptions.patresfamilias=paterfamilias,exceptions.pease=pea,exceptions.peccadilloes=peccadillo,exceptions.pectines=pecten,exceptions.pedaloes=pedalo,exceptions.pedes=pes,exceptions.pekingese=pekinese,exceptions.pelves=pelvis,exceptions.pence=penny,exceptions.penes=penis,exceptions.penetralia=penetralium,exceptions.penicillia=penicillium,exceptions.penknives=penknife,exceptions.pennae=penna,exceptions.pennia=penni,exceptions.pentahedra=pentahedron,exceptions.pentimenti=pentimento,exceptions.penumbrae=penumbra,exceptions.pepla=peplum,exceptions.pericardia=pericardium,exceptions.perichondria=perichondrium,exceptions.pericrania=pericranium,exceptions.peridia=peridium,exceptions.perigonia=perigonium,exceptions.perihelia=perihelion,exceptions.perinea=perineum,exceptions.perinephria=perinephrium,exceptions.perionychia=perionychium,exceptions.periostea=periosteum,exceptions.periphrases=periphrasis,exceptions.peristalses=peristalsis,exceptions.perithecia=perithecium,exceptions.peritonea=peritoneum,exceptions.personae=persona,exceptions.petechiae=petechia,exceptions.pfennige=pfennig,exceptions.phalanges=phalanx,exceptions.phalli=phallus,exceptions.pharynges=pharynx,exceptions.phenomena=phenomenon,exceptions.philodendra=philodendron,exceptions.phlyctenae=phlyctena,exceptions.phyla=phylum,exceptions.phylae=phyle,exceptions.phyllotaxes=phyllotaxis,exceptions.phylloxerae=phylloxera,exceptions.phylogeneses=phylogenesis,exceptions.pigfishes=pigfish,exceptions.pilea=pileum,exceptions.pilei=pileus,exceptions.pineta=pinetum,exceptions.pinfishes=pinfish,exceptions.pinkoes=pinko,exceptions.pinnae=pinna,exceptions.pinnulae=pinnula,exceptions.pipefishes=pipefish,exceptions.pirogi=pirog,exceptions.piscinae=piscina,exceptions.pithecanthropi=pithecanthropus,exceptions.pithoi=pithos,exceptions.placeboes=placebo,exceptions.placentae=placenta,exceptions.planetaria=planetarium,exceptions.planulae=planula,exceptions.plasmodesmata=plasmodesma,exceptions.plasmodia=plasmodium,exceptions.plateaux=plateau,exceptions.plectra=plectrum,exceptions.plena=plenum,exceptions.pleura=pleuron,exceptions.pleurae=pleura,exceptions.plicae=plica,exceptions.ploughmen=ploughman,exceptions.pneumobacilli=pneumobacillus,exceptions.pneumococci=pneumococcus,exceptions.pocketknives=pocketknife,exceptions.podetia=podetium,exceptions.podia=podium,exceptions.poleis=polis,exceptions.pollices=pollex,exceptions.pollinia=pollinium,exceptions.polychasia=polychasium,exceptions.polyhedra=polyhedron,exceptions.polyparia=polyparium,exceptions.polypi=polypus,exceptions.polyzoa=polyzoan,exceptions.polyzoaria=polyzoarium,exceptions.pontes=pons,exceptions.pontifices=pontifex,exceptions.portamenti=portamento,exceptions.porticoes=portico,exceptions.portmanteaux=portmanteau,exceptions.postliminia=postliminium,exceptions.potatoes=potato,exceptions.praenomina=praenomen,exceptions.praxes=praxis,exceptions.predelle=predella,exceptions.premaxillae=premaxilla,exceptions.prenomina=prenomen,exceptions.prese=presa,exceptions.primi=primo,exceptions.primigravidae=primigravida,exceptions.primiparae=primipara,exceptions.primordia=primordium,exceptions.principia=principium,exceptions.proboscides=proboscis,exceptions.proglottides=proglottis,exceptions.prognoses=prognosis,exceptions.prolegomena=prolegomenon,exceptions.prolepses=prolepsis,exceptions.promycelia=promycelium,exceptions.pronephra=pronephros,exceptions.pronephroi=pronephros,exceptions.pronuclei=pronucleus,exceptions.propositi=propositus,exceptions.proptoses=proptosis,exceptions.propyla=propylon,exceptions.propylaea=propylaeum,exceptions.proscenia=proscenium,exceptions.prosencephala=prosencephalon,exceptions.prostheses=prosthesis,exceptions.prostomia=prostomium,exceptions.protases=protasis,exceptions.prothalamia=prothalamium,exceptions.prothalli=prothallus,exceptions.prothallia=prothallium,exceptions.prothoraces=prothorax,exceptions.protonemata=protonema,exceptions.protozoa=protozoan,exceptions.proventriculi=proventriculus,exceptions.provisoes=proviso,exceptions.prytanea=prytaneum,exceptions.psalteria=psalterium,exceptions.pseudopodia=pseudopodium,exceptions.psychoneuroses=psychoneurosis,exceptions.psychoses=psychosis,exceptions.pterygia=pterygium,exceptions.pterylae=pteryla,exceptions.ptoses=ptosis,exceptions.pubes=pubis,exceptions.pudenda=pudendum,exceptions.puli=pul,exceptions.pulvilli=pulvillus,exceptions.pulvini=pulvinus,exceptions.punchinelloes=punchinello,exceptions.pupae=pupa,exceptions.puparia=puparium,exceptions.putamina=putamen,exceptions.putti=putto,exceptions.pycnidia=pycnidium,exceptions.pygidia=pygidium,exceptions.pylori=pylorus,exceptions.pyxides=pyxis,exceptions.pyxidia=pyxidium,exceptions.qaddishim=qaddish,exceptions.quadrennia=quadrennium,exceptions.quadrigae=quadriga,exceptions.qualia=quale,exceptions.quanta=quantum,exceptions.quarterstaves=quarterstaff,exceptions.quezales=quezal,exceptions.quinquennia=quinquennium,exceptions.quizzes=quiz,exceptions.rabatos=rabato,exceptions.rabbitfishes=rabbitfish,exceptions.rachides=rhachis,exceptions.radices=radix,exceptions.radii=radius,exceptions.radulae=radula,exceptions.ramenta=ramentum,exceptions.rami=ramus,exceptions.ranulae=ranula,exceptions.ranunculi=ranunculus,exceptions.raphae=raphe,exceptions.raphides=raphide,exceptions.ratfishes=ratfish,exceptions.reales=real,exceptions.rearmice=rearmouse,exceptions.recta=rectum,exceptions.recti=rectus,exceptions.rectrices=rectrix,exceptions.redfishes=redfish,exceptions.rediae=redia,exceptions.referenda=referendum,exceptions.refugia=refugium,exceptions.reguli=regulus,exceptions.reis=real,exceptions.relata=relatum,exceptions.remiges=remex,exceptions.reremice=reremouse,exceptions.reseaux=reseau,exceptions.residua=residuum,exceptions.responsa=responsum,exceptions.retia=rete,exceptions.retiarii=retiarius,exceptions.reticula=reticulum,exceptions.retinacula=retinaculum,exceptions.retinae=retina,exceptions.rhabdomyomata=rhabdomyoma,exceptions.rhachides=rhachis,exceptions.rhachises=rachis,exceptions.rhinencephala=rhinencephalon,exceptions.rhizobia=rhizobium,exceptions.rhombi=rhombus,exceptions.rhonchi=rhonchus,exceptions.rhyta=rhyton,exceptions.ribbonfishes=ribbonfish,exceptions.ricercacari=ricercare,exceptions.ricercari=ricercare,exceptions.rickettsiae=rickettsia,exceptions.rilievi=rilievo,exceptions.rimae=rima,exceptions.rockfishes=rockfish,exceptions.roma=rom,exceptions.rondeaux=rondeau,exceptions.rosaria=rosarium,exceptions.rosefishes=rosefish,exceptions.rostella=rostellum,exceptions.rostra=rostrum,exceptions.rouleaux=rouleau,exceptions.rugae=ruga,exceptions.rumina=rumen,exceptions.sacra=sacrum,exceptions.sacraria=sacrarium,exceptions.saguaros=saguaro,exceptions.sailfishes=sailfish,exceptions.salespeople=salesperson,exceptions.salmonellae=salmonella,exceptions.salpae=salpa,exceptions.salpinges=salpinx,exceptions.saltarelli=saltarello,exceptions.salvoes=salvo,exceptions.sancta=sanctum,exceptions.sanitaria=sanitarium,exceptions.santimi=santims,exceptions.saphenae=saphena,exceptions.sarcophagi=sarcophagus,exceptions.sartorii=sartorius,exceptions.sassanidae=sassanid,exceptions.sawfishes=sawfish,exceptions.scaldfishes=scaldfish,exceptions.scaleni=scalenus,exceptions.scapulae=scapula,exceptions.scarabaei=scarabaeus,exceptions.scarves=scarf,exceptions.schatchonim=schatchen,exceptions.schemata=schema,exceptions.scherzandi=scherzando,exceptions.scherzi=scherzo,exceptions.schmoes=schmo,exceptions.scholia=scholium,exceptions.schuln=schul,exceptions.schutzstaffeln=schutzstaffel,exceptions.scirrhi=scirrhus,exceptions.scleromata=scleroma,exceptions.scleroses=sclerosis,exceptions.sclerotia=sclerotium,exceptions.scoleces=scolex,exceptions.scolices=scolex,exceptions.scopulae=scopula,exceptions.scoriae=scoria,exceptions.scotomata=scotoma,exceptions.scriptoria=scriptorium,exceptions.scrota=scrotum,exceptions.scudi=scudo,exceptions.scuta=scutum,exceptions.scutella=scutellum,exceptions.scyphi=scyphus,exceptions.scyphistomae=scyphistoma,exceptions.scyphozoa=scyphozoan,exceptions.secondi=secondo,exceptions.segni=segno,exceptions.seleucidae=seleucid,exceptions.selves=self,exceptions.senores=senor,exceptions.sensilla=sensillum,exceptions.senti=sent,exceptions.senussis=senussi,exceptions.separatrices=separatrix,exceptions.sephardim=sephardi,exceptions.septa=septum,exceptions.septaria=septarium,exceptions.septennia=septennium,exceptions.sequelae=sequela,exceptions.sequestra=sequestrum;exceptions.sera=serum,exceptions.seraphim=seraph,exceptions.sestertia=sestertium,exceptions.setae=seta,exceptions.sgraffiti=sgraffito,exceptions.shabbasim=shabbas,exceptions.shabbatim=shabbat,exceptions.shackoes=shacko,exceptions.shadchanim=shadchan,exceptions.shadchans=shadchan,exceptions.shakoes=shako,exceptions.shammosim=shammes,exceptions.sheatfishes=sheatfish,exceptions.sheaves=sheaf,exceptions.shellfishes=shellfish,exceptions.shelves=shelf,exceptions.shinleaves=shinleaf,exceptions.shittim=shittah,exceptions.shmoes=shmo,exceptions.shofroth=shophar,exceptions.shophroth=shophar,exceptions.shrewmice=shrewmouse,exceptions.shuln=shul,exceptions.siddurim=siddur,exceptions.sigloi=siglos,exceptions.signore=signora,exceptions.signori=signore,exceptions.signorine=signorina,exceptions.siliquae=siliqua,exceptions.silvae=silva,exceptions.silverfishes=silverfish,exceptions.simulacra=simulacrum,exceptions.sincipita=sinciput,exceptions.sinfonie=sinfonia,exceptions.sistra=sistrum,exceptions.situlae=situla,exceptions.smalti=smalto,exceptions.snaggleteeth=snaggletooth,exceptions.snailfishes=snailfish,exceptions.snipefishes=snipefish,exceptions.socmen=socman,exceptions.sola=solum,exceptions.solaria=solarium,exceptions.solatia=solatium,exceptions.soldi=soldo,exceptions.soles=sol,exceptions.solfeggi=solfeggio,exceptions.soli=solo,exceptions.solidi=solidus,exceptions.somata=soma,exceptions.soprani=soprano,exceptions.sordini=sordino,exceptions.sori=sorus,exceptions.soroses=sorosis,exceptions.sovkhozy=sovkhoz,exceptions.spadefishes=spadefish,exceptions.spadices=spadix,exceptions.spearfishes=spearfish,exceptions.spectra=spectrum,exceptions.specula=speculum,exceptions.spermatia=spermatium,exceptions.spermatogonia=spermatogonium,exceptions.spermatozoa=spermatozoon,exceptions.spermogonia=spermogonium,exceptions.sphinges=sphinx,exceptions.spicae=spica,exceptions.spicula=spiculum,exceptions.spirilla=spirillum,exceptions.splayfeet=splayfoot,exceptions.splenii=splenius,exceptions.sporangia=sporangium,exceptions.sporogonia=sporogonium,exceptions.sporozoa=sporozoan,exceptions.springhase=springhaas,exceptions.spumoni=spumone,exceptions.sputa=sputum,exceptions.squamae=squama,exceptions.squashes=squash,exceptions.squillae=squilla,exceptions.squirrelfishes=squirrelfish,exceptions.squizzes=squiz,exceptions.stadia=stadium,exceptions.stamina=stamen,exceptions.staminodia=staminodium,exceptions.stapedes=stapes,exceptions.staphylococci=staphylococcus,exceptions.staretsy=starets,exceptions.starfishes=starfish,exceptions.startsy=starets,exceptions.stelae=stele,exceptions.stemmata=stemma,exceptions.stenoses=stenosis,exceptions.stepchildren=stepchild,exceptions.sterna=sternum,exceptions.stigmata=stigma,exceptions.stimuli=stimulus,exceptions.stipites=stipes,exceptions.stirpes=stirps,exceptions.stoae=stoa,exceptions.stockfishes=stockfish,exceptions.stomata=stoma,exceptions.stomodaea=stomodaeum,exceptions.stomodea=stomodeum,exceptions.stonefishes=stonefish,exceptions.stotinki=stotinka,exceptions.stotkini=stotinka,exceptions.strappadoes=strappado,exceptions.strata=stratum,exceptions.strati=stratus,exceptions.stratocumuli=stratocumulus,exceptions.streptococci=streptococcus,exceptions.stretti=stretto,exceptions.striae=stria,exceptions.strobili=strobilus,exceptions.stromata=stroma,exceptions.strumae=struma,exceptions.stuccoes=stucco,exceptions.styli=stylus,exceptions.stylopes=stylops,exceptions.stylopodia=stylopodium,exceptions.subcortices=subcortex,exceptions.subdeliria=subdelirium,exceptions.subgenera=subgenus,exceptions.subindices=subindex,exceptions.submucosae=submucosa,exceptions.subphyla=subphylum,exceptions.substrasta=substratum,exceptions.succedanea=succedaneum,exceptions.succubi=succubus,exceptions.suckerfishes=suckerfish,exceptions.suckfishes=suckfish,exceptions.sudaria=sudarium,exceptions.sudatoria=sudatorium,exceptions.sudatoria=sudatorium,exceptions.sulci=sulcus,exceptions.summae=summa,exceptions.sunfishes=sunfish,exceptions.supercargoes=supercargo,exceptions.superheroes=superhero,exceptions.supernovae=supernova,exceptions.superstrata=superstratum,exceptions.surgeonfishes=surgeonfish,exceptions.swamies=swami,exceptions.sweetiewives=sweetiewife,exceptions.swellfishes=swellfish,exceptions.swordfishes=swordfish,exceptions.syconia=syconium,exceptions.syllabi=syllabus,exceptions.syllepses=syllepsis,exceptions.symphyses=symphysis,exceptions.sympodia=sympodium,exceptions.symposia=symposium,exceptions.synapses=synapsis,exceptions.synarthroses=synarthrosis,exceptions.synclinoria=synclinorium,exceptions.syncytia=syncytium,exceptions.syndesmoses=syndesmosis,exceptions.synopses=synopsis,exceptions.syntagmata=syntagma,exceptions.syntheses=synthesis,exceptions.syphilomata=syphiloma,exceptions.syringes=syrinx,exceptions.syssarcoses=syssarcosis,exceptions.tableaux=tableau,exceptions.taeniae=taenia,exceptions.tali=talus,exceptions.tallaisim=tallith,exceptions.tallithes=tallith,exceptions.tallitoth=tallith,exceptions.tapeta=tapetum,exceptions.tarantulae=tarantula,exceptions.tarsi=tarsus,exceptions.tarsometatarsi=tarsometatarsus,exceptions.taxa=taxon,exceptions.taxes=tax,exceptions.taxies=taxi,exceptions.tectrices=tectrix,exceptions.teeth=tooth,exceptions.tegmina=tegmen,exceptions.telae=tela,exceptions.telamones=telamon,exceptions.telangiectases=telangiectasia,exceptions.telia=telium,exceptions.tempi=tempo,exceptions.tenacula=tenaculum,exceptions.tenderfeet=tenderfoot,exceptions.teniae=tenia,exceptions.tenues=tenuis,exceptions.teraphim=teraph,exceptions.terata=teras,exceptions.teredines=teredo,exceptions.terga=tergum,exceptions.termini=terminus,exceptions.terraria=terrarium,exceptions.terzetti=terzetto,exceptions.tesserae=tessera,exceptions.testae=testa,exceptions.testes=testis,exceptions.testudines=testudo,exceptions.tetrahedra=tetrahedron,exceptions.tetraskelia=tetraskelion,exceptions.thalamencephala=thalamencephalon,exceptions.thalami=thalamus,exceptions.thalli=thallus,exceptions.thecae=theca,exceptions.therses=thyrse,exceptions.thesauri=thesaurus,exceptions.theses=thesis,exceptions.thickleaves=thickleaf,exceptions.thieves=thief,exceptions.tholoi=tholos,exceptions.thoraces=thorax,exceptions.thrombi=thrombus,exceptions.thymi=thymus,exceptions.thyrsi=thyrsus,exceptions.tibiae=tibia,exceptions.tilefishes=tilefish,exceptions.tintinnabula=tintinnabulum,exceptions.titmice=titmouse,exceptions.toadfishes=toadfish,exceptions.tobaccoes=tobacco,exceptions.tomatoes=tomato,exceptions.tomenta=tomentum,exceptions.tondi=tondo,exceptions.tonneaux=tonneau,exceptions.tophi=tophus,exceptions.topoi=topos,exceptions.tori=torus,exceptions.tornadoes=tornado,exceptions.torpedoes=torpedo,exceptions.torsi=torso,exceptions.touracos=touraco,exceptions.trabeculae=trabecula,exceptions.tracheae=trachea,exceptions.traditores=traditor,exceptions.tragi=tragus,exceptions.trapezia=trapezium,exceptions.trapezohedra=trapezohedron,exceptions.traumata=trauma,exceptions.treponemata=treponema,exceptions.trichinae=trichina,exceptions.triclinia=triclinium,exceptions.triennia=triennium,exceptions.triforia=triforium,exceptions.triggerfishes=triggerfish,exceptions.trihedra=trihedron,exceptions.triskelia=triskelion,exceptions.trisoctahedra=trisoctahedron,exceptions.triumviri=triumvir,exceptions.trivia=trivium,exceptions.trochleae=trochlea,exceptions.tropaeola=tropaeolum,exceptions.trousseaux=trousseau,exceptions.trunkfishes=trunkfish,exceptions.trymata=tryma,exceptions.tubae=tuba,exceptions.turves=turf,exceptions.tympana=tympanum,exceptions.tyros=tyro,exceptions.ubermenschen=ubermensch,exceptions.uglies=ugli,exceptions.uigurs=uighur,exceptions.ulnae=ulna,exceptions.ultimata=ultimatum,exceptions.umbilici=umbilicus,exceptions.umbones=umbo,exceptions.umbrae=umbra,exceptions.unci=uncus,exceptions.uncidia=uredium,exceptions.uredines=uredo,exceptions.uredinia=uredinium,exceptions.uredosori=uredosorus,exceptions.urethrae=urethra,exceptions.urinalyses=urinalysis,exceptions.uteri=uterus,exceptions.utriculi=utriculus,exceptions.uvulae=uvula,exceptions.vacua=vacuum,exceptions.vagi=vagus,exceptions.vaginae=vagina,exceptions.valleculae=vallecula,exceptions.vaporetti=vaporetto,exceptions.varices=varix,exceptions.vasa=vas,exceptions.vascula=vasculum,exceptions.vela=velum,exceptions.velamina=velamen,exceptions.velaria=velarium,exceptions.venae=vena,exceptions.ventriculi=ventriculus,exceptions.vermes=vermis,exceptions.verrucae=verruca,exceptions.vertebrae=vertebra,exceptions.vertices=vertex,exceptions.vertigines=vertigo,exceptions.vertigoes=vertigo,exceptions.vesicae=vesica,exceptions.vetoes=veto,exceptions.vexilla=vexillum,exceptions.viatica=viaticum,exceptions.viatores=viator,exceptions.vibracula=vibraculum,exceptions.vibrissae=vibrissa,exceptions.villi=villus,exceptions.vimina=vimen,exceptions.vincula=vinculum,exceptions.viragoes=virago,exceptions.vires=vis,exceptions.virtuosi=virtuoso,exceptions.vitae=vita,exceptions.vitelli=vitellus,exceptions.vittae=vitta,exceptions.vivaria=vivarium,exceptions.voces=vox,exceptions.volcanoes=volcano,exceptions.volkslieder=volkslied,exceptions.volte=volta,exceptions.volvae=volva,exceptions.vorticellae=vorticella,exceptions.vortices=vortex,exceptions.vulvae=vulva,exceptions.wahhabis=wahhabi,exceptions.wanderjahre=wanderjahr,exceptions.weakfishes=weakfish,exceptions.werewolves=werewolf,exceptions.wharves=wharf,exceptions.whitefishes=whitefish,exceptions.wives=wife,exceptions.wolffishes=wolffish,exceptions.wolves=wolf,exceptions.women=woman,exceptions.woodlice=woodlouse,exceptions.wreckfishes=wreckfish,exceptions.wunderkinder=wunderkind,exceptions.xiphisterna=xiphisternum,exceptions.yeshivahs=yeshiva,exceptions.yeshivoth=yeshiva,exceptions.yogin=yogi,exceptions.yourselves=yourself,exceptions.zamindaris=zamindari,exceptions.zecchini=zecchino,exceptions.zeroes=zero,exceptions.zoa=zoon,exceptions.zoaeae=zoaea,exceptions.zoeae=zoea,exceptions.zoeas=zoaea,exceptions.zoonoses=zoonosis,module.exports=exceptions;","const exceptions=Object.create(null),abet=\"abet\",abhor=\"abhor\",abide=\"abide\",aby=\"aby\",abut=\"abut\",accompany=\"accompany\",acetify=\"acetify\",acidify=\"acidify\",acquit=\"acquit\",address=\"address\",admit=\"admit\",aerify=\"aerify\",airdrop=\"airdrop\",alkalify=\"alkalify\",ally=\"ally\",allot=\"allot\",be=\"be\",ammonify=\"ammonify\",amnesty=\"amnesty\",amplify=\"amplify\",anglify=\"anglify\",annul=\"annul\",appal=\"appal\",apply=\"apply\",arc=\"arc\",argufy=\"argufy\",arise=\"arise\",eat=\"eat\",atrophy=\"atrophy\",aver=\"aver\",awake=\"awake\",baby=\"baby\",backbite=\"backbite\",backslide=\"backslide\",bid=\"bid\",bag=\"bag\",ballyrag=\"ballyrag\",bandy=\"bandy\",ban=\"ban\",bar=\"bar\",barrel=\"barrel\",basify=\"basify\",bat=\"bat\",bayonet=\"bayonet\",beat=\"beat\",beatify=\"beatify\",beautify=\"beautify\",become=\"become\",bed=\"bed\",bedevil=\"bedevil\",bedim=\"bedim\",befall=\"befall\",befit=\"befit\",befog=\"befog\",begin=\"begin\",beget=\"beget\",beg=\"beg\",begird=\"begird\",behold=\"behold\",bejewel=\"bejewel\",belly=\"belly\",belie=\"belie\",benefit=\"benefit\",bename=\"bename\",bend=\"bend\",berry=\"berry\",beset=\"beset\",beseech=\"beseech\",bespeak=\"bespeak\",bestir=\"bestir\",bestrew=\"bestrew\",bestride=\"bestride\",betake=\"betake\",bethink=\"bethink\",bet=\"bet\",bevel=\"bevel\",bias=\"bias\",bing=\"bing\",bin=\"bin\",bite=\"bite\",bit=\"bit\",bivouac=\"bivouac\",blab=\"blab\",blackberry=\"blackberry\",blackleg=\"blackleg\",blat=\"blat\",bleed=\"bleed\",bless=\"bless\",blow=\"blow\",blip=\"blip\",blob=\"blob\",bloody=\"bloody\",blot=\"blot\",blub=\"blub\",blur=\"blur\",bob=\"bob\",body=\"body\",bootleg=\"bootleg\",bop=\"bop\",bear=\"bear\",buy=\"buy\",bind=\"bind\",brag=\"brag\",breed=\"breed\",brevet=\"brevet\",brim=\"brim\",break1=\"break\",bring=\"bring\",browbeat=\"browbeat\",brutify=\"brutify\",bud=\"bud\",bug=\"bug\",build=\"build\",bulldog=\"bulldog\",bully=\"bully\",bullshit=\"bullshit\",bullwhip=\"bullwhip\",bullyrag=\"bullyrag\",bum=\"bum\",bury=\"bury\",burn=\"burn\",bur=\"bur\",bushel=\"bushel\",busy=\"busy\",bypass=\"bypass\",cabal=\"cabal\",caddy=\"caddy\",calcify=\"calcify\",come=\"come\",canal=\"canal\",cancel=\"cancel\",candy=\"candy\",can=\"can\",canopy=\"canopy\",cap=\"cap\",carburet=\"carburet\",carillon=\"carillon\",carny=\"carny\",carnify=\"carnify\",carol=\"carol\",carry=\"carry\",casefy=\"casefy\",catnap=\"catnap\",cat=\"cat\",catch1=\"catch\",cavil=\"cavil\",certify=\"certify\",channel=\"channel\",chap=\"chap\",char=\"char\",chat=\"chat\",chivy=\"chivy\",chide=\"chide\",chin=\"chin\",chip=\"chip\",chisel=\"chisel\",chitchat=\"chitchat\",chiv=\"chiv\",chondrify=\"chondrify\",chop=\"chop\",choose=\"choose\",chug=\"chug\",chum=\"chum\",citify=\"citify\",clothe=\"clothe\",clad=\"clad\",clam=\"clam\",clap=\"clap\",clarify=\"clarify\",classify=\"classify\",cleave=\"cleave\",clem=\"clem\",clepe=\"clepe\",clip=\"clip\",clog=\"clog\",clop=\"clop\",clot=\"clot\",club=\"club\",cling=\"cling\",cockneyfy=\"cockneyfy\",cod=\"cod\",codify=\"codify\",cog=\"cog\",coif=\"coif\",colly=\"colly\",combat=\"combat\",commit=\"commit\",compel=\"compel\",comply=\"comply\",complot=\"complot\",concur=\"concur\",confab=\"confab\",confer=\"confer\",con=\"con\",control=\"control\",copy=\"copy\",cop=\"cop\",coquet=\"coquet\",corral=\"corral\",counsel=\"counsel\",counterplot=\"counterplot\",countersink=\"countersink\",crab=\"crab\",cram=\"cram\",crap=\"crap\",creep=\"creep\",crib=\"crib\",cry=\"cry\",crop=\"crop\",crossbreed=\"crossbreed\",crosscut=\"crosscut\",crucify=\"crucify\",cub=\"cub\",cudgel=\"cudgel\",cupel=\"cupel\",cup=\"cup\",curet=\"curet\",curry=\"curry\",curse=\"curse\",curtsy=\"curtsy\",curvet=\"curvet\",cut=\"cut\",dab=\"dab\",dag=\"dag\",dally=\"dally\",dam=\"dam\",damnify=\"damnify\",dandify=\"dandify\",dap=\"dap\",deal=\"deal\",debar=\"debar\",debug=\"debug\",debus=\"debus\",decalcify=\"decalcify\",declassify=\"declassify\",decontrol=\"decontrol\",decry=\"decry\",defer=\"defer\",defy=\"defy\",degas=\"degas\",dehumidify=\"dehumidify\",deify=\"deify\",demit=\"demit\",demob=\"demob\",demulsify=\"demulsify\",demur=\"demur\",demystify=\"demystify\",denazify=\"denazify\",deny=\"deny\",denitrify=\"denitrify\",den=\"den\",descry=\"descry\",deter=\"deter\",detoxify=\"detoxify\",devil=\"devil\",devitrify=\"devitrify\",diagram=\"diagram\",dial=\"dial\",dib=\"dib\",do1=\"do\",dig=\"dig\",dignify=\"dignify\",dim=\"dim\",din=\"din\",dip=\"dip\",dirty=\"dirty\",disannul=\"disannul\",disbar=\"disbar\",disbud=\"disbud\",disembody=\"disembody\",disembowel=\"disembowel\",disenthral=\"disenthral\",disenthrall=\"disenthrall\",dishevel=\"dishevel\",disinter=\"disinter\",dispel=\"dispel\",disqualify=\"disqualify\",dissatisfy=\"dissatisfy\",distil=\"distil\",diversify=\"diversify\",divvy=\"divvy\",dizzy=\"dizzy\",dog=\"dog\",dogleg=\"dogleg\",dolly=\"dolly\",don=\"don\",dot=\"dot\",dow=\"dow\",dive=\"dive\",drab=\"drab\",drag=\"drag\",drink=\"drink\",draw=\"draw\",dream=\"dream\",dry=\"dry\",drip=\"drip\",drivel=\"drivel\",drive=\"drive\",drop=\"drop\",drub=\"drub\",drug=\"drug\",drum=\"drum\",dub=\"dub\",duel=\"duel\",dulcify=\"dulcify\",dummy=\"dummy\",dun=\"dun\",dwell=\"dwell\",die=\"die\",easy=\"easy\",eavesdrop=\"eavesdrop\",eddy=\"eddy\",edify=\"edify\",electrify=\"electrify\",embed=\"embed\",embody=\"embody\",embus=\"embus\",emit=\"emit\",empanel=\"empanel\",empty=\"empty\",emulsify=\"emulsify\",enamel=\"enamel\",englut=\"englut\",enrol=\"enrol\",enthral=\"enthral\",entrammel=\"entrammel\",entrap=\"entrap\",envy=\"envy\",enwind=\"enwind\",enwrap=\"enwrap\",equal=\"equal\",equip=\"equip\",espy=\"espy\",esterify=\"esterify\",estop=\"estop\",etherify=\"etherify\",excel=\"excel\",exemplify=\"exemplify\",expel=\"expel\",extol=\"extol\",facet=\"facet\",fag=\"fag\",fall=\"fall\",falsify=\"falsify\",fancy=\"fancy\",fan=\"fan\",fantasy=\"fantasy\",fat=\"fat\",featherbed=\"featherbed\",feed=\"feed\",feel=\"feel\",ferry=\"ferry\",fib=\"fib\",fig=\"fig\",fin=\"fin\",fit=\"fit\",flag=\"flag\",flam=\"flam\",flannel=\"flannel\",flap=\"flap\",flat=\"flat\",flee=\"flee\",fly=\"fly\",flimflam=\"flimflam\",flip=\"flip\",flit=\"flit\",flog=\"flog\",floodlight=\"floodlight\",flop=\"flop\",flub=\"flub\",fling=\"fling\",flurry=\"flurry\",flyblow=\"flyblow\",fob=\"fob\",fog=\"fog\",footslog=\"footslog\",forbid=\"forbid\",forbear=\"forbear\",fordo=\"fordo\",foredo=\"foredo\",forego=\"forego\",foreknow=\"foreknow\",forerun=\"forerun\",foresee=\"foresee\",foreshow=\"foreshow\",forespeak=\"forespeak\",foretell=\"foretell\",forgive=\"forgive\",forget=\"forget\",forgo=\"forgo\",format=\"format\",forsake=\"forsake\",forspeak=\"forspeak\",forswear=\"forswear\",fortify=\"fortify\",fight=\"fight\",find=\"find\",foxtrot=\"foxtrot\",frap=\"frap\",frenchify=\"frenchify\",frenzy=\"frenzy\",fret=\"fret\",fry=\"fry\",frig=\"frig\",frit=\"frit\",frivol=\"frivol\",frog=\"frog\",frolic=\"frolic\",freeze=\"freeze\",fructify=\"fructify\",fuel=\"fuel\",fulfil=\"fulfil\",fun=\"fun\",funnel=\"funnel\",fur=\"fur\",gad=\"gad\",gag=\"gag\",gainsay=\"gainsay\",gambol=\"gambol\",gam=\"gam\",gin=\"gin\",gan=\"gan\",gap=\"gap\",gasify=\"gasify\",gas=\"gas\",give=\"give\",gel=\"gel\",geld=\"geld\",gem=\"gem\",get=\"get\",ghostwrite=\"ghostwrite\",gib=\"gib\",giddy=\"giddy\",giftwrap=\"giftwrap\",gig=\"gig\",gild=\"gild\",gip=\"gip\",gird=\"gird\",glom=\"glom\",glory=\"glory\",glorify=\"glorify\",glut=\"glut\",gnaw=\"gnaw\",golly=\"golly\",go=\"go\",grab=\"grab\",gratify=\"gratify\",gravel=\"gravel\",grave=\"grave\",grow=\"grow\",grin=\"grin\",grip=\"grip\",grit=\"grit\",grind=\"grind\",grovel=\"grovel\",grub=\"grub\",guaranty=\"guaranty\",gully=\"gully\",gum=\"gum\",gun=\"gun\",gyp=\"gyp\",hacksaw=\"hacksaw\",have=\"have\",ham=\"ham\",hamstring=\"hamstring\",handfeed=\"handfeed\",handicap=\"handicap\",handsel=\"handsel\",harry=\"harry\",hatchel=\"hatchel\",hat=\"hat\",hear=\"hear\",hedgehop=\"hedgehop\",hold=\"hold\",hem=\"hem\",hew=\"hew\",hiccup=\"hiccup\",hide=\"hide\",hinny=\"hinny\",hit=\"hit\",hob=\"hob\",hobnob=\"hobnob\",hocus=\"hocus\",hog=\"hog\",hogtie=\"hogtie\",honey=\"honey\",hop=\"hop\",horrify=\"horrify\",horsewhip=\"horsewhip\",housel=\"housel\",heave=\"heave\",hovel=\"hovel\",hug=\"hug\",humbug=\"humbug\",humidify=\"humidify\",hum=\"hum\",hang=\"hang\",hurry=\"hurry\",hypertrophy=\"hypertrophy\",identify=\"identify\",imbed=\"imbed\",impanel=\"impanel\",impel=\"impel\",imply=\"imply\",inbreed=\"inbreed\",incur=\"incur\",indemnify=\"indemnify\",indwell=\"indwell\",infer=\"infer\",initial=\"initial\",inlay=\"inlay\",inset=\"inset\",inspan=\"inspan\",install=\"install\",intensify=\"intensify\",interbreed=\"interbreed\",intercrop=\"intercrop\",intercut=\"intercut\",interlay=\"interlay\",interlap=\"interlap\",intermarry=\"intermarry\",intermit=\"intermit\",interplead=\"interplead\",inter=\"inter\",interstratify=\"interstratify\",interweave=\"interweave\",intromit=\"intromit\",inweave=\"inweave\",inwrap=\"inwrap\",jab=\"jab\",jag=\"jag\",jam=\"jam\",japan=\"japan\",jar=\"jar\",jelly=\"jelly\",jellify=\"jellify\",jemmy=\"jemmy\",jet=\"jet\",jewel=\"jewel\",jib=\"jib\",jig=\"jig\",jimmy=\"jimmy\",jitterbug=\"jitterbug\",job=\"job\",jog=\"jog\",jolly=\"jolly\",jollify=\"jollify\",jot=\"jot\",joypop=\"joypop\",jug=\"jug\",justify=\"justify\",jut=\"jut\",ken=\"ken\",kennel=\"kennel\",keep=\"keep\",kernel=\"kernel\",kid=\"kid\",kidnap=\"kidnap\",kip=\"kip\",knap=\"knap\",kneecap=\"kneecap\",kneel=\"kneel\",know=\"know\",knit=\"knit\",knob=\"knob\",knot=\"knot\",label=\"label\",lade=\"lade\",ladify=\"ladify\",lag=\"lag\",lay=\"lay\",lie=\"lie\",lallygag=\"lallygag\",lam=\"lam\",lapidify=\"lapidify\",lap=\"lap\",laurel=\"laurel\",lean=\"lean\",leapfrog=\"leapfrog\",leap=\"leap\",learn=\"learn\",lead=\"lead\",leave=\"leave\",lend=\"lend\",let1=\"let\",level=\"level\",levy=\"levy\",libel=\"libel\",lignify=\"lignify\",lip=\"lip\",liquefy=\"liquefy\",liquify=\"liquify\",light=\"light\",lob=\"lob\",lobby=\"lobby\",log=\"log\",lop=\"lop\",lose=\"lose\",lot=\"lot\",lug=\"lug\",lullaby=\"lullaby\",mad=\"mad\",make=\"make\",magnify=\"magnify\",man=\"man\",manumit=\"manumit\",map=\"map\",marcel=\"marcel\",mar=\"mar\",marry=\"marry\",marshal=\"marshal\",marvel=\"marvel\",mat=\"mat\",mean=\"mean\",medal=\"medal\",meet=\"meet\",metal=\"metal\",metrify=\"metrify\",may=\"may\",mimic=\"mimic\",minify=\"minify\",misapply=\"misapply\",misbecome=\"misbecome\",miscarry=\"miscarry\",misdeal=\"misdeal\",misfit=\"misfit\",misgive=\"misgive\",mishit=\"mishit\",mislay=\"mislay\",mislead=\"mislead\",misplead=\"misplead\",misspell=\"misspell\",misspend=\"misspend\",mistake=\"mistake\",misunderstand=\"misunderstand\",mob=\"mob\",model=\"model\",modify=\"modify\",mollify=\"mollify\",melt=\"melt\",mop=\"mop\",mortify=\"mortify\",mow=\"mow\",mud=\"mud\",muddy=\"muddy\",mug=\"mug\",multiply=\"multiply\",mum=\"mum\",mummify=\"mummify\",mutiny=\"mutiny\",mystify=\"mystify\",nab=\"nab\",nag=\"nag\",nap=\"nap\",net=\"net\",nib=\"nib\",nickel=\"nickel\",nidify=\"nidify\",nigrify=\"nigrify\",nip=\"nip\",nitrify=\"nitrify\",nod=\"nod\",nonplus=\"nonplus\",notify=\"notify\",nullify=\"nullify\",nut=\"nut\",objectify=\"objectify\",occupy=\"occupy\",occur=\"occur\",offset=\"offset\",omit=\"omit\",ossify=\"ossify\",outbid=\"outbid\",outbreed=\"outbreed\",outcry=\"outcry\",outcrop=\"outcrop\",outdo=\"outdo\",outdraw=\"outdraw\",outfit=\"outfit\",outfight=\"outfight\",outgas=\"outgas\",outgeneral=\"outgeneral\",outgo=\"outgo\",outgrow=\"outgrow\",outlay=\"outlay\",outman=\"outman\",output=\"output\",outrun=\"outrun\",outride=\"outride\",outshine=\"outshine\",outshoot=\"outshoot\",outsell=\"outsell\",outspan=\"outspan\",outstand=\"outstand\",outstrip=\"outstrip\",outthink=\"outthink\",outwit=\"outwit\",outwear=\"outwear\",overbid=\"overbid\",overblow=\"overblow\",overbear=\"overbear\",overbuild=\"overbuild\",overcome=\"overcome\",overcrop=\"overcrop\",overdo=\"overdo\",overdraw=\"overdraw\",overdrive=\"overdrive\",overfly=\"overfly\",overflow=\"overflow\",overgrow=\"overgrow\",overhear=\"overhear\",overhang=\"overhang\",overlay=\"overlay\",overlie=\"overlie\",overlap=\"overlap\",overman=\"overman\",overpay=\"overpay\",overpass=\"overpass\",overrun=\"overrun\",override=\"override\",oversee=\"oversee\",overset=\"overset\",oversew=\"oversew\",overshoot=\"overshoot\",oversimplify=\"oversimplify\",oversleep=\"oversleep\",oversell=\"oversell\",overspend=\"overspend\",overspill=\"overspill\",overstep=\"overstep\",overtake=\"overtake\",overthrow=\"overthrow\",overtop=\"overtop\",overwind=\"overwind\",overwrite=\"overwrite\",pacify=\"pacify\",pad=\"pad\",pay=\"pay\",pal=\"pal\",palsy=\"palsy\",pandy=\"pandy\",panel=\"panel\",panic=\"panic\",pan=\"pan\",parallel=\"parallel\",parcel=\"parcel\",parody=\"parody\",parry=\"parry\",partake=\"partake\",pasquinade=\"pasquinade\",patrol=\"patrol\",pat=\"pat\",pedal=\"pedal\",peg=\"peg\",pencil=\"pencil\",pen=\"pen\",pep=\"pep\",permit=\"permit\",personify=\"personify\",petrify=\"petrify\",pet=\"pet\",pettifog=\"pettifog\",phantasy=\"phantasy\",photocopy=\"photocopy\",photomap=\"photomap\",photoset=\"photoset\",physic=\"physic\",picnic=\"picnic\",pig=\"pig\",pillory=\"pillory\",pin=\"pin\",pip=\"pip\",pistol=\"pistol\",pitapat=\"pitapat\",pity=\"pity\",pit=\"pit\",plan=\"plan\",plat=\"plat\",plead=\"plead\",ply=\"ply\",plod=\"plod\",plop=\"plop\",plot=\"plot\",plug=\"plug\",pod=\"pod\",pommel=\"pommel\",popes=\"popes\",pop=\"pop\",pot=\"pot\",preachify=\"preachify\",precancel=\"precancel\",prefer=\"prefer\",preoccupy=\"preoccupy\",prepay=\"prepay\",presignify=\"presignify\",pretermit=\"pretermit\",pretty=\"pretty\",prettify=\"prettify\",pry=\"pry\",prig=\"prig\",prim=\"prim\",prod=\"prod\",program=\"program\",prologue=\"prologue\",propel=\"propel\",prophesy=\"prophesy\",prop=\"prop\",prove=\"prove\",pub=\"pub\",pug=\"pug\",pummel=\"pummel\",pun=\"pun\",pup=\"pup\",purify=\"purify\",putrefy=\"putrefy\",putty=\"putty\",put=\"put\",qualify=\"qualify\",quantify=\"quantify\",quarrel=\"quarrel\",quarry=\"quarry\",quartersaw=\"quartersaw\",query=\"query\",quickstep=\"quickstep\",quip=\"quip\",quit=\"quit\",quiz=\"quiz\",rag=\"rag\",rally=\"rally\",ramify=\"ramify\",ram=\"ram\",run=\"run\",ring=\"ring\",rap=\"rap\",rappel=\"rappel\",rarefy=\"rarefy\",ratify=\"ratify\",rat=\"rat\",ravel=\"ravel\",rebel=\"rebel\",rebuild=\"rebuild\",rebut=\"rebut\",recap=\"recap\",reclassify=\"reclassify\",recommit=\"recommit\",recopy=\"recopy\",rectify=\"rectify\",recur=\"recur\",red=\"red\",redo=\"redo\",refer=\"refer\",refit=\"refit\",reave=\"reave\",refuel=\"refuel\",regret=\"regret\",rehear=\"rehear\",reify=\"reify\",rely=\"rely\",remake=\"remake\",remarry=\"remarry\",remit=\"remit\",rend=\"rend\",repay=\"repay\",repel=\"repel\",replevy=\"replevy\",reply=\"reply\",repot=\"repot\",rerun=\"rerun\",resit=\"resit\",reset=\"reset\",resew=\"resew\",retake=\"retake\",rethink=\"rethink\",retell=\"retell\",retransmit=\"retransmit\",retry=\"retry\",retrofit=\"retrofit\",ret=\"ret\",reunify=\"reunify\",revel=\"revel\",revet=\"revet\",revivify=\"revivify\",rev=\"rev\",rewind=\"rewind\",rewrite=\"rewrite\",rib=\"rib\",ricochet=\"ricochet\",rid=\"rid\",ride=\"ride\",rig=\"rig\",rigidify=\"rigidify\",rim=\"rim\",rip=\"rip\",rise=\"rise\",rival=\"rival\",rive=\"rive\",rob=\"rob\",rot=\"rot\",reeve=\"reeve\",rowel=\"rowel\",rub=\"rub\",rut=\"rut\",saccharify=\"saccharify\",sag=\"sag\",say=\"say\",salary=\"salary\",salify=\"salify\",sally=\"sally\",sanctify=\"sanctify\",sandbag=\"sandbag\",sing=\"sing\",sink=\"sink\",saponify=\"saponify\",sap=\"sap\",sit=\"sit\",satisfy=\"satisfy\",savvy=\"savvy\",see=\"see\",saw=\"saw\",scag=\"scag\",scan=\"scan\",scarify=\"scarify\",scar=\"scar\",scat=\"scat\",scorify=\"scorify\",scrag=\"scrag\",scram=\"scram\",scrap=\"scrap\",scry=\"scry\",scrub=\"scrub\",scrum=\"scrum\",scud=\"scud\",scum=\"scum\",scurry=\"scurry\",seed=\"seed\",send=\"send\",set=\"set\",sew=\"sew\",shag=\"shag\",shake=\"shake\",sham=\"sham\",sharecrop=\"sharecrop\",shit=\"shit\",shave=\"shave\",shed=\"shed\",shellac=\"shellac\",shend=\"shend\",shew=\"shew\",shy=\"shy\",shikar=\"shikar\",shillyshally=\"shillyshally\",shim=\"shim\",shimmy=\"shimmy\",shin=\"shin\",ship=\"ship\",shoe=\"shoe\",shine=\"shine\",shop=\"shop\",shoot=\"shoot\",shotgun=\"shotgun\",shot=\"shot\",shovel=\"shovel\",show=\"show\",shrink=\"shrink\",shred=\"shred\",shrivel=\"shrivel\",shrive=\"shrive\",shrug=\"shrug\",shun=\"shun\",shut=\"shut\",sic=\"sic\",sideslip=\"sideslip\",sidestep=\"sidestep\",sightsee=\"sightsee\",signal=\"signal\",signify=\"signify\",silicify=\"silicify\",simplify=\"simplify\",sin=\"sin\",sip=\"sip\",shear=\"shear\",skelly=\"skelly\",sken=\"sken\",sket=\"sket\",skid=\"skid\",skim=\"skim\",skin=\"skin\",skip=\"skip\",skivvy=\"skivvy\",skydive=\"skydive\",slab=\"slab\",slag=\"slag\",slay=\"slay\",slam=\"slam\",slap=\"slap\",slat=\"slat\",sled=\"sled\",sleep=\"sleep\",slide=\"slide\",slip=\"slip\",slit=\"slit\",slog=\"slog\",slop=\"slop\",slot=\"slot\",slug=\"slug\",slum=\"slum\",sling=\"sling\",slink=\"slink\",slur=\"slur\",smell=\"smell\",smite=\"smite\",smut=\"smut\",snag=\"snag\",snap=\"snap\",sned=\"sned\",snip=\"snip\",snivel=\"snivel\",snog=\"snog\",snub=\"snub\",sneak=\"sneak\",snug=\"snug\",sob=\"sob\",sod=\"sod\",sell=\"sell\",solemnify=\"solemnify\",solidify=\"solidify\",soothsay=\"soothsay\",sop=\"sop\",seek=\"seek\",sow=\"sow\",spag=\"spag\",spancel=\"spancel\",span=\"span\",spar=\"spar\",spit=\"spit\",spat=\"spat\",specify=\"specify\",speed=\"speed\",speechify=\"speechify\",spellbind=\"spellbind\",spell=\"spell\",spend=\"spend\",spy=\"spy\",spill=\"spill\",spin=\"spin\",spiral=\"spiral\",split=\"split\",spoil=\"spoil\",speak=\"speak\",spotlight=\"spotlight\",spot=\"spot\",spring=\"spring\",sprig=\"sprig\",spud=\"spud\",spur=\"spur\",squat=\"squat\",squib=\"squib\",squid=\"squid\",squeegee=\"squeegee\",stab=\"stab\",stink=\"stink\",star=\"star\",steady=\"steady\",stellify=\"stellify\",stem=\"stem\",stencil=\"stencil\",step=\"step\",stet=\"stet\",sty=\"sty\",stiletto=\"stiletto\",stir=\"stir\",steal=\"steal\",stand=\"stand\",stop=\"stop\",story=\"story\",stot=\"stot\",stave=\"stave\",strap=\"strap\",stratify=\"stratify\",strew=\"strew\",stride=\"stride\",strip=\"strip\",strive=\"strive\",strop=\"strop\",strow=\"strow\",strike=\"strike\",strum=\"strum\",string=\"string\",strut=\"strut\",stub=\"stub\",stick=\"stick\",stud=\"stud\",study=\"study\",stultify=\"stultify\",stum=\"stum\",sting=\"sting\",stun=\"stun\",stupefy=\"stupefy\",stymie=\"stymie\",sub=\"sub\",subjectify=\"subjectify\",sublet=\"sublet\",submit=\"submit\",subtotal=\"subtotal\",sully=\"sully\",sulphuret=\"sulphuret\",sum=\"sum\",sun=\"sun\",sup=\"sup\",supply=\"supply\",swab=\"swab\",swag=\"swag\",swim=\"swim\",swap=\"swap\",swat=\"swat\",sweep=\"sweep\",swig=\"swig\",swivel=\"swivel\",swell=\"swell\",swear=\"swear\",swot=\"swot\",swing=\"swing\",syllabify=\"syllabify\",symbol=\"symbol\",tab=\"tab\",tag=\"tag\",take=\"take\",talc=\"talc\",tally=\"tally\",tammy=\"tammy\",tan=\"tan\",tap=\"tap\",tar=\"tar\",tarry=\"tarry\",tassel=\"tassel\",tat=\"tat\",teach=\"teach\",taxis=\"taxis\",taxi=\"taxi\",teasel=\"teasel\",ted=\"ted\",tepefy=\"tepefy\",terrify=\"terrify\",testes=\"testes\",testify=\"testify\",thin=\"thin\",think=\"think\",throw1=\"throw\",thrive=\"thrive\",throb=\"throb\",thrum=\"thrum\",thud=\"thud\",tidy=\"tidy\",tin=\"tin\",tinsel=\"tinsel\",tip=\"tip\",tittup=\"tittup\",toady=\"toady\",tog=\"tog\",tell=\"tell\",top=\"top\",tear=\"tear\",torrefy=\"torrefy\",total=\"total\",tot=\"tot\",towel=\"towel\",traffic=\"traffic\",trammel=\"trammel\",tram=\"tram\",transfer=\"transfer\",transfix=\"transfix\",transship=\"transship\",tranship=\"tranship\",transmit=\"transmit\",transmogrify=\"transmogrify\",trapan=\"trapan\",trap=\"trap\",travel=\"travel\",travesty=\"travesty\",trek=\"trek\",trepan=\"trepan\",try1=\"try\",trig=\"trig\",trim=\"trim\",trip=\"trip\",tread=\"tread\",trog=\"trog\",trot=\"trot\",trowel=\"trowel\",tug=\"tug\",tumefy=\"tumefy\",tun=\"tun\",tunnel=\"tunnel\",tup=\"tup\",twig=\"twig\",twin=\"twin\",twit=\"twit\",tie=\"tie\",typeset=\"typeset\",typewrite=\"typewrite\",typify=\"typify\",uglify=\"uglify\",unbar=\"unbar\",unbend=\"unbend\",unbind=\"unbind\",uncap=\"uncap\",unclothe=\"unclothe\",unclog=\"unclog\",underbid=\"underbid\",underbuy=\"underbuy\",undercut=\"undercut\",underfeed=\"underfeed\",undergird=\"undergird\",undergo=\"undergo\",underlay=\"underlay\",underlie=\"underlie\",underlet=\"underlet\",underpay=\"underpay\",underpin=\"underpin\",underprop=\"underprop\",underset=\"underset\",undershoot=\"undershoot\",undersell=\"undersell\",understand=\"understand\",understudy=\"understudy\",undertake=\"undertake\",underwrite=\"underwrite\",undo=\"undo\",unfit=\"unfit\",unfreeze=\"unfreeze\",unify=\"unify\",unkennel=\"unkennel\",unknit=\"unknit\",unlay=\"unlay\",unlearn=\"unlearn\",unmake=\"unmake\",unman=\"unman\",unpeg=\"unpeg\",unpin=\"unpin\",unplug=\"unplug\",unravel=\"unravel\",unrig=\"unrig\",unrip=\"unrip\",unreeve=\"unreeve\",unsay=\"unsay\",unship=\"unship\",unsling=\"unsling\",unsnap=\"unsnap\",unspeak=\"unspeak\",unsteady=\"unsteady\",unstep=\"unstep\",unstop=\"unstop\",unstring=\"unstring\",unstick=\"unstick\",unswear=\"unswear\",unteach=\"unteach\",unthink=\"unthink\",untidy=\"untidy\",untread=\"untread\",untie=\"untie\",unwind=\"unwind\",unwrap=\"unwrap\",unzip=\"unzip\",upbuild=\"upbuild\",uphold=\"uphold\",upheave=\"upheave\",up=\"up\",uppercut=\"uppercut\",uprise=\"uprise\",upset=\"upset\",upspring=\"upspring\",upsweep=\"upsweep\",upswell=\"upswell\",upswing=\"upswing\",vag=\"vag\",vary=\"vary\",vat=\"vat\",verbify=\"verbify\",verify=\"verify\",versify=\"versify\",vet=\"vet\",victual=\"victual\",vilify=\"vilify\",vitrify=\"vitrify\",vitriol=\"vitriol\",vivify=\"vivify\",vie=\"vie\",wad=\"wad\",waddy=\"waddy\",wadset=\"wadset\",wag=\"wag\",wan=\"wan\",war=\"war\",waylay=\"waylay\",weary=\"weary\",weatherstrip=\"weatherstrip\",web=\"web\",wed=\"wed\",weed=\"weed\",weep=\"weep\",wet=\"wet\",wham=\"wham\",whap=\"whap\",whet=\"whet\",whinny=\"whinny\",whip=\"whip\",whipsaw=\"whipsaw\",whir=\"whir\",whiz=\"whiz\",whop=\"whop\",wig=\"wig\",wigwag=\"wigwag\",wildcat=\"wildcat\",will=\"will\",win=\"win\",winterfeed=\"winterfeed\",wiredraw=\"wiredraw\",withdraw=\"withdraw\",withhold=\"withhold\",withstand=\"withstand\",wake=\"wake\",won=\"won\",wear=\"wear\",worry=\"worry\",worship=\"worship\",wind=\"wind\",weave=\"weave\",wrap=\"wrap\",wry=\"wry\",write=\"write\",work=\"work\",wring=\"wring\",yak=\"yak\",yap=\"yap\",yen=\"yen\",yodel=\"yodel\",zap=\"zap\",zigzag=\"zigzag\",zip=\"zip\";exceptions.abetted=abet,exceptions.abetting=abet,exceptions.abhorred=abhor,exceptions.abhorring=abhor,exceptions.abode=abide,exceptions.abought=aby,exceptions.abutted=abut,exceptions.abutting=abut,exceptions.abye=aby,exceptions.accompanied=accompany,exceptions.acetified=acetify,exceptions.acidified=acidify,exceptions.acquitted=acquit,exceptions.acquitting=acquit,exceptions.addrest=address,exceptions.admitted=admit,exceptions.admitting=admit,exceptions.aerified=aerify,exceptions.airdropped=airdrop,exceptions.airdropping=airdrop,exceptions.alkalified=alkalify,exceptions.allied=ally,exceptions.allotted=allot,exceptions.allotting=allot,exceptions.am=be,exceptions.ammonified=ammonify,exceptions.amnestied=amnesty,exceptions.amplified=amplify,exceptions.anglified=anglify,exceptions.annulled=annul,exceptions.annulling=annul,exceptions.appalled=appal,exceptions.appalling=appal,exceptions.applied=apply,exceptions.arcked=arc,exceptions.arcking=arc,exceptions.are=be,exceptions.argufied=argufy,exceptions.arisen=arise,exceptions.arose=arise,exceptions.ate=eat,exceptions.atrophied=atrophy,exceptions.averred=aver,exceptions.averring=aver,exceptions.awoke=awake,exceptions.awoken=awake,exceptions.babied=baby,exceptions.backbit=backbite,exceptions.backbitten=backbite,exceptions.backslid=backslide,exceptions.backslidden=backslide,exceptions.bade=bid,exceptions.bagged=bag,exceptions.bagging=bag,exceptions.ballyragged=ballyrag,exceptions.ballyragging=ballyrag,exceptions.bandied=bandy,exceptions.banned=ban,exceptions.banning=ban,exceptions.barred=bar,exceptions.barrelled=barrel,exceptions.barrelling=barrel,exceptions.barring=bar,exceptions.basified=basify,exceptions.batted=bat,exceptions.batting=bat,exceptions.bayonetted=bayonet,exceptions.bayonetting=bayonet,exceptions.beaten=beat,exceptions.beatified=beatify,exceptions.beautified=beautify,exceptions.became=become,exceptions.bed=bed,exceptions.bedded=bed,exceptions.bedding=bed,exceptions.bedevilled=bedevil,exceptions.bedevilling=bedevil,exceptions.bedimmed=bedim,exceptions.bedimming=bedim,exceptions.been=be,exceptions.befallen=befall,exceptions.befell=befall,exceptions.befitted=befit,exceptions.befitting=befit,exceptions.befogged=befog,exceptions.befogging=befog,exceptions.began=begin,exceptions.begat=beget,exceptions.begetting=beget,exceptions.begged=beg,exceptions.begging=beg,exceptions.beginning=begin,exceptions.begirt=begird,exceptions.begot=beget,exceptions.begotten=beget,exceptions.begun=begin,exceptions.beheld=behold,exceptions.beholden=behold,exceptions.bejewelled=bejewel,exceptions.bejewelling=bejewel,exceptions.bellied=belly,exceptions.belying=belie,exceptions.benefitted=benefit,exceptions.benefitting=benefit,exceptions.benempt=bename,exceptions.bent=bend,exceptions.berried=berry,exceptions.besetting=beset,exceptions.besought=beseech,exceptions.bespoke=bespeak,exceptions.bespoken=bespeak,exceptions.bestirred=bestir,exceptions.bestirring=bestir,exceptions.bestrewn=bestrew,exceptions.bestrid=bestride,exceptions.bestridden=bestride,exceptions.bestrode=bestride,exceptions.betaken=betake,exceptions.bethought=bethink,exceptions.betook=betake,exceptions.betted=bet,exceptions.betting=bet,exceptions.bevelled=bevel,exceptions.bevelling=bevel,exceptions.biassed=bias,exceptions.biassing=bias,exceptions.bidden=bid,exceptions.bidding=bid,exceptions.bing=bing,exceptions.binned=bin,exceptions.binning=bin,exceptions.bit=bite,exceptions.bitted=bit,exceptions.bitten=bite,exceptions.bitting=bit,exceptions.bivouacked=bivouac,exceptions.bivouacking=bivouac,exceptions.blabbed=blab,exceptions.blabbing=blab,exceptions.blackberried=blackberry,exceptions.blacklegged=blackleg,exceptions.blacklegging=blackleg,exceptions.blatted=blat,exceptions.blatting=blat,exceptions.bled=bleed,exceptions.blest=bless,exceptions.blew=blow,exceptions.blipped=blip,exceptions.blipping=blip,exceptions.blobbed=blob,exceptions.blobbing=blob,exceptions.bloodied=bloody,exceptions.blotted=blot,exceptions.blotting=blot,exceptions.blown=blow,exceptions.blubbed=blub,exceptions.blubbing=blub,exceptions.blurred=blur,exceptions.blurring=blur,exceptions.bobbed=bob,exceptions.bobbing=bob,exceptions.bodied=body,exceptions.bootlegged=bootleg,exceptions.bootlegging=bootleg,exceptions.bopped=bop,exceptions.bopping=bop,exceptions.bore=bear,exceptions.born=bear,exceptions.borne=bear,exceptions.bought=buy,exceptions.bound=bind,exceptions.bragged=brag,exceptions.bragging=brag,exceptions.bred=breed,exceptions.brevetted=brevet,exceptions.brevetting=brevet,exceptions.brimmed=brim,exceptions.brimming=brim,exceptions.broke=break1,exceptions.broken=break1,exceptions.brought=bring,exceptions.browbeaten=browbeat,exceptions.brutified=brutify,exceptions.budded=bud,exceptions.budding=bud,exceptions.bugged=bug,exceptions.bugging=bug,exceptions.built=build,exceptions.bulldogging=bulldog,exceptions.bullied=bully,exceptions.bullshitted=bullshit,exceptions.bullshitting=bullshit,exceptions.bullwhipped=bullwhip,exceptions.bullwhipping=bullwhip,exceptions.bullyragged=bullyrag,exceptions.bullyragging=bullyrag,exceptions.bummed=bum,exceptions.bumming=bum,exceptions.buried=bury,exceptions.burnt=burn,exceptions.burred=bur,exceptions.burring=bur,exceptions.bushelled=bushel,exceptions.bushelling=bushel,exceptions.busied=busy,exceptions.bypast=bypass,exceptions.caballed=cabal,exceptions.caballing=cabal,exceptions.caddied=caddy,exceptions.caddies=caddy,exceptions.caddying=caddy,exceptions.calcified=calcify,exceptions.came=come,exceptions.canalled=canal,exceptions.canalling=canal,exceptions.cancelled=cancel,exceptions.cancelling=cancel,exceptions.candied=candy,exceptions.canned=can,exceptions.canning=can,exceptions.canopied=canopy,exceptions.capped=cap,exceptions.capping=cap,exceptions.carburetted=carburet,exceptions.carburetting=carburet,exceptions.carillonned=carillon,exceptions.carillonning=carillon,exceptions.carnied=carny,exceptions.carnified=carnify,exceptions.carolled=carol,exceptions.carolling=carol,exceptions.carried=carry,exceptions.casefied=casefy,exceptions.catnapped=catnap,exceptions.catnapping=catnap,exceptions.catted=cat,exceptions.catting=cat,exceptions.caught=catch1,exceptions.cavilled=cavil,exceptions.cavilling=cavil,exceptions.certified=certify,exceptions.channelled=channel,exceptions.channelling=channel,exceptions.chapped=chap,exceptions.chapping=chap,exceptions.charred=char,exceptions.charring=char,exceptions.chatted=chat,exceptions.chatting=chat,exceptions.chevied=chivy,exceptions.chevies=chivy,exceptions.chevying=chivy,exceptions.chid=chide,exceptions.chidden=chide,exceptions.chinned=chin,exceptions.chinning=chin,exceptions.chipped=chip,exceptions.chipping=chip,exceptions.chiselled=chisel,exceptions.chiselling=chisel,exceptions.chitchatted=chitchat,exceptions.chitchatting=chitchat,exceptions.chivied=chivy,exceptions.chivved=chiv,exceptions.chivvied=chivy,exceptions.chivvies=chivy,exceptions.chivving=chiv,exceptions.chivvying=chivy,exceptions.chondrified=chondrify,exceptions.chopped=chop,exceptions.chopping=chop,exceptions.chose=choose,exceptions.chosen=choose,exceptions.chugged=chug,exceptions.chugging=chug,exceptions.chummed=chum,exceptions.chumming=chum,exceptions.citified=citify,exceptions.clad=clothe,exceptions.cladded=clad,exceptions.cladding=clad,exceptions.clammed=clam,exceptions.clamming=clam,exceptions.clapped=clap,exceptions.clapping=clap,exceptions.clarified=clarify,exceptions.classified=classify,exceptions.cleft=cleave,exceptions.clemmed=clem,exceptions.clemming=clem,exceptions.clept=clepe,exceptions.clipped=clip,exceptions.clipping=clip,exceptions.clogged=clog,exceptions.clogging=clog,exceptions.clopped=clop,exceptions.clopping=clop,exceptions.clotted=clot,exceptions.clotting=clot,exceptions.clove=cleave,exceptions.cloven=cleave,exceptions.clubbed=club,exceptions.clubbing=club,exceptions.clung=cling,exceptions.cockneyfied=cockneyfy,exceptions.codded=cod,exceptions.codding=cod,exceptions.codified=codify,exceptions.cogged=cog,exceptions.cogging=cog,exceptions.coiffed=coif,exceptions.coiffing=coif,exceptions.collied=colly,exceptions.combatted=combat,exceptions.combatting=combat,exceptions.committed=commit,exceptions.committing=commit,exceptions.compelled=compel,exceptions.compelling=compel,exceptions.complied=comply,exceptions.complotted=complot,exceptions.complotting=complot,exceptions.concurred=concur,exceptions.concurring=concur,exceptions.confabbed=confab,exceptions.confabbing=confab,exceptions.conferred=confer,exceptions.conferring=confer,exceptions.conned=con,exceptions.conning=con,exceptions.controlled=control,exceptions.controlling=control,exceptions.copied=copy,exceptions.copped=cop,exceptions.copping=cop,exceptions.coquetted=coquet,exceptions.coquetting=coquet,exceptions.corralled=corral,exceptions.corralling=corral,exceptions.could=can,exceptions.counselled=counsel,exceptions.counselling=counsel,exceptions.counterplotted=counterplot,exceptions.counterplotting=counterplot,exceptions.countersank=countersink,exceptions.countersunk=countersink,exceptions.crabbed=crab,exceptions.crabbing=crab,exceptions.crammed=cram,exceptions.cramming=cram,exceptions.crapped=crap,exceptions.crapping=crap,exceptions.creeped=creep,exceptions.crept=creep,exceptions.cribbed=crib,exceptions.cribbing=crib,exceptions.cried=cry,exceptions.cropped=crop,exceptions.cropping=crop,exceptions.crossbred=crossbreed,exceptions.crosscutting=crosscut,exceptions.crucified=crucify,exceptions.cubbed=cub,exceptions.cubbing=cub,exceptions.cudgelled=cudgel,exceptions.cudgelling=cudgel,exceptions.cupelled=cupel,exceptions.cupelling=cupel,exceptions.cupped=cup,exceptions.cupping=cup,exceptions.curetted=curet,exceptions.curettes=curet,exceptions.curetting=curet,exceptions.curried=curry,exceptions.curst=curse,exceptions.curtsied=curtsy,exceptions.curvetted=curvet,exceptions.curvetting=curvet,exceptions.cutting=cut,exceptions.dabbed=dab,exceptions.dabbing=dab,exceptions.dagged=dag,exceptions.dagging=dag,exceptions.dallied=dally,exceptions.dammed=dam,exceptions.damming=dam,exceptions.damnified=damnify,exceptions.dandified=dandify,exceptions.dapped=dap,exceptions.dapping=dap,exceptions.dealt=deal,exceptions.debarred=debar,exceptions.debarring=debar,exceptions.debugged=debug,exceptions.debugging=debug,exceptions.debussed=debus,exceptions.debusses=debus,exceptions.debussing=debus,exceptions.decalcified=decalcify,exceptions.declassified=declassify,exceptions.decontrolled=decontrol,exceptions.decontrolling=decontrol,exceptions.decried=decry,exceptions.deferred=defer,exceptions.deferring=defer,exceptions.defied=defy,exceptions.degassed=degas,exceptions.degasses=degas,exceptions.degassing=degas,exceptions.dehumidified=dehumidify,exceptions.deified=deify,exceptions.demitted=demit,exceptions.demitting=demit,exceptions.demobbed=demob,exceptions.demobbing=demob,exceptions.demulsified=demulsify,exceptions.demurred=demur,exceptions.demurring=demur,exceptions.demystified=demystify,exceptions.denazified=denazify,exceptions.denied=deny,exceptions.denitrified=denitrify,exceptions.denned=den,exceptions.denning=den,exceptions.descried=descry,exceptions.deterred=deter,exceptions.deterring=deter,exceptions.detoxified=detoxify,exceptions.devilled=devil,exceptions.devilling=devil,exceptions.devitrified=devitrify,exceptions.diagrammed=diagram,exceptions.diagramming=diagram,exceptions.dialled=dial,exceptions.dialling=dial,exceptions.dibbed=dib,exceptions.dibbing=dib,exceptions.did=do1,exceptions.digging=dig,exceptions.dignified=dignify,exceptions.dimmed=dim,exceptions.dimming=dim,exceptions.dinned=din,exceptions.dinning=din,exceptions.dipped=dip,exceptions.dipping=dip,exceptions.dirtied=dirty,exceptions.disannulled=disannul,exceptions.disannulling=disannul,exceptions.disbarred=disbar,exceptions.disbarring=disbar,exceptions.disbudded=disbud,exceptions.disbudding=disbud,exceptions.disembodied=disembody,exceptions.disembowelled=disembowel,exceptions.disembowelling=disembowel,exceptions.disenthralled=disenthral,exceptions.disenthralling=disenthral,exceptions.disenthralls=disenthral,exceptions.disenthrals=disenthrall,exceptions.dishevelled=dishevel,exceptions.dishevelling=dishevel,exceptions.disinterred=disinter,exceptions.disinterring=disinter,exceptions.dispelled=dispel,exceptions.dispelling=dispel,exceptions.disqualified=disqualify,exceptions.dissatisfied=dissatisfy,exceptions.distilled=distil,exceptions.distilling=distil,exceptions.diversified=diversify,exceptions.divvied=divvy,exceptions.dizzied=dizzy,exceptions.does=do1,exceptions.dogged=dog,exceptions.dogging=dog,exceptions.doglegged=dogleg,exceptions.doglegging=dogleg,exceptions.dollied=dolly,exceptions.done=do1,exceptions.donned=don,exceptions.donning=don,exceptions.dotted=dot,exceptions.dotting=dot,exceptions.dought=dow,exceptions.dove=dive,exceptions.drabbed=drab,exceptions.drabbing=drab,exceptions.dragged=drag,exceptions.dragging=drag,exceptions.drank=drink,exceptions.drawn=draw,exceptions.dreamt=dream,exceptions.drew=draw,exceptions.dried=dry,exceptions.dripped=drip,exceptions.dripping=drip,exceptions.drivelled=drivel,exceptions.drivelling=drivel,exceptions.driven=drive,exceptions.dropped=drop,exceptions.dropping=drop,exceptions.drove=drive,exceptions.drubbed=drub,exceptions.drubbing=drub,exceptions.drugged=drug,exceptions.drugging=drug,exceptions.drummed=drum,exceptions.drumming=drum,exceptions.drunk=drink,exceptions.dubbed=dub,exceptions.dubbing=dub,exceptions.duelled=duel,exceptions.duelling=duel,exceptions.dug=dig,exceptions.dulcified=dulcify,exceptions.dummied=dummy,exceptions.dunned=dun,exceptions.dunning=dun,exceptions.dwelt=dwell,exceptions.dying=die,exceptions.easied=easy,exceptions.eaten=eat,exceptions.eavesdropped=eavesdrop,exceptions.eavesdropping=eavesdrop,exceptions.eddied=eddy,exceptions.edified=edify,exceptions.electrified=electrify,exceptions.embedded=embed,exceptions.embedding=embed,exceptions.embodied=embody,exceptions.embussed=embus,exceptions.embusses=embus,exceptions.embussing=embus,exceptions.emitted=emit,exceptions.emitting=emit,exceptions.empanelled=empanel,exceptions.empanelling=empanel,exceptions.emptied=empty,exceptions.emulsified=emulsify,exceptions.enamelled=enamel,exceptions.enamelling=enamel,exceptions.englutted=englut,exceptions.englutting=englut,exceptions.enrolled=enrol,exceptions.enrolling=enrol,exceptions.enthralled=enthral,exceptions.enthralling=enthral,exceptions.entrammelled=entrammel,exceptions.entrammelling=entrammel,exceptions.entrapped=entrap,exceptions.entrapping=entrap,exceptions.envied=envy,exceptions.enwound=enwind,exceptions.enwrapped=enwrap,exceptions.enwrapping=enwrap,exceptions.equalled=equal,exceptions.equalling=equal,exceptions.equipped=equip,exceptions.equipping=equip,exceptions.espied=espy,exceptions.esterified=esterify,exceptions.estopped=estop,exceptions.estopping=estop,exceptions.etherified=etherify,exceptions.excelled=excel,exceptions.excelling=excel,exceptions.exemplified=exemplify,exceptions.expelled=expel,exceptions.expelling=expel,exceptions.extolled=extol,exceptions.extolling=extol,exceptions.facetted=facet,exceptions.facetting=facet,exceptions.fagged=fag,exceptions.fagging=fag,exceptions.fallen=fall,exceptions.falsified=falsify,exceptions.fancied=fancy,exceptions.fanned=fan,exceptions.fanning=fan,exceptions.fantasied=fantasy,exceptions.fatted=fat,exceptions.fatting=fat,exceptions.featherbedded=featherbed,exceptions.featherbedding=featherbed,exceptions.fed=feed,exceptions.feed=feed,exceptions.fell=fall,exceptions.felt=feel,exceptions.ferried=ferry,exceptions.fibbed=fib,exceptions.fibbing=fib,exceptions.figged=fig,exceptions.figging=fig,exceptions.finned=fin,exceptions.finning=fin,exceptions.fitted=fit,exceptions.fitting=fit,exceptions.flagged=flag,exceptions.flagging=flag,exceptions.flammed=flam,exceptions.flamming=flam,exceptions.flannelled=flannel,exceptions.flannelling=flannel,exceptions.flapped=flap,exceptions.flapping=flap,exceptions.flatted=flat,exceptions.flatting=flat,exceptions.fled=flee,exceptions.flew=fly,exceptions.flimflammed=flimflam,exceptions.flimflamming=flimflam,exceptions.flipped=flip,exceptions.flipping=flip,exceptions.flitted=flit,exceptions.flitting=flit,exceptions.flogged=flog,exceptions.flogging=flog,exceptions.floodlit=floodlight,exceptions.flopped=flop,exceptions.flopping=flop,exceptions.flown=fly,exceptions.flubbed=flub,exceptions.flubbing=flub,exceptions.flung=fling,exceptions.flurried=flurry,exceptions.flyblew=flyblow,exceptions.flyblown=flyblow,exceptions.fobbed=fob,exceptions.fobbing=fob,exceptions.fogged=fog,exceptions.fogging=fog,exceptions.footslogged=footslog,exceptions.footslogging=footslog,exceptions.forbad=forbid,exceptions.forbade=forbid,exceptions.forbidden=forbid,exceptions.forbidding=forbid,exceptions.forbore=forbear,exceptions.forborne=forbear,exceptions.fordid=fordo,exceptions.fordone=fordo,exceptions.foredid=foredo,exceptions.foredone=foredo,exceptions.foregone=forego,exceptions.foreknew=foreknow,exceptions.foreknown=foreknow,exceptions.foreran=forerun,exceptions.forerunning=forerun,exceptions.foresaw=foresee,exceptions.foreseen=foresee,exceptions.foreshown=foreshow,exceptions.forespoke=forespeak,exceptions.forespoken=forespeak,exceptions.foretold=foretell,exceptions.forewent=forego,exceptions.forgave=forgive,exceptions.forgetting=forget,exceptions.forgiven=forgive,exceptions.forgone=forgo,exceptions.forgot=forget,exceptions.forgotten=forget,exceptions.formatted=format,exceptions.formatting=format,exceptions.forsaken=forsake,exceptions.forsook=forsake,exceptions.forspoke=forspeak,exceptions.forspoken=forspeak,exceptions.forswore=forswear,exceptions.forsworn=forswear,exceptions.fortified=fortify,exceptions.forwent=forgo,exceptions.fought=fight,exceptions.found=find,exceptions.foxtrotted=foxtrot,exceptions.foxtrotting=foxtrot,exceptions.frapped=frap,exceptions.frapping=frap,exceptions.frenchified=frenchify,exceptions.frenzied=frenzy,exceptions.fretted=fret,exceptions.fretting=fret,exceptions.fried=fry,exceptions.frigged=frig,exceptions.frigging=frig,exceptions.fritted=frit,exceptions.fritting=frit,exceptions.frivolled=frivol,exceptions.frivolling=frivol,exceptions.frogged=frog,exceptions.frogging=frog,exceptions.frolicked=frolic,exceptions.frolicking=frolic,exceptions.froze=freeze,exceptions.frozen=freeze,exceptions.fructified=fructify,exceptions.fuelled=fuel,exceptions.fuelling=fuel,exceptions.fulfilled=fulfil,exceptions.fulfilling=fulfil,exceptions.funned=fun,exceptions.funnelled=funnel,exceptions.funnelling=funnel,exceptions.funning=fun,exceptions.furred=fur,exceptions.furring=fur,exceptions.gadded=gad,exceptions.gadding=gad,exceptions.gagged=gag,exceptions.gagging=gag,exceptions.gainsaid=gainsay,exceptions.gambolled=gambol,exceptions.gambolling=gambol,exceptions.gammed=gam,exceptions.gamming=gam,exceptions.gan=gin,exceptions.ganned=gan,exceptions.ganning=gan,exceptions.gapped=gap,exceptions.gapping=gap,exceptions.gasified=gasify,exceptions.gassed=gas,exceptions.gasses=gas,exceptions.gassing=gas,exceptions.gave=give,exceptions.gelled=gel,exceptions.gelling=gel,exceptions.gelt=geld,exceptions.gemmed=gem,exceptions.gemming=gem,exceptions.getting=get,exceptions.ghostwritten=ghostwrite,exceptions.ghostwrote=ghostwrite,exceptions.gibbed=gib,exceptions.gibbing=gib,exceptions.giddied=giddy,exceptions.giftwrapped=giftwrap,exceptions.giftwrapping=giftwrap,exceptions.gigged=gig,exceptions.gigging=gig,exceptions.gilt=gild,exceptions.ginned=gin,exceptions.ginning=gin,exceptions.gipped=gip,exceptions.gipping=gip,exceptions.girt=gird,exceptions.given=give,exceptions.glommed=glom,exceptions.glomming=glom,exceptions.gloried=glory,exceptions.glorified=glorify,exceptions.glutted=glut,exceptions.glutting=glut,exceptions.gnawn=gnaw,exceptions.gollied=golly,exceptions.gone=go,exceptions.got=get,exceptions.gotten=get,exceptions.grabbed=grab,exceptions.grabbing=grab,exceptions.gratified=gratify,exceptions.gravelled=gravel,exceptions.gravelling=gravel,exceptions.graven=grave,exceptions.grew=grow,exceptions.grinned=grin,exceptions.grinning=grin,exceptions.gripped=grip,exceptions.gripping=grip,exceptions.gript=grip,exceptions.gritted=grit,exceptions.gritting=grit,exceptions.ground=grind,exceptions.grovelled=grovel,exceptions.grovelling=grovel,exceptions.grown=grow,exceptions.grubbed=grub,exceptions.grubbing=grub,exceptions.guarantied=guaranty,exceptions.gullied=gully,exceptions.gummed=gum,exceptions.gumming=gum,exceptions.gunned=gun,exceptions.gunning=gun,exceptions.gypped=gyp,exceptions.gypping=gyp,exceptions.hacksawn=hacksaw,exceptions.had=have,exceptions.hammed=ham,exceptions.hamming=ham,exceptions.hamstrung=hamstring,exceptions.handfed=handfeed,exceptions.handicapped=handicap,exceptions.handicapping=handicap,exceptions.handselled=handsel,exceptions.handselling=handsel,exceptions.harried=harry,exceptions.has=have,exceptions.hatchelled=hatchel;exceptions.hatchelling=hatchel,exceptions.hatted=hat,exceptions.hatting=hat,exceptions.heard=hear,exceptions.hedgehopped=hedgehop,exceptions.hedgehopping=hedgehop,exceptions.held=hold,exceptions.hemmed=hem,exceptions.hemming=hem,exceptions.hewn=hew,exceptions.hiccupped=hiccup,exceptions.hiccupping=hiccup,exceptions.hid=hide,exceptions.hidden=hide,exceptions.hinnied=hinny,exceptions.hitting=hit,exceptions.hobbed=hob,exceptions.hobbing=hob,exceptions.hobnobbed=hobnob,exceptions.hobnobbing=hobnob,exceptions.hocussed=hocus,exceptions.hocussing=hocus,exceptions.hogged=hog,exceptions.hogging=hog,exceptions.hogtying=hogtie,exceptions.honied=honey,exceptions.hopped=hop,exceptions.hopping=hop,exceptions.horrified=horrify,exceptions.horsewhipped=horsewhip,exceptions.horsewhipping=horsewhip,exceptions.houselled=housel,exceptions.houselling=housel,exceptions.hove=heave,exceptions.hovelled=hovel,exceptions.hovelling=hovel,exceptions.hugged=hug,exceptions.hugging=hug,exceptions.humbugged=humbug,exceptions.humbugging=humbug,exceptions.humidified=humidify,exceptions.hummed=hum,exceptions.humming=hum,exceptions.hung=hang,exceptions.hurried=hurry,exceptions.hypertrophied=hypertrophy,exceptions.identified=identify,exceptions.imbedded=imbed,exceptions.imbedding=imbed,exceptions.impanelled=impanel,exceptions.impanelling=impanel,exceptions.impelled=impel,exceptions.impelling=impel,exceptions.implied=imply,exceptions.inbred=inbreed,exceptions.incurred=incur,exceptions.incurring=incur,exceptions.indemnified=indemnify,exceptions.indwelt=indwell,exceptions.inferred=infer,exceptions.inferring=infer,exceptions.initialled=initial,exceptions.initialling=initial,exceptions.inlaid=inlay,exceptions.insetting=inset,exceptions.inspanned=inspan,exceptions.inspanning=inspan,exceptions.installed=install,exceptions.installing=install,exceptions.intensified=intensify,exceptions.interbred=interbreed,exceptions.intercropped=intercrop,exceptions.intercropping=intercrop,exceptions.intercutting=intercut,exceptions.interlaid=interlay,exceptions.interlapped=interlap,exceptions.interlapping=interlap,exceptions.intermarried=intermarry,exceptions.intermitted=intermit,exceptions.intermitting=intermit,exceptions.interpled=interplead,exceptions.interred=inter,exceptions.interring=inter,exceptions.interstratified=interstratify,exceptions.interwove=interweave,exceptions.interwoven=interweave,exceptions.intromitted=intromit,exceptions.intromitting=intromit,exceptions.inwove=inweave,exceptions.inwoven=inweave,exceptions.inwrapped=inwrap,exceptions.inwrapping=inwrap,exceptions.is=be,exceptions.jabbed=jab,exceptions.jabbing=jab,exceptions.jagged=jag,exceptions.jagging=jag,exceptions.jammed=jam,exceptions.jamming=jam,exceptions.japanned=japan,exceptions.japanning=japan,exceptions.jarred=jar,exceptions.jarring=jar,exceptions.jellied=jelly,exceptions.jellified=jellify,exceptions.jemmied=jemmy,exceptions.jetted=jet,exceptions.jetting=jet,exceptions.jewelled=jewel,exceptions.jewelling=jewel,exceptions.jibbed=jib,exceptions.jibbing=jib,exceptions.jigged=jig,exceptions.jigging=jig,exceptions.jimmied=jimmy,exceptions.jitterbugged=jitterbug,exceptions.jitterbugging=jitterbug,exceptions.jobbed=job,exceptions.jobbing=job,exceptions.jogged=jog,exceptions.jogging=jog,exceptions.jollied=jolly,exceptions.jollified=jollify,exceptions.jotted=jot,exceptions.jotting=jot,exceptions.joypopped=joypop,exceptions.joypopping=joypop,exceptions.jugged=jug,exceptions.jugging=jug,exceptions.justified=justify,exceptions.jutted=jut,exceptions.jutting=jut,exceptions.kenned=ken,exceptions.kennelled=kennel,exceptions.kennelling=kennel,exceptions.kenning=ken,exceptions.kent=ken,exceptions.kept=keep,exceptions.kernelled=kernel,exceptions.kernelling=kernel,exceptions.kidded=kid,exceptions.kidding=kid,exceptions.kidnapped=kidnap,exceptions.kidnapping=kidnap,exceptions.kipped=kip,exceptions.kipping=kip,exceptions.knapped=knap,exceptions.knapping=knap,exceptions.kneecapped=kneecap,exceptions.kneecapping=kneecap,exceptions.knelt=kneel,exceptions.knew=know,exceptions.knitted=knit,exceptions.knitting=knit,exceptions.knobbed=knob,exceptions.knobbing=knob,exceptions.knotted=knot,exceptions.knotting=knot,exceptions.known=know,exceptions.labelled=label,exceptions.labelling=label,exceptions.laden=lade,exceptions.ladyfied=ladify,exceptions.ladyfies=ladify,exceptions.ladyfying=ladify,exceptions.lagged=lag,exceptions.lagging=lag,exceptions.laid=lay,exceptions.lain=lie,exceptions.lallygagged=lallygag,exceptions.lallygagging=lallygag,exceptions.lammed=lam,exceptions.lamming=lam,exceptions.lapidified=lapidify,exceptions.lapped=lap,exceptions.lapping=lap,exceptions.laurelled=laurel,exceptions.laurelling=laurel,exceptions.lay=lie,exceptions.leant=lean,exceptions.leapfrogged=leapfrog,exceptions.leapfrogging=leapfrog,exceptions.leapt=leap,exceptions.learnt=learn,exceptions.led=lead,exceptions.left=leave,exceptions.lent=lend,exceptions.letting=let1,exceptions.levelled=level,exceptions.levelling=level,exceptions.levied=levy,exceptions.libelled=libel,exceptions.libelling=libel,exceptions.lignified=lignify,exceptions.lipped=lip,exceptions.lipping=lip,exceptions.liquefied=liquefy,exceptions.liquified=liquify,exceptions.lit=light,exceptions.lobbed=lob,exceptions.lobbied=lobby,exceptions.lobbing=lob,exceptions.logged=log,exceptions.logging=log,exceptions.lopped=lop,exceptions.lopping=lop,exceptions.lost=lose,exceptions.lotted=lot,exceptions.lotting=lot,exceptions.lugged=lug,exceptions.lugging=lug,exceptions.lullabied=lullaby,exceptions.lying=lie,exceptions.madded=mad,exceptions.madding=mad,exceptions.made=make,exceptions.magnified=magnify,exceptions.manned=man,exceptions.manning=man,exceptions.manumitted=manumit,exceptions.manumitting=manumit,exceptions.mapped=map,exceptions.mapping=map,exceptions.marcelled=marcel,exceptions.marcelling=marcel,exceptions.marred=mar,exceptions.married=marry,exceptions.marring=mar,exceptions.marshalled=marshal,exceptions.marshalling=marshal,exceptions.marvelled=marvel,exceptions.marvelling=marvel,exceptions.matted=mat,exceptions.matting=mat,exceptions.meant=mean,exceptions.medalled=medal,exceptions.medalling=medal,exceptions.met=meet,exceptions.metalled=metal,exceptions.metalling=metal,exceptions.metrified=metrify,exceptions.might=may,exceptions.mimicked=mimic,exceptions.mimicking=mimic,exceptions.minified=minify,exceptions.misapplied=misapply,exceptions.misbecame=misbecome,exceptions.miscarried=miscarry,exceptions.misdealt=misdeal,exceptions.misfitted=misfit,exceptions.misfitting=misfit,exceptions.misgave=misgive,exceptions.misgiven=misgive,exceptions.mishitting=mishit,exceptions.mislaid=mislay,exceptions.misled=mislead,exceptions.mispled=misplead,exceptions.misspelt=misspell,exceptions.misspent=misspend,exceptions.mistaken=mistake,exceptions.mistook=mistake,exceptions.misunderstood=misunderstand,exceptions.mobbed=mob,exceptions.mobbing=mob,exceptions.modelled=model,exceptions.modelling=model,exceptions.modified=modify,exceptions.mollified=mollify,exceptions.molten=melt,exceptions.mopped=mop,exceptions.mopping=mop,exceptions.mortified=mortify,exceptions.mown=mow,exceptions.mudded=mud,exceptions.muddied=muddy,exceptions.mudding=mud,exceptions.mugged=mug,exceptions.mugging=mug,exceptions.multiplied=multiply,exceptions.mummed=mum,exceptions.mummified=mummify,exceptions.mumming=mum,exceptions.mutinied=mutiny,exceptions.mystified=mystify,exceptions.nabbed=nab,exceptions.nabbing=nab,exceptions.nagged=nag,exceptions.nagging=nag,exceptions.napped=nap,exceptions.napping=nap,exceptions.netted=net,exceptions.netting=net,exceptions.nibbed=nib,exceptions.nibbing=nib,exceptions.nickelled=nickel,exceptions.nickelling=nickel,exceptions.nidified=nidify,exceptions.nigrified=nigrify,exceptions.nipped=nip,exceptions.nipping=nip,exceptions.nitrified=nitrify,exceptions.nodded=nod,exceptions.nodding=nod,exceptions.nonplussed=nonplus,exceptions.nonplusses=nonplus,exceptions.nonplussing=nonplus,exceptions.notified=notify,exceptions.nullified=nullify,exceptions.nutted=nut,exceptions.nutting=nut,exceptions.objectified=objectify,exceptions.occupied=occupy,exceptions.occurred=occur,exceptions.occurring=occur,exceptions.offsetting=offset,exceptions.omitted=omit,exceptions.omitting=omit,exceptions.ossified=ossify,exceptions.outbidden=outbid,exceptions.outbidding=outbid,exceptions.outbred=outbreed,exceptions.outcried=outcry,exceptions.outcropped=outcrop,exceptions.outcropping=outcrop,exceptions.outdid=outdo,exceptions.outdone=outdo,exceptions.outdrawn=outdraw,exceptions.outdrew=outdraw,exceptions.outfitted=outfit,exceptions.outfitting=outfit,exceptions.outfought=outfight,exceptions.outgassed=outgas,exceptions.outgasses=outgas,exceptions.outgassing=outgas,exceptions.outgeneralled=outgeneral,exceptions.outgeneralling=outgeneral,exceptions.outgone=outgo,exceptions.outgrew=outgrow,exceptions.outgrown=outgrow,exceptions.outlaid=outlay,exceptions.outmanned=outman,exceptions.outmanning=outman,exceptions.outputted=output,exceptions.outputting=output,exceptions.outran=outrun,exceptions.outridden=outride,exceptions.outrode=outride,exceptions.outrunning=outrun,exceptions.outshone=outshine,exceptions.outshot=outshoot,exceptions.outsold=outsell,exceptions.outspanned=outspan,exceptions.outspanning=outspan,exceptions.outstood=outstand,exceptions.outstripped=outstrip,exceptions.outstripping=outstrip,exceptions.outthought=outthink,exceptions.outwent=outgo,exceptions.outwitted=outwit,exceptions.outwitting=outwit,exceptions.outwore=outwear,exceptions.outworn=outwear,exceptions.overbidden=overbid,exceptions.overbidding=overbid,exceptions.overblew=overblow,exceptions.overblown=overblow,exceptions.overbore=overbear,exceptions.overborne=overbear,exceptions.overbuilt=overbuild,exceptions.overcame=overcome,exceptions.overcropped=overcrop,exceptions.overcropping=overcrop,exceptions.overdid=overdo,exceptions.overdone=overdo,exceptions.overdrawn=overdraw,exceptions.overdrew=overdraw,exceptions.overdriven=overdrive,exceptions.overdrove=overdrive,exceptions.overflew=overfly,exceptions.overflown=overflow,exceptions.overgrew=overgrow,exceptions.overgrown=overgrow,exceptions.overheard=overhear,exceptions.overhung=overhang,exceptions.overlaid=overlay,exceptions.overlain=overlie,exceptions.overlapped=overlap,exceptions.overlapping=overlap,exceptions.overlay=overlie,exceptions.overlying=overlie,exceptions.overmanned=overman,exceptions.overmanning=overman,exceptions.overpaid=overpay,exceptions.overpast=overpass,exceptions.overran=overrun,exceptions.overridden=override,exceptions.overrode=override,exceptions.overrunning=overrun,exceptions.oversaw=oversee,exceptions.overseen=oversee,exceptions.oversetting=overset,exceptions.oversewn=oversew,exceptions.overshot=overshoot,exceptions.oversimplified=oversimplify,exceptions.overslept=oversleep,exceptions.oversold=oversell,exceptions.overspent=overspend,exceptions.overspilt=overspill,exceptions.overstepped=overstep,exceptions.overstepping=overstep,exceptions.overtaken=overtake,exceptions.overthrew=overthrow,exceptions.overthrown=overthrow,exceptions.overtook=overtake,exceptions.overtopped=overtop,exceptions.overtopping=overtop,exceptions.overwound=overwind,exceptions.overwritten=overwrite,exceptions.overwrote=overwrite,exceptions.pacified=pacify,exceptions.padded=pad,exceptions.padding=pad,exceptions.paid=pay,exceptions.palled=pal,exceptions.palling=pal,exceptions.palsied=palsy,exceptions.pandied=pandy,exceptions.panelled=panel,exceptions.panelling=panel,exceptions.panicked=panic,exceptions.panicking=panic,exceptions.panned=pan,exceptions.panning=pan,exceptions.parallelled=parallel,exceptions.parallelling=parallel,exceptions.parcelled=parcel,exceptions.parcelling=parcel,exceptions.parodied=parody,exceptions.parried=parry,exceptions.partaken=partake,exceptions.partook=partake,exceptions.pasquil=pasquinade,exceptions.pasquilled=pasquinade,exceptions.pasquilling=pasquinade,exceptions.pasquils=pasquinade,exceptions.patrolled=patrol,exceptions.patrolling=patrol,exceptions.patted=pat,exceptions.patting=pat,exceptions.pedalled=pedal,exceptions.pedalling=pedal,exceptions.pegged=peg,exceptions.pegging=peg,exceptions.pencilled=pencil,exceptions.pencilling=pencil,exceptions.penned=pen,exceptions.penning=pen,exceptions.pent=pen,exceptions.pepped=pep,exceptions.pepping=pep,exceptions.permitted=permit,exceptions.permitting=permit,exceptions.personified=personify,exceptions.petrified=petrify,exceptions.petted=pet,exceptions.pettifogged=pettifog,exceptions.pettifogging=pettifog,exceptions.petting=pet,exceptions.phantasied=phantasy,exceptions.photocopied=photocopy,exceptions.photomapped=photomap,exceptions.photomapping=photomap,exceptions.photosetting=photoset,exceptions.physicked=physic,exceptions.physicking=physic,exceptions.picnicked=picnic,exceptions.picnicking=picnic,exceptions.pigged=pig,exceptions.pigging=pig,exceptions.pilloried=pillory,exceptions.pinned=pin,exceptions.pinning=pin,exceptions.pipped=pip,exceptions.pipping=pip,exceptions.pistolled=pistol,exceptions.pistolling=pistol,exceptions.pitapatted=pitapat,exceptions.pitapatting=pitapat,exceptions.pitied=pity,exceptions.pitted=pit,exceptions.pitting=pit,exceptions.planned=plan,exceptions.planning=plan,exceptions.platted=plat,exceptions.platting=plat,exceptions.pled=plead,exceptions.plied=ply,exceptions.plodded=plod,exceptions.plodding=plod,exceptions.plopped=plop,exceptions.plopping=plop,exceptions.plotted=plot,exceptions.plotting=plot,exceptions.plugged=plug,exceptions.plugging=plug,exceptions.podded=pod,exceptions.podding=pod,exceptions.pommelled=pommel,exceptions.pommelling=pommel,exceptions.popes=popes,exceptions.popped=pop,exceptions.popping=pop,exceptions.potted=pot,exceptions.potting=pot,exceptions.preachified=preachify,exceptions.precancelled=precancel,exceptions.precancelling=precancel,exceptions.preferred=prefer,exceptions.preferring=prefer,exceptions.preoccupied=preoccupy,exceptions.prepaid=prepay,exceptions.presignified=presignify,exceptions.pretermitted=pretermit,exceptions.pretermitting=pretermit,exceptions.prettied=pretty,exceptions.prettified=prettify,exceptions.pried=pry,exceptions.prigged=prig,exceptions.prigging=prig,exceptions.primmed=prim,exceptions.primming=prim,exceptions.prodded=prod,exceptions.prodding=prod,exceptions.programmed=program,exceptions.programmes=program,exceptions.programming=program,exceptions.prologed=prologue,exceptions.prologing=prologue,exceptions.prologs=prologue,exceptions.propelled=propel,exceptions.propelling=propel,exceptions.prophesied=prophesy,exceptions.propped=prop,exceptions.propping=prop,exceptions.proven=prove,exceptions.pubbed=pub,exceptions.pubbing=pub,exceptions.pugged=pug,exceptions.pugging=pug,exceptions.pummelled=pummel,exceptions.pummelling=pummel,exceptions.punned=pun,exceptions.punning=pun,exceptions.pupped=pup,exceptions.pupping=pup,exceptions.purified=purify,exceptions.putrefied=putrefy,exceptions.puttied=putty,exceptions.putting=put,exceptions.qualified=qualify,exceptions.quantified=quantify,exceptions.quarrelled=quarrel,exceptions.quarrelling=quarrel,exceptions.quarried=quarry,exceptions.quartersawn=quartersaw,exceptions.queried=query,exceptions.quickstepped=quickstep,exceptions.quickstepping=quickstep,exceptions.quipped=quip,exceptions.quipping=quip,exceptions.quitted=quit,exceptions.quitting=quit,exceptions.quizzed=quiz,exceptions.quizzes=quiz,exceptions.quizzing=quiz,exceptions.ragged=rag,exceptions.ragging=rag,exceptions.rallied=rally,exceptions.ramified=ramify,exceptions.rammed=ram,exceptions.ramming=ram,exceptions.ran=run,exceptions.rang=ring,exceptions.rapped=rap,exceptions.rappelled=rappel,exceptions.rappelling=rappel,exceptions.rapping=rap,exceptions.rarefied=rarefy,exceptions.ratified=ratify,exceptions.ratted=rat,exceptions.ratting=rat,exceptions.ravelled=ravel,exceptions.ravelling=ravel,exceptions.rebelled=rebel,exceptions.rebelling=rebel,exceptions.rebuilt=rebuild,exceptions.rebutted=rebut,exceptions.rebutting=rebut,exceptions.recapped=recap,exceptions.recapping=recap,exceptions.reclassified=reclassify,exceptions.recommitted=recommit,exceptions.recommitting=recommit,exceptions.recopied=recopy,exceptions.rectified=rectify,exceptions.recurred=recur,exceptions.recurring=recur,exceptions.red=red,exceptions.redded=red,exceptions.redding=red,exceptions.redid=redo,exceptions.redone=redo,exceptions.referred=refer,exceptions.referring=refer,exceptions.refitted=refit,exceptions.refitting=refit,exceptions.reft=reave,exceptions.refuelled=refuel,exceptions.refuelling=refuel,exceptions.regretted=regret,exceptions.regretting=regret,exceptions.reheard=rehear,exceptions.reified=reify,exceptions.relied=rely,exceptions.remade=remake,exceptions.remarried=remarry,exceptions.remitted=remit,exceptions.remitting=remit,exceptions.rent=rend,exceptions.repaid=repay,exceptions.repelled=repel,exceptions.repelling=repel,exceptions.replevied=replevy,exceptions.replied=reply,exceptions.repotted=repot,exceptions.repotting=repot,exceptions.reran=rerun,exceptions.rerunning=rerun,exceptions.resat=resit,exceptions.resetting=reset,exceptions.resewn=resew,exceptions.resitting=resit,exceptions.retaken=retake,exceptions.rethought=rethink,exceptions.retold=retell,exceptions.retook=retake,exceptions.retransmitted=retransmit,exceptions.retransmitting=retransmit,exceptions.retried=retry,exceptions.retrofitted=retrofit,exceptions.retrofitting=retrofit,exceptions.retted=ret,exceptions.retting=ret,exceptions.reunified=reunify,exceptions.revelled=revel,exceptions.revelling=revel,exceptions.revetted=revet,exceptions.revetting=revet,exceptions.revivified=revivify,exceptions.revved=rev,exceptions.revving=rev,exceptions.rewound=rewind,exceptions.rewritten=rewrite,exceptions.rewrote=rewrite,exceptions.ribbed=rib,exceptions.ribbing=rib,exceptions.ricochetted=ricochet,exceptions.ricochetting=ricochet,exceptions.ridded=rid,exceptions.ridden=ride,exceptions.ridding=rid,exceptions.rigged=rig,exceptions.rigging=rig,exceptions.rigidified=rigidify,exceptions.rimmed=rim,exceptions.rimming=rim,exceptions.ripped=rip,exceptions.ripping=rip,exceptions.risen=rise,exceptions.rivalled=rival,exceptions.rivalling=rival,exceptions.riven=rive,exceptions.robbed=rob,exceptions.robbing=rob,exceptions.rode=ride,exceptions.rose=rise,exceptions.rotted=rot,exceptions.rotting=rot,exceptions.rove=reeve,exceptions.rowelled=rowel,exceptions.rowelling=rowel,exceptions.rubbed=rub,exceptions.rubbing=rub,exceptions.rung=ring,exceptions.running=run,exceptions.rutted=rut,exceptions.rutting=rut,exceptions.saccharified=saccharify,exceptions.sagged=sag,exceptions.sagging=sag,exceptions.said=say,exceptions.salaried=salary,exceptions.salified=salify,exceptions.sallied=sally,exceptions.sanctified=sanctify,exceptions.sandbagged=sandbag,exceptions.sandbagging=sandbag,exceptions.sang=sing,exceptions.sank=sink,exceptions.saponified=saponify,exceptions.sapped=sap,exceptions.sapping=sap,exceptions.sat=sit,exceptions.satisfied=satisfy,exceptions.savvied=savvy,exceptions.saw=see,exceptions.sawn=saw,exceptions.scagged=scag,exceptions.scagging=scag,exceptions.scanned=scan,exceptions.scanning=scan,exceptions.scarified=scarify,exceptions.scarred=scar,exceptions.scarring=scar,exceptions.scatted=scat,exceptions.scatting=scat,exceptions.scorified=scorify,exceptions.scragged=scrag,exceptions.scragging=scrag,exceptions.scrammed=scram,exceptions.scramming=scram,exceptions.scrapped=scrap,exceptions.scrapping=scrap,exceptions.scried=scry,exceptions.scrubbed=scrub,exceptions.scrubbing=scrub,exceptions.scrummed=scrum,exceptions.scrumming=scrum,exceptions.scudded=scud,exceptions.scudding=scud,exceptions.scummed=scum,exceptions.scumming=scum,exceptions.scurried=scurry,exceptions.seed=seed,exceptions.seen=see,exceptions.sent=send,exceptions.setting=set,exceptions.sewn=sew,exceptions.shagged=shag,exceptions.shagging=shag,exceptions.shaken=shake,exceptions.shammed=sham,exceptions.shamming=sham,exceptions.sharecropped=sharecrop,exceptions.sharecropping=sharecrop,exceptions.shat=shit,exceptions.shaven=shave,exceptions.shorn=shear,exceptions.shed=shed,exceptions.shedding=shed,exceptions.shellacked=shellac,exceptions.shellacking=shellac,exceptions.shent=shend,exceptions.shewn=shew,exceptions.shied=shy,exceptions.shikarred=shikar,exceptions.shikarring=shikar,exceptions.shillyshallied=shillyshally,exceptions.shimmed=shim,exceptions.shimmied=shimmy,exceptions.shimming=shim,exceptions.shinned=shin,exceptions.shinning=shin,exceptions.shipped=ship,exceptions.shipping=ship,exceptions.shitted=shit,exceptions.shitting=shit,exceptions.shod=shoe,exceptions.shone=shine,exceptions.shook=shake,exceptions.shopped=shop,exceptions.shopping=shop,exceptions.shot=shoot,exceptions.shotgunned=shotgun,exceptions.shotgunning=shotgun,exceptions.shotted=shot,exceptions.shotting=shot,exceptions.shovelled=shovel,exceptions.shovelling=shovel,exceptions.shown=show,exceptions.shrank=shrink,exceptions.shredded=shred,exceptions.shredding=shred,exceptions.shrivelled=shrivel,exceptions.shrivelling=shrivel,exceptions.shriven=shrive,exceptions.shrove=shrive,exceptions.shrugged=shrug,exceptions.shrugging=shrug,exceptions.shrunk=shrink;exceptions.shrunken=shrink,exceptions.shunned=shun,exceptions.shunning=shun,exceptions.shutting=shut,exceptions.sicked=sic,exceptions.sicking=sic,exceptions.sideslipped=sideslip,exceptions.sideslipping=sideslip,exceptions.sidestepped=sidestep,exceptions.sidestepping=sidestep,exceptions.sightsaw=sightsee,exceptions.sightseen=sightsee,exceptions.signalled=signal,exceptions.signalling=signal,exceptions.signified=signify,exceptions.silicified=silicify,exceptions.simplified=simplify,exceptions.singing=sing,exceptions.sinned=sin,exceptions.sinning=sin,exceptions.sipped=sip,exceptions.sipping=sip,exceptions.sitting=sit,exceptions.skellied=skelly,exceptions.skenned=sken,exceptions.skenning=sken,exceptions.sketted=sket,exceptions.sketting=sket,exceptions.skidded=skid,exceptions.skidding=skid,exceptions.skimmed=skim,exceptions.skimming=skim,exceptions.skinned=skin,exceptions.skinning=skin,exceptions.skipped=skip,exceptions.skipping=skip,exceptions.skivvied=skivvy,exceptions.skydove=skydive,exceptions.slabbed=slab,exceptions.slabbing=slab,exceptions.slagged=slag,exceptions.slagging=slag,exceptions.slain=slay,exceptions.slammed=slam,exceptions.slamming=slam,exceptions.slapped=slap,exceptions.slapping=slap,exceptions.slatted=slat,exceptions.slatting=slat,exceptions.sledding=sled,exceptions.slept=sleep,exceptions.slew=slay,exceptions.slid=slide,exceptions.slidden=slide,exceptions.slipped=slip,exceptions.slipping=slip,exceptions.slitting=slit,exceptions.slogged=slog,exceptions.slogging=slog,exceptions.slopped=slop,exceptions.slopping=slop,exceptions.slotted=slot,exceptions.slotting=slot,exceptions.slugged=slug,exceptions.slugging=slug,exceptions.slummed=slum,exceptions.slumming=slum,exceptions.slung=sling,exceptions.slunk=slink,exceptions.slurred=slur,exceptions.slurring=slur,exceptions.smelt=smell,exceptions.smit=smite,exceptions.smitten=smite,exceptions.smote=smite,exceptions.smutted=smut,exceptions.smutting=smut,exceptions.snagged=snag,exceptions.snagging=snag,exceptions.snapped=snap,exceptions.snapping=snap,exceptions.snedded=sned,exceptions.snedding=sned,exceptions.snipped=snip,exceptions.snipping=snip,exceptions.snivelled=snivel,exceptions.snivelling=snivel,exceptions.snogged=snog,exceptions.snogging=snog,exceptions.snubbed=snub,exceptions.snubbing=snub,exceptions.snuck=sneak,exceptions.snugged=snug,exceptions.snugging=snug,exceptions.sobbed=sob,exceptions.sobbing=sob,exceptions.sodded=sod,exceptions.sodding=sod,exceptions.sold=sell,exceptions.solemnified=solemnify,exceptions.solidified=solidify,exceptions.soothsaid=soothsay,exceptions.sopped=sop,exceptions.sopping=sop,exceptions.sought=seek,exceptions.sown=sow,exceptions.spagged=spag,exceptions.spagging=spag,exceptions.spancelled=spancel,exceptions.spancelling=spancel,exceptions.spanned=span,exceptions.spanning=span,exceptions.sparred=spar,exceptions.sparring=spar,exceptions.spat=spit,exceptions.spatted=spat,exceptions.spatting=spat,exceptions.specified=specify,exceptions.sped=speed,exceptions.speechified=speechify,exceptions.spellbound=spellbind,exceptions.spelt=spell,exceptions.spent=spend,exceptions.spied=spy,exceptions.spilt=spill,exceptions.spinning=spin,exceptions.spiralled=spiral,exceptions.spiralling=spiral,exceptions.spitted=spit,exceptions.spitting=spit,exceptions.splitting=split,exceptions.spoilt=spoil,exceptions.spoke=speak,exceptions.spoken=speak,exceptions.spotlit=spotlight,exceptions.spotted=spot,exceptions.spotting=spot,exceptions.sprang=spring,exceptions.sprigged=sprig,exceptions.sprigging=sprig,exceptions.sprung=spring,exceptions.spudded=spud,exceptions.spudding=spud,exceptions.spun=spin,exceptions.spurred=spur,exceptions.spurring=spur,exceptions.squatted=squat,exceptions.squatting=squat,exceptions.squibbed=squib,exceptions.squibbing=squib,exceptions.squidded=squid,exceptions.squidding=squid,exceptions.squilgee=squeegee,exceptions.stabbed=stab,exceptions.stabbing=stab,exceptions.stank=stink,exceptions.starred=star,exceptions.starring=star,exceptions.steadied=steady,exceptions.stellified=stellify,exceptions.stemmed=stem,exceptions.stemming=stem,exceptions.stencilled=stencil,exceptions.stencilling=stencil,exceptions.stepped=step,exceptions.stepping=step,exceptions.stetted=stet,exceptions.stetting=stet,exceptions.stied=sty,exceptions.stilettoeing=stiletto,exceptions.stirred=stir,exceptions.stirring=stir,exceptions.stole=steal,exceptions.stolen=steal,exceptions.stood=stand,exceptions.stopped=stop,exceptions.stopping=stop,exceptions.storied=story,exceptions.stotted=stot,exceptions.stotting=stot,exceptions.stove=stave,exceptions.strapped=strap,exceptions.strapping=strap,exceptions.stratified=stratify,exceptions.strewn=strew,exceptions.stridden=stride,exceptions.stripped=strip,exceptions.stripping=strip,exceptions.striven=strive,exceptions.strode=stride,exceptions.stropped=strop,exceptions.stropping=strop,exceptions.strove=strive,exceptions.strown=strow,exceptions.stricken=strike,exceptions.struck=strike,exceptions.strummed=strum,exceptions.strumming=strum,exceptions.strung=string,exceptions.strutted=strut,exceptions.strutting=strut,exceptions.stubbed=stub,exceptions.stubbing=stub,exceptions.stuck=stick,exceptions.studded=stud,exceptions.studding=stud,exceptions.studied=study,exceptions.stultified=stultify,exceptions.stummed=stum,exceptions.stumming=stum,exceptions.stung=sting,exceptions.stunk=stink,exceptions.stunned=stun,exceptions.stunning=stun,exceptions.stupefied=stupefy,exceptions.stymying=stymie,exceptions.subbed=sub,exceptions.subbing=sub,exceptions.subjectified=subjectify,exceptions.subletting=sublet,exceptions.submitted=submit,exceptions.submitting=submit,exceptions.subtotalled=subtotal,exceptions.subtotalling=subtotal,exceptions.sullied=sully,exceptions.sulphuretted=sulphuret,exceptions.sulphuretting=sulphuret,exceptions.summed=sum,exceptions.summing=sum,exceptions.sung=sing,exceptions.sunk=sink,exceptions.sunken=sink,exceptions.sunned=sun,exceptions.sunning=sun,exceptions.supped=sup,exceptions.supping=sup,exceptions.supplied=supply,exceptions.swabbed=swab,exceptions.swabbing=swab,exceptions.swagged=swag,exceptions.swagging=swag,exceptions.swam=swim,exceptions.swapped=swap,exceptions.swapping=swap,exceptions.swatted=swat,exceptions.swatting=swat,exceptions.swept=sweep,exceptions.swigged=swig,exceptions.swigging=swig,exceptions.swimming=swim,exceptions.swivelled=swivel,exceptions.swivelling=swivel,exceptions.swollen=swell,exceptions.swopped=swap,exceptions.swopping=swap,exceptions.swops=swap,exceptions.swore=swear,exceptions.sworn=swear,exceptions.swotted=swot,exceptions.swotting=swot,exceptions.swum=swim,exceptions.swung=swing,exceptions.syllabified=syllabify,exceptions.symbolled=symbol,exceptions.symbolling=symbol,exceptions.tabbed=tab,exceptions.tabbing=tab,exceptions.tagged=tag,exceptions.tagging=tag,exceptions.taken=take,exceptions.talcked=talc,exceptions.talcking=talc,exceptions.tallied=tally,exceptions.tammied=tammy,exceptions.tanned=tan,exceptions.tanning=tan,exceptions.tapped=tap,exceptions.tapping=tap,exceptions.tarred=tar,exceptions.tarried=tarry,exceptions.tarring=tar,exceptions.tasselled=tassel,exceptions.tasselling=tassel,exceptions.tatted=tat,exceptions.tatting=tat,exceptions.taught=teach,exceptions.taxis=taxis,exceptions.taxying=taxi,exceptions.teaselled=teasel,exceptions.teaselling=teasel,exceptions.tedded=ted,exceptions.tedding=ted,exceptions.tepefied=tepefy,exceptions.terrified=terrify,exceptions.testes=testes,exceptions.testified=testify,exceptions.thinned=thin,exceptions.thinning=thin,exceptions.thought=think,exceptions.threw=throw1,exceptions.thriven=thrive,exceptions.throbbed=throb,exceptions.throbbing=throb,exceptions.throve=thrive,exceptions.thrown=throw1,exceptions.thrummed=thrum,exceptions.thrumming=thrum,exceptions.thudded=thud,exceptions.thudding=thud,exceptions.tidied=tidy,exceptions.tinned=tin,exceptions.tinning=tin,exceptions.tinselled=tinsel,exceptions.tinselling=tinsel,exceptions.tipped=tip,exceptions.tipping=tip,exceptions.tittupped=tittup,exceptions.tittupping=tittup,exceptions.toadied=toady,exceptions.togged=tog,exceptions.togging=tog,exceptions.told=tell,exceptions.took=take,exceptions.topped=top,exceptions.topping=top,exceptions.tore=tear,exceptions.torn=tear,exceptions.torrefied=torrefy,exceptions.torrify=torrefy,exceptions.totalled=total,exceptions.totalling=total,exceptions.totted=tot,exceptions.totting=tot,exceptions.towelled=towel,exceptions.towelling=towel,exceptions.trafficked=traffic,exceptions.trafficking=traffic,exceptions.trameled=trammel,exceptions.trameling=trammel,exceptions.tramelled=trammel,exceptions.tramelling=trammel,exceptions.tramels=trammel,exceptions.trammed=tram,exceptions.tramming=tram,exceptions.transferred=transfer,exceptions.transferring=transfer,exceptions.transfixt=transfix,exceptions.tranship=transship,exceptions.transhipped=tranship,exceptions.transhipping=tranship,exceptions.transmitted=transmit,exceptions.transmitting=transmit,exceptions.transmogrified=transmogrify,exceptions.transshipped=transship,exceptions.transshipping=transship,exceptions.trapanned=trapan,exceptions.trapanning=trapan,exceptions.trapped=trap,exceptions.trapping=trap,exceptions.travelled=travel,exceptions.travelling=travel,exceptions.travestied=travesty,exceptions.trekked=trek,exceptions.trekking=trek,exceptions.trepanned=trepan,exceptions.trepanning=trepan,exceptions.tried=try1,exceptions.trigged=trig,exceptions.trigging=trig,exceptions.trimmed=trim,exceptions.trimming=trim,exceptions.tripped=trip,exceptions.tripping=trip,exceptions.trod=tread,exceptions.trodden=tread,exceptions.trogged=trog,exceptions.trogging=trog,exceptions.trotted=trot,exceptions.trotting=trot,exceptions.trowelled=trowel,exceptions.trowelling=trowel,exceptions.tugged=tug,exceptions.tugging=tug,exceptions.tumefied=tumefy,exceptions.tunned=tun,exceptions.tunnelled=tunnel,exceptions.tunnelling=tunnel,exceptions.tunning=tun,exceptions.tupped=tup,exceptions.tupping=tup,exceptions.twigged=twig,exceptions.twigging=twig,exceptions.twinned=twin,exceptions.twinning=twin,exceptions.twitted=twit,exceptions.twitting=twit,exceptions.tying=tie,exceptions.typesetting=typeset,exceptions.typewritten=typewrite,exceptions.typewrote=typewrite,exceptions.typified=typify,exceptions.uglified=uglify,exceptions.unbarred=unbar,exceptions.unbarring=unbar,exceptions.unbent=unbend,exceptions.unbound=unbind,exceptions.uncapped=uncap,exceptions.uncapping=uncap,exceptions.unclad=unclothe,exceptions.unclogged=unclog,exceptions.unclogging=unclog,exceptions.underbidding=underbid,exceptions.underbought=underbuy,exceptions.undercutting=undercut,exceptions.underfed=underfeed,exceptions.undergirt=undergird,exceptions.undergone=undergo,exceptions.underlaid=underlay,exceptions.underlain=underlie,exceptions.underlay=underlie,exceptions.underletting=underlet,exceptions.underlying=underlie,exceptions.underpaid=underpay,exceptions.underpinned=underpin,exceptions.underpinning=underpin,exceptions.underpropped=underprop,exceptions.underpropping=underprop,exceptions.undersetting=underset,exceptions.undershot=undershoot,exceptions.undersold=undersell,exceptions.understood=understand,exceptions.understudied=understudy,exceptions.undertaken=undertake,exceptions.undertook=undertake,exceptions.underwent=undergo,exceptions.underwritten=underwrite,exceptions.underwrote=underwrite,exceptions.undid=undo,exceptions.undone=undo,exceptions.unfitted=unfit,exceptions.unfitting=unfit,exceptions.unfroze=unfreeze,exceptions.unfrozen=unfreeze,exceptions.unified=unify,exceptions.unkennelled=unkennel,exceptions.unkennelling=unkennel,exceptions.unknitted=unknit,exceptions.unknitting=unknit,exceptions.unlaid=unlay,exceptions.unlearnt=unlearn,exceptions.unmade=unmake,exceptions.unmanned=unman,exceptions.unmanning=unman,exceptions.unpegged=unpeg,exceptions.unpegging=unpeg,exceptions.unpinned=unpin,exceptions.unpinning=unpin,exceptions.unplugged=unplug,exceptions.unplugging=unplug,exceptions.unravelled=unravel,exceptions.unravelling=unravel,exceptions.unrigged=unrig,exceptions.unrigging=unrig,exceptions.unripped=unrip,exceptions.unripping=unrip,exceptions.unrove=unreeve,exceptions.unsaid=unsay,exceptions.unshipped=unship,exceptions.unshipping=unship,exceptions.unslung=unsling,exceptions.unsnapped=unsnap,exceptions.unsnapping=unsnap,exceptions.unspoke=unspeak,exceptions.unspoken=unspeak,exceptions.unsteadied=unsteady,exceptions.unstepped=unstep,exceptions.unstepping=unstep,exceptions.unstopped=unstop,exceptions.unstopping=unstop,exceptions.unstrung=unstring,exceptions.unstuck=unstick,exceptions.unswore=unswear,exceptions.unsworn=unswear,exceptions.untaught=unteach,exceptions.unthought=unthink,exceptions.untidied=untidy,exceptions.untrod=untread,exceptions.untrodden=untread,exceptions.untying=untie,exceptions.unwound=unwind,exceptions.unwrapped=unwrap,exceptions.unwrapping=unwrap,exceptions.unzipped=unzip,exceptions.unzipping=unzip,exceptions.upbuilt=upbuild,exceptions.upheld=uphold,exceptions.uphove=upheave,exceptions.upped=up,exceptions.uppercutting=uppercut,exceptions.upping=up,exceptions.uprisen=uprise,exceptions.uprose=uprise,exceptions.upsetting=upset,exceptions.upsprang=upspring,exceptions.upsprung=upspring,exceptions.upswept=upsweep,exceptions.upswollen=upswell,exceptions.upswung=upswing,exceptions.vagged=vag,exceptions.vagging=vag,exceptions.varied=vary,exceptions.vatted=vat,exceptions.vatting=vat,exceptions.verbified=verbify,exceptions.verified=verify,exceptions.versified=versify,exceptions.vetted=vet,exceptions.vetting=vet,exceptions.victualled=victual,exceptions.victualling=victual,exceptions.vilified=vilify,exceptions.vitrified=vitrify,exceptions.vitriolled=vitriol,exceptions.vitriolling=vitriol,exceptions.vivified=vivify,exceptions.vying=vie,exceptions.wadded=wad,exceptions.waddied=waddy,exceptions.wadding=wad,exceptions.wadsetted=wadset,exceptions.wadsetting=wadset,exceptions.wagged=wag,exceptions.wagging=wag,exceptions.wanned=wan,exceptions.wanning=wan,exceptions.warred=war,exceptions.warring=war,exceptions.was=be,exceptions.waylaid=waylay,exceptions.wearied=weary,exceptions.weatherstripped=weatherstrip,exceptions.weatherstripping=weatherstrip,exceptions.webbed=web,exceptions.webbing=web,exceptions.wedded=wed,exceptions.wedding=wed,exceptions.weed=weed,exceptions.went=go,exceptions.wept=weep,exceptions.were=be,exceptions.wetted=wet,exceptions.wetting=wet,exceptions.whammed=wham,exceptions.whamming=wham,exceptions.whapped=whap,exceptions.whapping=whap,exceptions.whetted=whet,exceptions.whetting=whet,exceptions.whinnied=whinny,exceptions.whipped=whip,exceptions.whipping=whip,exceptions.whipsawn=whipsaw,exceptions.whirred=whir,exceptions.whirring=whir,exceptions.whizzed=whiz,exceptions.whizzes=whiz,exceptions.whizzing=whiz,exceptions.whopped=whop,exceptions.whopping=whop,exceptions.wigged=wig,exceptions.wigging=wig,exceptions.wigwagged=wigwag,exceptions.wigwagging=wigwag,exceptions.wildcatted=wildcat,exceptions.wildcatting=wildcat,exceptions.winning=win,exceptions.winterfed=winterfeed,exceptions.wiredrawn=wiredraw,exceptions.wiredrew=wiredraw,exceptions.withdrawn=withdraw,exceptions.withdrew=withdraw,exceptions.withheld=withhold,exceptions.withstood=withstand,exceptions.woke=wake,exceptions.woken=wake,exceptions.won=win,exceptions.wonned=won,exceptions.wonning=won,exceptions.wore=wear,exceptions.worn=wear,exceptions.worried=worry,exceptions.worshipped=worship,exceptions.worshipping=worship,exceptions.wound=wind,exceptions.wove=weave,exceptions.woven=weave,exceptions.wrapped=wrap,exceptions.wrapping=wrap,exceptions.wried=wry,exceptions.written=write,exceptions.wrote=write,exceptions.wrought=work,exceptions.wrung=wring,exceptions.would=will,exceptions.yakked=yak,exceptions.yakking=yak,exceptions.yapped=yap,exceptions.yapping=yap,exceptions.ycleped=clepe,exceptions.yclept=clepe,exceptions.yenned=yen,exceptions.yenning=yen,exceptions.yodelled=yodel,exceptions.yodelling=yodel,exceptions.zapped=zap,exceptions.zapping=zap,exceptions.zigzagged=zigzag,exceptions.zigzagging=zigzag,exceptions.zipped=zip,exceptions.zipping=zip,module.exports=exceptions;","const adjectiveExceptions=require(\"./wn-adjective-exceptions.js\"),nounExceptions=require(\"./wn-noun-exceptions.js\"),verbExceptions=require(\"./wn-verb-exceptions.js\"),lemmatizeAdjective=function(value,cache){var lemma=adjectiveExceptions[value];return lemma||((lemma=value.replace(/est$|er$/,\"\")).length===value.length?value:cache.hasSamePOS(lemma,\"ADJ\")?lemma:(lemma+=\"e\",cache.hasSamePOS(lemma,\"ADJ\")?lemma:value))},lemmatizeVerb=function(value,cache){var lemma=verbExceptions[value];if(lemma)return lemma;if((lemma=value.replace(/s$/,\"\")).length!==value.length&&cache.hasSamePOS(lemma,\"VERB\"))return lemma;if((lemma=value.replace(/ies$/,\"y\")).length!==value.length&&cache.hasSamePOS(lemma,\"VERB\"))return lemma;if((lemma=value.replace(/es$|ed$|ing$/,\"\")).length!==value.length){if(cache.hasSamePOS(lemma,\"VERB\"))return lemma;if(lemma+=\"e\",cache.hasSamePOS(lemma,\"VERB\"))return lemma}return value},nounRegexes=[{replace:/s$/,by:\"\"},{replace:/ses$/,by:\"s\"},{replace:/xes$/,by:\"x\"},{replace:/zes$/,by:\"s\"},{replace:/ves$/,by:\"f\"},{replace:/ches$/,by:\"ch\"},{replace:/shes$/,by:\"sh\"},{replace:/ies$/,by:\"y\"}],lemmatizeNoun=function(value,cache){var lemma=nounExceptions[value];if(lemma)return lemma;lemma=value;for(let k=0;k<nounRegexes.length;k+=1)if((lemma=value.replace(nounRegexes[k].replace,nounRegexes[k].by)).length!==value.length&&cache.hasSamePOS(lemma,\"NOUN\"))return lemma;return value.replace(/men$/,\"man\")},lemmatize=function(value,pos,cache){var lemma;switch(pos){case\"ADJ\":lemma=lemmatizeAdjective(value,cache);break;case\"NOUN\":lemma=lemmatizeNoun(value,cache);break;case\"VERB\":lemma=lemmatizeVerb(value,cache);break;default:lemma=value}return lemma};module.exports=lemmatize;","const rgx=/[^aeiouy]+/,exceptions=Object.create(null);exceptions.adobe=3,exceptions.anemone=4,exceptions.anyone=3,exceptions.apache=3,exceptions.aphrodite=4,exceptions.apostrophe=4,exceptions.ariadne=4,exceptions.chummed=1,exceptions.cafe=2,exceptions.calliope=4,exceptions.catastrophe=4,exceptions.chile=2,exceptions.chloe=2,exceptions.circe=2,exceptions.coyote=3,exceptions.daphne=2,exceptions.epitome=4,exceptions.eurydice=4,exceptions.euterpe=3,exceptions.every=2,exceptions.everywhere=3,exceptions.forever=3,exceptions.gethsemane=4,exceptions.guacamole=4,exceptions.hermione=4,exceptions.hyperbole=4,exceptions.jesse=2,exceptions.jukebox=2,exceptions.karate=3,exceptions.peeped=1,exceptions.moustaches=2,exceptions.shamefully=3,exceptions.messieurs=2,exceptions.satiated=4,exceptions.sailmaker=4,exceptions.sheered=1,exceptions.disinterred=3,exceptions.propitiatory=6,exceptions.bepatched=2,exceptions.particularized=5,exceptions.caressed=2,exceptions.trespassed=2,exceptions.sepulchre=3,exceptions.flapped=1,exceptions.hemispheres=3,exceptions.pencilled=2,exceptions.motioned=2,exceptions.machete=3,exceptions.maybe=2,exceptions.naive=2,exceptions.newlywed=3,exceptions.penelope=4,exceptions.people=2,exceptions.persephone=4,exceptions.phoebe=2,exceptions.pulse=1,exceptions.queue=1,exceptions.recipe=3,exceptions.riverbed=3,exceptions.sesame=3,exceptions.shoreline=2,exceptions.simile=3,exceptions.snuffleupagus=5,exceptions.sometimes=2,exceptions.syncope=3,exceptions.poleman=2,exceptions.slandered=2,exceptions.sombre=2,exceptions.etc=4,exceptions.sidespring=2,exceptions.mimes=1,exceptions.effaces=2,exceptions.mr=2,exceptions.mrs=2,exceptions.ms=1,exceptions.dr=2,exceptions.st=1,exceptions.sr=2,exceptions.jr=2,exceptions.truckle=2,exceptions.foamed=1,exceptions.fringed=2,exceptions.clattered=2,exceptions.capered=2,exceptions.mangroves=2,exceptions.suavely=2,exceptions.reclined=2,exceptions.brutes=1,exceptions.effaced=2,exceptions.quivered=2,exceptions.veriest=3,exceptions.sententiously=4,exceptions.deafened=2,exceptions.manoeuvred=3,exceptions.unstained=2,exceptions.gaped=1,exceptions.stammered=2,exceptions.shivered=2,exceptions.discoloured=3,exceptions.gravesend=2,exceptions.lb=1,exceptions.unexpressed=3,exceptions.greyish=2,exceptions.unostentatious=5,exceptions.tamale=3,exceptions.waterbed=3,exceptions.wednesday=2,exceptions.yosemite=4;const subtract=[/cial/,/tia/,/cius/,/cious/,/gui/,/ion/,/iou/,/sia$/,/.ely$/,/.[^aeiuoycgltdb]{2,}ed$/,/(?:s[chkls]|g[hn])ed$/,/(?:[aeiouy](?:[bdfklmnprstvy]|ch|dg|g[hn]|lch|s[cklst]))es$/,/(?:[aeiouy](?:[bcfgklmnprsvwxyz]|s[chkls]))ed$/],add=[/ia/,/riet/,/dien/,/iu/,/io/,/ii/,/[aeiouy]bl$/,/mbl$/,/[aeiou]{3}/,/^mc/,/ism$/,/(.)(?!\\\\1)([aeiouy])\\\\2l$/,/[^l]llien/,/^coad./,/^coag./,/^coal./,/^coax./,/(.)(?!\\\\1)[gq]ua(.)(?!\\\\2)[aeiou]/,/dnt$/,/eings?$/,/react?$/,/[aeiouy]sh?e[rs]$/,/(?:eo|asm|dea|gean|oa|ua|uity|thm|ism|orbed|shred)$/];var syllables=function(word){if(word.length<3)return 1;if(exceptions[word])return exceptions[word];const w=word.replace(/e$/,\"\");let count=w.split(rgx).filter((s=>s)).length;for(let k=0;k<add.length;k+=1)add[k].test(w)&&(count+=1);for(let k=0;k<subtract.length;k+=1)subtract[k].test(w)&&(count-=1);return count<1?1:count};module.exports=syllables;","var syllables=require(\"./syllables.js\");const consts=require(\"./constants.js\"),tkSize=consts.tkSize;var readabilityStats=function(rdd,its){var token,cache=rdd.cache,tokens=rdd.tokens,numOfSentences=rdd.sentences.length,numOfWords=0,numOfSyllables=0,complexWords=Object.create(null),fres=121;for(let k=0;k<tokens.length;k+=1){if(\"word\"===its.type(k,tokens,cache)){token=its.normal(k,tokens,cache),numOfWords+=1;const ns=syllables(token.toLowerCase());numOfSyllables+=ns,ns>3&&(complexWords[token]=ns-3)}fres=206.835-1.015*numOfWords/numOfSentences-84.6*numOfSyllables/numOfWords}const readingTimeInMins=numOfWords/(200+fres);return{fres:Math.round(fres),sentiment:+rdd.document[3].toFixed(2),numOfTokens:tokens.length/tkSize,numOfWords:numOfWords,numOfComplexWords:Object.keys(complexWords).length,complexWords:complexWords,numOfSentences:numOfSentences,readingTimeMins:Math.floor(readingTimeInMins),readingTimeSecs:Math.round(60*(readingTimeInMins-Math.floor(readingTimeInMins)))}};module.exports=readabilityStats;","var loadCoreModel=require(\"./load-core-model.js\"),loadNERModel=require(\"./load-ner-model.js\"),loadSBDModel=require(\"./load-sbd-model.js\"),loadPOSModel=require(\"./load-pos-model.js\"),loadNEGATIONModel=require(\"./load-negation-model.js\"),loadSAModel=require(\"./load-sa-model.js\"),loadCERMetaModel=require(\"./load-cer-meta-model.js\"),featureFn=require(\"./feature.js\"),stem=require(\"./porter-stemmer.js\"),lemmatize=require(\"./lemmatize.js\"),readabilityStats=require(\"./readability-stats.js\"),model=Object.create(null);model.core=loadCoreModel,model.sbd=loadSBDModel,model.pos=loadPOSModel,model.ner=loadNERModel,model.negation=loadNEGATIONModel,model.sa=loadSAModel,model.metaCER=loadCERMetaModel,model.featureFn=featureFn,model.addons=Object.create(null),model.addons.stem=stem,model.addons.lemmatize=lemmatize,model.addons.readabilityStats=readabilityStats,model.addons.wordVectors=void 0,module.exports=model;","import * as csv from 'csv-stream';\r\nimport { open } from 'node:fs/promises';\r\nimport * as pe from 'post-entity';\r\nimport WordCache from '../src/wordCache';\r\n\r\nconst file = process.argv[2] || '';\r\n\r\nif (file === '') {\r\n  throw new RangeError();\r\n}\r\n\r\nconst tokens = {};\r\n// Initialize the parser\r\nconst options = {\r\n  delimiter: '\\t',\r\n  endLine: '\\n',\r\n  columnOffset: 0,\r\n  escapeChar: '\"',\r\n  enclosedChar: '\"',\r\n};\r\n\r\nconst csvStream = csv.createStream(options);\r\n\r\nlet prompt = `Using a list of words where the number after the comma is how frequently the word is used, give a detailed and critical summary (without using any positive terminology) about the personality, interests, fears, and hopes of the person using these words from the list (and account for frequency): \r\n\r\n`;\r\n\r\nconst alphanumOnly = /[^a-z\\-]/g;\r\n\r\n/**\r\n *\r\n */\r\nasync function main() {\r\n  const cache = new WordCache(`${process.cwd()}/tests/test.db`, false)\r\n    .reset()\r\n    .connect();\r\n  let user_id;\r\n  const fd = await open(file, 'r');\r\n  const stream = fd.createReadStream();\r\n  stream\r\n    .pipe(csvStream)\r\n\r\n    .on('data', function (data) {\r\n      // outputs an object containing a set of key/value pair representing a line found in the csv file.\r\n      if (data.retweet !== 'False') {\r\n        return;\r\n      }\r\n\r\n      if (data.language !== 'en') {\r\n        return;\r\n      }\r\n      const tweet = data.tweet.toLowerCase();\r\n\r\n      const text = pe\r\n        .process(tweet)\r\n        .filter((tweet) => tweet.type === 'text')\r\n        .map((tweet) => tweet.raw.trim());\r\n\r\n      for (const words of text) {\r\n        const usages = cache.fetch(words);\r\n        user_id = cache.addUsages(\r\n          usages,\r\n          data.username,\r\n          new Date(data.created_at)\r\n        );\r\n      }\r\n    })\r\n\r\n    .on('close', function () {\r\n      const report = cache.getReport(user_id);\r\n      console.log(report);\r\n    });\r\n}\r\n\r\nmain();\r\n","import SqliteDatabaseConnection from 'better-sqlite3';\r\nimport { ensureFileSync } from 'fs-extra';\r\n\r\n/**\r\n * A cache of all connections\r\n */\r\nconst cache: {\r\n  [key: string]: SqliteDatabaseConnection;\r\n} = {};\r\n\r\n/**\r\n * Get a sqlite database connection\r\n */\r\nexport const getDb = (path: string) => {\r\n  if (cache[path] === undefined) {\r\n    ensureFileSync(path);\r\n    cache[path] = new SqliteDatabaseConnection(path);\r\n    cache[path].exec('PRAGMA journal_mode = OFF;');\r\n    cache[path].exec('PRAGMA synchronous = 0;');\r\n    cache[path].exec('PRAGMA cache_size = 1000000;');\r\n    cache[path].exec('PRAGMA locking_mode = EXCLUSIVE');\r\n    cache[path].exec('PRAGMA temp_store = MEMORY;');\r\n  }\r\n\r\n  return cache[path];\r\n};\r\n\r\n/**\r\n *\r\n * @param path\r\n */\r\nexport const reset = (path: string) => {\r\n  cache[path] = undefined;\r\n};\r\n\r\n/**\r\n * run\r\n */\r\nexport const run = <T = Object>(\r\n  db: SqliteDatabaseConnection,\r\n  query: string,\r\n  parameters: Object | undefined = undefined\r\n): T[] => {\r\n  const statement = db.prepare(query);\r\n  if (parameters === undefined) {\r\n    return statement.run();\r\n  } else {\r\n    return statement.bind(parameters).run();\r\n  }\r\n};\r\n\r\n/**\r\n * query\r\n * @param query sql\r\n * @param parameters Object\r\n * @param db SqliteDatabaseConnection\r\n * @return Object[]\r\n */\r\nexport const query = <T = Object>(\r\n  db: SqliteDatabaseConnection,\r\n  query: string,\r\n  parameters: Object = {}\r\n): T[] => {\r\n  const statement = db.prepare(query);\r\n  return statement.bind(parameters).all();\r\n};\r\n","import { getDb, run, query, reset } from './sqlite';\r\nimport winkNLP from 'wink-nlp';\r\nimport model from 'wink-eng-lite-web-model';\r\nimport { rmSync } from 'fs-extra';\r\n\r\nconst singleQuotes = /'/g;\r\nconst newLines = /[\\n\\r]/g;\r\nconst msInHour = 1000 * 60 * 60;\r\n\r\n// Instantiate winkNLP.\r\nconst nlp = winkNLP(model);\r\n\r\ninterface Word {\r\n  id: number;\r\n  word: string;\r\n}\r\n\r\ninterface insertResult {\r\n  lastInsertRowid: number;\r\n}\r\n\r\ninterface WordCacheEntries {\r\n  [key: string]: WordCacheEntry;\r\n}\r\n\r\ninterface WordCacheEntry {\r\n  id: number;\r\n  amount: number;\r\n}\r\n\r\ninterface UsageEntry {\r\n  hour: number;\r\n  word_id: number;\r\n  timestamp: number;\r\n}\r\n\r\ninterface User {\r\n  id: number;\r\n  username: string;\r\n}\r\n\r\ninterface UniqueWords {\r\n  hour: number;\r\n  uniqueCount: number;\r\n  count: number;\r\n  ratio: number;\r\n  // uniqueMovingAverage: number\r\n  // movingAverage: number\r\n  // uniqueDistance: number\r\n  // countDistance: number\r\n}\r\n\r\nconst queries = {\r\n  createWords: [\r\n    `CREATE TABLE IF NOT EXISTS words (\r\n     id INTEGER PRIMARY KEY,\r\n     word TEXT UNIQUE\r\n  );`,\r\n  ],\r\n  createWordHistory: [\r\n    `CREATE TABLE IF NOT EXISTS word_history (\r\n       id INTEGER PRIMARY KEY,\r\n       account_id INTEGER NOT NULL,\r\n       word_id INTEGER NOT NULL,\r\n       timestamp DATETIME DEFAULT CURRENT_TIMESTAMP,\r\n       FOREIGN KEY (word_id) REFERENCES words(id)\r\n    );`,\r\n    `CREATE INDEX IF NOT EXISTS account_idx ON word_history (account_id);`,\r\n    `CREATE INDEX IF NOT EXISTS word_idx ON word_history (word_id);`,\r\n  ],\r\n  createAccounts: [\r\n    `CREATE TABLE IF NOT EXISTS users (\r\n      id INTEGER PRIMARY KEY AUTOINCREMENT,\r\n      username TEXT NOT NULL\r\n    );`,\r\n    `CREATE INDEX IF NOT EXISTS idx_username ON users (username COLLATE NOCASE);`,\r\n  ],\r\n  insertNewWords: `INSERT OR IGNORE INTO words (word) VALUES $$;`,\r\n  insertNewWordHistory: `INSERT INTO word_history (account_id, word_id, timestamp) VALUES (:account_id, :word_id, DATETIME(:timestamp));`,\r\n  insertUser: `INSERT INTO users (username) VALUES (:username);`,\r\n  getNewWords: `SELECT id, word FROM words WHERE word IN $$;`,\r\n  getUser: `SELECT id, username FROM users WHERE username = :username LIMIT 1;`,\r\n  getUniqueWords: `SELECT \r\n      CAST(strftime('%s', strftime('%Y-%m-%d %H:00:00', timestamp)) AS INT) * 1000 AS hour, \r\n      COUNT(DISTINCT word_id) AS uniqueCount,\r\n      COUNT(word_id) AS count,\r\n      COUNT(DISTINCT word_id) / COUNT(word_id) AS ratio\r\n    FROM word_history\r\n    WHERE account_id = :account_id\r\n    GROUP BY hour\r\n    ORDER BY hour ASC;`,\r\n  getWordHistory: `SELECT \r\n      CAST(strftime('%s', strftime('%Y-%m-%d %H:00:00', timestamp)) AS INT) * 1000 AS hour, \r\n      word_id\r\n    FROM word_history\r\n    WHERE account_id = :account_id\r\n    ORDER BY hour ASC;`,\r\n  getWords: `SELECT id, word FROM words;`,\r\n};\r\n\r\nexport default class WordCache {\r\n  path: string;\r\n  connection: ReturnType<typeof getDb>;\r\n  cache: {\r\n    [key: string]: number;\r\n  } = {};\r\n\r\n  /**\r\n   *\r\n   */\r\n  constructor(\r\n    path: string = __dirname + '/../../../assets/wordCache.db',\r\n    autoConnect = true\r\n  ) {\r\n    this.path = path;\r\n    if (autoConnect) {\r\n      this.connect(path);\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param path\r\n   */\r\n  connect(path: string = this.path) {\r\n    this.connection = getDb(path);\r\n    queries.createWords.forEach((query) => this.connection.exec(query));\r\n    queries.createWordHistory.forEach((query) => this.connection.exec(query));\r\n    queries.createAccounts.forEach((query) => this.connection.exec(query));\r\n    this.populate();\r\n    return this;\r\n  }\r\n  /**\r\n   *\r\n   */\r\n  getUserId(username: string | number) {\r\n    if (typeof username === 'number') {\r\n      return username;\r\n    }\r\n\r\n    const user = query<User>(this.connection, queries.getUser, {\r\n      username,\r\n    });\r\n\r\n    if (user.length > 0) {\r\n      return user[0].id;\r\n    } else {\r\n      const result = run(this.connection, queries.insertUser, {\r\n        username,\r\n      }) as unknown as insertResult;\r\n\r\n      return result.lastInsertRowid;\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @returns\r\n   */\r\n  getReport(account_id: number) {\r\n    const timeline = query<UniqueWords>(\r\n      this.connection,\r\n      queries.getUniqueWords,\r\n      {\r\n        account_id,\r\n      }\r\n    );\r\n\r\n    if (timeline.length === 0) {\r\n      return timeline;\r\n    }\r\n\r\n    const wordHistory = query<UsageEntry>(\r\n      this.connection,\r\n      queries.getWordHistory,\r\n      {\r\n        account_id,\r\n      }\r\n    );\r\n\r\n    let time = timeline[0].hour;\r\n    const max = timeline[timeline.length - 1].hour + 1;\r\n    const times: number[] = [];\r\n    const uniqueCounts: number[] = [];\r\n    const counts: number[] = [];\r\n\r\n    for (; time < max; time += msInHour) {\r\n      times.push(time);\r\n      const event = timeline.find((event) => event.hour === time);\r\n\r\n      if (event === undefined) {\r\n        uniqueCounts.push(0);\r\n        counts.push(0);\r\n      } else {\r\n        uniqueCounts.push(event.uniqueCount);\r\n        counts.push(event.count);\r\n      }\r\n    }\r\n\r\n    const knownWords: number[] = [];\r\n    const result: UniqueWords[] = times.map((time, i) => {\r\n      let newGrammar = 0;\r\n      wordHistory\r\n        .filter((word) => word.hour === time)\r\n        .forEach((word) => {\r\n          if (knownWords.indexOf(word.word_id) === -1) {\r\n            newGrammar += 1;\r\n            knownWords.push(word.word_id);\r\n          }\r\n        });\r\n\r\n      return {\r\n        hour: time,\r\n        count: counts[i],\r\n        uniqueCount: uniqueCounts[i],\r\n        ratio: counts[i] === 0 ? 0 : uniqueCounts[i] / counts[i],\r\n        newGrammar,\r\n      };\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   *\r\n   */\r\n  reset() {\r\n    if (this.connection) {\r\n      this.connection.close();\r\n    }\r\n\r\n    reset(this.path);\r\n    rmSync(this.path);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   *\r\n   */\r\n  addUsages(\r\n    wordEntries: WordCacheEntries,\r\n    username: string | number,\r\n    timestamp: string | Date\r\n  ) {\r\n    const user_id = this.getUserId(username);\r\n    const timeValue =\r\n      timestamp instanceof Date\r\n        ? timestamp.toISOString().slice(0, -5)\r\n        : timestamp;\r\n\r\n    for (const word of Object.keys(wordEntries)) {\r\n      const entry = wordEntries[word];\r\n      for (let i = 0; i < entry.amount; i++) {\r\n        this.addUsage(entry.id, user_id, timeValue);\r\n      }\r\n    }\r\n\r\n    return user_id;\r\n  }\r\n\r\n  /**\r\n   *\r\n   */\r\n  addUsage(word_id: number, account_id: number, timestamp: string | Date) {\r\n    run(this.connection, queries.insertNewWordHistory, {\r\n      word_id,\r\n      account_id,\r\n      timestamp,\r\n    });\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   *\r\n   */\r\n  fetch(sentence: string) {\r\n    const tokens = this.tokenize(sentence);\r\n    const newWords = [];\r\n    const results: {\r\n      [key: string]: WordCacheEntry;\r\n    } = {};\r\n\r\n    for (const token of tokens) {\r\n      if (this.cache[token] === undefined) {\r\n        // Word is not cached\r\n        newWords.push(token);\r\n      } else {\r\n        // Use cache\r\n        if (results[token] === undefined) {\r\n          // Result doesn't exist\r\n          results[token] = {\r\n            id: this.cache[token],\r\n            amount: 0,\r\n          };\r\n        }\r\n\r\n        results[token].amount += 1;\r\n      }\r\n    }\r\n\r\n    // Go get new words\r\n    const newRecords = this.getsert(newWords);\r\n\r\n    for (const record of newRecords) {\r\n      this.cache[record.word] = record.id;\r\n\r\n      if (results[record.word] === undefined) {\r\n        results[record.word] = {\r\n          id: this.cache[record.word],\r\n          amount: 0,\r\n        };\r\n      }\r\n\r\n      results[record.word].amount += 1;\r\n    }\r\n\r\n    return results;\r\n  }\r\n\r\n  /**\r\n   *\r\n   */\r\n  private tokenize(sentence: string): string[] {\r\n    const doc = nlp.readDoc(\r\n      sentence.toLowerCase().replace(singleQuotes, '').replace(newLines, ' ')\r\n    );\r\n    return doc.tokens().out();\r\n  }\r\n\r\n  /**\r\n   *\r\n   */\r\n  private populate() {\r\n    const rows = query<Word>(this.connection, queries.getWords);\r\n\r\n    for (const row of rows) {\r\n      this.cache[row.word] = row.id;\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   *\r\n   */\r\n  private getsert(sentence: string | string[]) {\r\n    const tokens =\r\n      sentence instanceof Array ? sentence : this.tokenize(sentence);\r\n\r\n    if (tokens.length === 0) {\r\n      return [];\r\n    }\r\n\r\n    const words = `('${tokens.join(`'), ('`)}')`;\r\n    run(this.connection, queries.insertNewWords.replace('$$', words));\r\n\r\n    const wordList = `('${tokens.join(`', '`)}')`;\r\n    const rows = query<Word>(\r\n      this.connection,\r\n      queries.getNewWords.replace('$$', wordList),\r\n      {}\r\n    );\r\n\r\n    return rows;\r\n  }\r\n}\r\n"],"mappings":"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","names":[]}